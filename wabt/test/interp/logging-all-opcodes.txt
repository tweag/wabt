;;; TOOL: run-interp
;;; ARGS*: -v --enable-all
;;; ARGS1: --host-print

(module
  (import "host" "print" (func $print (param i32)))

  (type $empty (func))
  (func $empty)
  (memory 1 1 shared)
  (table $table1 anyfunc (elem $empty $empty))
  (global $g (mut i32) (i32.const 0))
  (data "")
  (elem funcref)

  (; 0x00 ;) (func (export "unreachable") unreachable)
  (; 0x01 ;) ;; nop       -- not generated in interpreter
  (; 0x02 ;) ;; block     -- not generated in interpreter
  (; 0x03 ;) ;; loop      -- not generated in interpreter
  (; 0x04 ;) ;; if        -- not generated in interpreter
  (; 0x05 ;) ;; else      -- not generated in interpreter
  (; 0x06 ;) ;; try       -- not implemented
  (; 0x07 ;) ;; catch     -- not implemented
  (; 0x08 ;) ;; throw     -- not implemented
  (; 0x09 ;) ;; rethrow   -- not implemented
  (; 0x0a ;) ;; catch_all -- not implemented
  (; 0x0b ;) ;; end       -- not generated in interpreter
  (; 0x0c ;) (func (export "br") br 0)
  (; 0x0d ;) ;; 0x0d br_if  ;; not generated in interpreter
  (; 0x0e ;) (func (export "br_table") i32.const 1 br_table 0)
  (; 0x0f ;) (func (export "return") return)
  (; 0x10 ;) (func (export "call") call $empty)
  (; 0x11 ;) (func (export "call_indirect") i32.const 1 call_indirect (type $empty))

  ;; --enable-tail-call
  (; 0x12 ;) (func (export "return_call") return_call $empty)
  (; 0x13 ;) (func (export "return_call_indirect") i32.const 1 return_call_indirect (type $empty))

  (; 0x1a ;) (func (export "drop") i32.const 1 drop)
  (; 0x1b ;) (func (export "select") i32.const 1 i32.const 2 i32.const 3 select drop)
  (; 0x1c ;) (func (export "select_t") i32.const 1 i32.const 2 i32.const 3 select (result i32) drop)
  (; 0x20 ;) (func (export "get_local") (local i32) get_local 0 drop)
  (; 0x21 ;) (func (export "set_local") (local i32) i32.const 1 set_local 0)
  (; 0x22 ;) (func (export "tee_local") (local i32) i32.const 1 tee_local 0 drop)
  (; 0x23 ;) (func (export "get_global") get_global 0 drop)
  (; 0x24 ;) (func (export "set_global") i32.const 1 set_global 0)
  (; 0x28 ;) (func (export "i32.load") i32.const 1 i32.load offset=2 drop)
  (; 0x29 ;) (func (export "i64.load") i32.const 1 i64.load offset=2 drop)
  (; 0x2a ;) (func (export "f32.load") i32.const 1 f32.load offset=2 drop)
  (; 0x2b ;) (func (export "f64.load") i32.const 1 f64.load offset=2 drop)
  (; 0x2c ;) (func (export "i32.load8_s") i32.const 1 i32.load8_s offset=2 drop)
  (; 0x2d ;) (func (export "i32.load8_u") i32.const 1 i32.load8_u offset=2 drop)
  (; 0x2e ;) (func (export "i32.load16_s") i32.const 1 i32.load16_s offset=2 drop)
  (; 0x2f ;) (func (export "i32.load16_u") i32.const 1 i32.load16_u offset=2 drop)
  (; 0x30 ;) (func (export "i64.load8_s") i32.const 1 i64.load8_s offset=2 drop)
  (; 0x31 ;) (func (export "i64.load8_u") i32.const 1 i64.load8_u offset=2 drop)
  (; 0x32 ;) (func (export "i64.load16_s") i32.const 1 i64.load16_s offset=2 drop)
  (; 0x33 ;) (func (export "i64.load16_u") i32.const 1 i64.load16_u offset=2 drop)
  (; 0x34 ;) (func (export "i64.load32_s") i32.const 1 i64.load32_s offset=2 drop)
  (; 0x35 ;) (func (export "i64.load32_u") i32.const 1 i64.load32_u offset=2 drop)
  (; 0x36 ;) (func (export "i32.store") i32.const 1 i32.const 2 i32.store offset=2)
  (; 0x37 ;) (func (export "i64.store") i32.const 1 i64.const 2 i64.store offset=2)
  (; 0x38 ;) (func (export "f32.store") i32.const 1 f32.const 2 f32.store offset=2)
  (; 0x39 ;) (func (export "f64.store") i32.const 1 f64.const 2 f64.store offset=2)
  (; 0x3a ;) (func (export "i32.store8") i32.const 1 i32.const 2 i32.store8 offset=2)
  (; 0x3b ;) (func (export "i32.store16") i32.const 1 i32.const 2 i32.store16 offset=2)
  (; 0x3c ;) (func (export "i64.store8") i32.const 1 i64.const 2 i64.store8 offset=2)
  (; 0x3d ;) (func (export "i64.store16") i32.const 1 i64.const 2 i64.store16 offset=2)
  (; 0x3e ;) (func (export "i64.store32") i32.const 1 i64.const 2 i64.store32 offset=2)
  (; 0x3f ;) (func (export "current_memory") current_memory drop)
  (; 0x40 ;) (func (export "grow_memory") i32.const 1 grow_memory drop)
  (; 0x41 ;) (func (export "i32.const") i32.const 1 drop)
  (; 0x42 ;) (func (export "i64.const") i64.const 1 drop)
  (; 0x43 ;) (func (export "f32.const") f32.const 1 drop)
  (; 0x44 ;) (func (export "f64.const") f64.const 1 drop)
  (; 0x45 ;) (func (export "i32.eqz") i32.const 1 i32.eqz drop)
  (; 0x46 ;) (func (export "i32.eq") i32.const 1 i32.const 2 i32.eq drop)
  (; 0x47 ;) (func (export "i32.ne") i32.const 1 i32.const 2 i32.ne drop)
  (; 0x48 ;) (func (export "i32.lt_s") i32.const 1 i32.const 2 i32.lt_s drop)
  (; 0x49 ;) (func (export "i32.lt_u") i32.const 1 i32.const 2 i32.lt_u drop)
  (; 0x4a ;) (func (export "i32.gt_s") i32.const 1 i32.const 2 i32.gt_s drop)
  (; 0x4b ;) (func (export "i32.gt_u") i32.const 1 i32.const 2 i32.gt_u drop)
  (; 0x4c ;) (func (export "i32.le_s") i32.const 1 i32.const 2 i32.le_s drop)
  (; 0x4d ;) (func (export "i32.le_u") i32.const 1 i32.const 2 i32.le_u drop)
  (; 0x4e ;) (func (export "i32.ge_s") i32.const 1 i32.const 2 i32.ge_s drop)
  (; 0x4f ;) (func (export "i32.ge_u") i32.const 1 i32.const 2 i32.ge_u drop)
  (; 0x50 ;) (func (export "i64.eqz") i64.const 1 i64.eqz drop)
  (; 0x51 ;) (func (export "i64.eq") i64.const 1 i64.const 2 i64.eq drop)
  (; 0x52 ;) (func (export "i64.ne") i64.const 1 i64.const 2 i64.ne drop)
  (; 0x53 ;) (func (export "i64.lt_s") i64.const 1 i64.const 2 i64.lt_s drop)
  (; 0x54 ;) (func (export "i64.lt_u") i64.const 1 i64.const 2 i64.lt_u drop)
  (; 0x55 ;) (func (export "i64.gt_s") i64.const 1 i64.const 2 i64.gt_s drop)
  (; 0x56 ;) (func (export "i64.gt_u") i64.const 1 i64.const 2 i64.gt_u drop)
  (; 0x57 ;) (func (export "i64.le_s") i64.const 1 i64.const 2 i64.le_s drop)
  (; 0x58 ;) (func (export "i64.le_u") i64.const 1 i64.const 2 i64.le_u drop)
  (; 0x59 ;) (func (export "i64.ge_s") i64.const 1 i64.const 2 i64.ge_s drop)
  (; 0x5a ;) (func (export "i64.ge_u") i64.const 1 i64.const 2 i64.ge_u drop)
  (; 0x5b ;) (func (export "f32.eq") f32.const 1 f32.const 2 f32.eq drop)
  (; 0x5c ;) (func (export "f32.ne") f32.const 1 f32.const 2 f32.ne drop)
  (; 0x5d ;) (func (export "f32.lt") f32.const 1 f32.const 2 f32.lt drop)
  (; 0x5e ;) (func (export "f32.gt") f32.const 1 f32.const 2 f32.gt drop)
  (; 0x5f ;) (func (export "f32.le") f32.const 1 f32.const 2 f32.le drop)
  (; 0x60 ;) (func (export "f32.ge") f32.const 1 f32.const 2 f32.ge drop)
  (; 0x61 ;) (func (export "f64.eq") f64.const 1 f64.const 2 f64.eq drop)
  (; 0x62 ;) (func (export "f64.ne") f64.const 1 f64.const 2 f64.ne drop)
  (; 0x63 ;) (func (export "f64.lt") f64.const 1 f64.const 2 f64.lt drop)
  (; 0x64 ;) (func (export "f64.gt") f64.const 1 f64.const 2 f64.gt drop)
  (; 0x65 ;) (func (export "f64.le") f64.const 1 f64.const 2 f64.le drop)
  (; 0x66 ;) (func (export "f64.ge") f64.const 1 f64.const 2 f64.ge drop)
  (; 0x67 ;) (func (export "i32.clz") i32.const 1 i32.clz drop)
  (; 0x68 ;) (func (export "i32.ctz") i32.const 1 i32.ctz drop)
  (; 0x69 ;) (func (export "i32.popcnt") i32.const 1 i32.popcnt drop)
  (; 0x6a ;) (func (export "i32.add") i32.const 1 i32.const 2 i32.add drop)
  (; 0x6b ;) (func (export "i32.sub") i32.const 1 i32.const 2 i32.sub drop)
  (; 0x6c ;) (func (export "i32.mul") i32.const 1 i32.const 2 i32.mul drop)
  (; 0x6d ;) (func (export "i32.div_s") i32.const 1 i32.const 2 i32.div_s drop)
  (; 0x6e ;) (func (export "i32.div_u") i32.const 1 i32.const 2 i32.div_u drop)
  (; 0x6f ;) (func (export "i32.rem_s") i32.const 1 i32.const 2 i32.rem_s drop)
  (; 0x70 ;) (func (export "i32.rem_u") i32.const 1 i32.const 2 i32.rem_u drop)
  (; 0x71 ;) (func (export "i32.and") i32.const 1 i32.const 2 i32.and drop)
  (; 0x72 ;) (func (export "i32.or") i32.const 1 i32.const 2 i32.or drop)
  (; 0x73 ;) (func (export "i32.xor") i32.const 1 i32.const 2 i32.xor drop)
  (; 0x74 ;) (func (export "i32.shl") i32.const 1 i32.const 2 i32.shl drop)
  (; 0x75 ;) (func (export "i32.shr_s") i32.const 1 i32.const 2 i32.shr_s drop)
  (; 0x76 ;) (func (export "i32.shr_u") i32.const 1 i32.const 2 i32.shr_u drop)
  (; 0x77 ;) (func (export "i32.rotl") i32.const 1 i32.const 2 i32.rotl drop)
  (; 0x78 ;) (func (export "i32.rotr") i32.const 1 i32.const 2 i32.rotr drop)
  (; 0x79 ;) (func (export "i64.clz") i64.const 1 i64.clz drop)
  (; 0x7a ;) (func (export "i64.ctz") i64.const 1 i64.ctz drop)
  (; 0x7b ;) (func (export "i64.popcnt") i64.const 1 i64.popcnt drop)
  (; 0x7c ;) (func (export "i64.add") i64.const 1 i64.const 2 i64.add drop)
  (; 0x7d ;) (func (export "i64.sub") i64.const 1 i64.const 2 i64.sub drop)
  (; 0x7e ;) (func (export "i64.mul") i64.const 1 i64.const 2 i64.mul drop)
  (; 0x7f ;) (func (export "i64.div_s") i64.const 1 i64.const 2 i64.div_s drop)
  (; 0x80 ;) (func (export "i64.div_u") i64.const 1 i64.const 2 i64.div_u drop)
  (; 0x81 ;) (func (export "i64.rem_s") i64.const 1 i64.const 2 i64.rem_s drop)
  (; 0x82 ;) (func (export "i64.rem_u") i64.const 1 i64.const 2 i64.rem_u drop)
  (; 0x83 ;) (func (export "i64.and") i64.const 1 i64.const 2 i64.and drop)
  (; 0x84 ;) (func (export "i64.or") i64.const 1 i64.const 2 i64.or drop)
  (; 0x85 ;) (func (export "i64.xor") i64.const 1 i64.const 2 i64.xor drop)
  (; 0x86 ;) (func (export "i64.shl") i64.const 1 i64.const 2 i64.shl drop)
  (; 0x87 ;) (func (export "i64.shr_s") i64.const 1 i64.const 2 i64.shr_s drop)
  (; 0x88 ;) (func (export "i64.shr_u") i64.const 1 i64.const 2 i64.shr_u drop)
  (; 0x89 ;) (func (export "i64.rotl") i64.const 1 i64.const 2 i64.rotl drop)
  (; 0x8a ;) (func (export "i64.rotr") i64.const 1 i64.const 2 i64.rotr drop)
  (; 0x8b ;) (func (export "f32.abs") f32.const 1 f32.abs drop)
  (; 0x8c ;) (func (export "f32.neg") f32.const 1 f32.neg drop)
  (; 0x8d ;) (func (export "f32.ceil") f32.const 1 f32.ceil drop)
  (; 0x8e ;) (func (export "f32.floor") f32.const 1 f32.floor drop)
  (; 0x8f ;) (func (export "f32.trunc") f32.const 1 f32.trunc drop)
  (; 0x90 ;) (func (export "f32.nearest") f32.const 1 f32.nearest drop)
  (; 0x91 ;) (func (export "f32.sqrt") f32.const 1 f32.sqrt drop)
  (; 0x92 ;) (func (export "f32.add") f32.const 1 f32.const 2 f32.add drop)
  (; 0x93 ;) (func (export "f32.sub") f32.const 1 f32.const 2 f32.sub drop)
  (; 0x94 ;) (func (export "f32.mul") f32.const 1 f32.const 2 f32.mul drop)
  (; 0x95 ;) (func (export "f32.div") f32.const 1 f32.const 2 f32.div drop)
  (; 0x96 ;) (func (export "f32.min") f32.const 1 f32.const 2 f32.min drop)
  (; 0x97 ;) (func (export "f32.max") f32.const 1 f32.const 2 f32.max drop)
  (; 0x98 ;) (func (export "f32.copysign") f32.const 1 f32.const 2 f32.copysign drop)
  (; 0x99 ;) (func (export "f64.abs") f64.const 1 f64.abs drop)
  (; 0x9a ;) (func (export "f64.neg") f64.const 1 f64.neg drop)
  (; 0x9b ;) (func (export "f64.ceil") f64.const 1 f64.ceil drop)
  (; 0x9c ;) (func (export "f64.floor") f64.const 1 f64.floor drop)
  (; 0x9d ;) (func (export "f64.trunc") f64.const 1 f64.trunc drop)
  (; 0x9e ;) (func (export "f64.nearest") f64.const 1 f64.nearest drop)
  (; 0x9f ;) (func (export "f64.sqrt") f64.const 1 f64.sqrt drop)
  (; 0xa0 ;) (func (export "f64.add") f64.const 1 f64.const 2 f64.add drop)
  (; 0xa1 ;) (func (export "f64.sub") f64.const 1 f64.const 2 f64.sub drop)
  (; 0xa2 ;) (func (export "f64.mul") f64.const 1 f64.const 2 f64.mul drop)
  (; 0xa3 ;) (func (export "f64.div") f64.const 1 f64.const 2 f64.div drop)
  (; 0xa4 ;) (func (export "f64.min") f64.const 1 f64.const 2 f64.min drop)
  (; 0xa5 ;) (func (export "f64.max") f64.const 1 f64.const 2 f64.max drop)
  (; 0xa6 ;) (func (export "f64.copysign") f64.const 1 f64.const 2 f64.copysign drop)
  (; 0xa7 ;) (func (export "i32.wrap/i64") i64.const 1 i32.wrap/i64 drop)
  (; 0xa8 ;) (func (export "i32.trunc_s/f32") f32.const 1 i32.trunc_s/f32 drop)
  (; 0xa9 ;) (func (export "i32.trunc_u/f32") f32.const 1 i32.trunc_u/f32 drop)
  (; 0xaa ;) (func (export "i32.trunc_s/f64") f64.const 1 i32.trunc_s/f64 drop)
  (; 0xab ;) (func (export "i32.trunc_u/f64") f64.const 1 i32.trunc_u/f64 drop)
  (; 0xac ;) (func (export "i64.extend_s/i32") i32.const 1 i64.extend_s/i32 drop)
  (; 0xad ;) (func (export "i64.extend_u/i32") i32.const 1 i64.extend_u/i32 drop)
  (; 0xae ;) (func (export "i64.trunc_s/f32") f32.const 1 i64.trunc_s/f32 drop)
  (; 0xaf ;) (func (export "i64.trunc_u/f32") f32.const 1 i64.trunc_u/f32 drop)
  (; 0xb0 ;) (func (export "i64.trunc_s/f64") f64.const 1 i64.trunc_s/f64 drop)
  (; 0xb1 ;) (func (export "i64.trunc_u/f64") f64.const 1 i64.trunc_u/f64 drop)
  (; 0xb2 ;) (func (export "f32.convert_s/i32") i32.const 1 f32.convert_s/i32 drop)
  (; 0xb3 ;) (func (export "f32.convert_u/i32") i32.const 1 f32.convert_u/i32 drop)
  (; 0xb4 ;) (func (export "f32.convert_s/i64") i64.const 1 f32.convert_s/i64 drop)
  (; 0xb5 ;) (func (export "f32.convert_u/i64") i64.const 1 f32.convert_u/i64 drop)
  (; 0xb6 ;) (func (export "f32.demote/f64") f64.const 1 f32.demote/f64 drop)
  (; 0xb7 ;) (func (export "f64.convert_s/i32") i32.const 1 f64.convert_s/i32 drop)
  (; 0xb8 ;) (func (export "f64.convert_u/i32") i32.const 1 f64.convert_u/i32 drop)
  (; 0xb9 ;) (func (export "f64.convert_s/i64") i64.const 1 f64.convert_s/i64 drop)
  (; 0xba ;) (func (export "f64.convert_u/i64") i64.const 1 f64.convert_u/i64 drop)
  (; 0xbb ;) (func (export "f64.promote/f32") f32.const 1 f64.promote/f32 drop)
  (; 0xbc ;) (func (export "i32.reinterpret/f32") i32.const 1 f32.reinterpret/i32 drop)
  (; 0xbd ;) (func (export "f32.reinterpret/i32") f32.const 1 i32.reinterpret/f32 drop)
  (; 0xbe ;) (func (export "i64.reinterpret/f64") i64.const 1 f64.reinterpret/i64 drop)
  (; 0xbf ;) (func (export "f64.reinterpret/i64") f64.const 1 i64.reinterpret/f64 drop)

  ;; --enable-sign-extension
  (; 0xc0 ;) (func (export "i32.extend8_s") i32.const 1 i32.extend8_s drop)
  (; 0xc1 ;) (func (export "i32.extend16_s") i32.const 1 i32.extend16_s drop)
  (; 0xc2 ;) (func (export "i64.extend8_s") i64.const 1 i64.extend8_s drop)
  (; 0xc3 ;) (func (export "i64.extend16_s") i64.const 1 i64.extend16_s drop)
  (; 0xc4 ;) (func (export "i64.extend32_s") i64.const 1 i64.extend32_s drop)

  ;; Interpreter opcodes
  (; 0xe0 ;) (func (export "alloca") (local i32))
  (; 0xe1 ;) (func (export "br_unless") i32.const 1 br_if 0)
  (; 0xe2 ;) (func (export "call_host") i32.const 1 call $print)
  (; 0xe3 ;) (func (export "data") i32.const 1 br_table 0)
  (; 0xe4 ;) (func (export "drop_keep") block (result i32) i32.const 1 i32.const 2 br 0 end drop)

  ;; --enable-saturating-float-to-int
  (; 0xfc 0x00 ;) (func (export "i32.trunc_s:sat/f32") f32.const 1 i32.trunc_s:sat/f32 drop)
  (; 0xfc 0x01 ;) (func (export "i32.trunc_u:sat/f32") f32.const 1 i32.trunc_u:sat/f32 drop)
  (; 0xfc 0x02 ;) (func (export "i32.trunc_s:sat/f64") f64.const 1 i32.trunc_s:sat/f64 drop)
  (; 0xfc 0x03 ;) (func (export "i32.trunc_u:sat/f64") f64.const 1 i32.trunc_u:sat/f64 drop)
  (; 0xfc 0x04 ;) (func (export "i64.trunc_s:sat/f32") f32.const 1 i64.trunc_s:sat/f32 drop)
  (; 0xfc 0x05 ;) (func (export "i64.trunc_u:sat/f32") f32.const 1 i64.trunc_u:sat/f32 drop)
  (; 0xfc 0x06 ;) (func (export "i64.trunc_s:sat/f64") f64.const 1 i64.trunc_s:sat/f64 drop)
  (; 0xfc 0x07 ;) (func (export "i64.trunc_u:sat/f64") f64.const 1 i64.trunc_u:sat/f64 drop)

  (; 0xfc 0x08 ;) (func (export "memory.init") i32.const 1 i32.const 2 i32.const 3 memory.init 0)
  (; 0xfc 0x09 ;) (func (export "data.drop") data.drop 0)
  (; 0xfc 0x0a ;) (func (export "memory.copy") i32.const 1 i32.const 2 i32.const 3 memory.copy)
  (; 0xfc 0x0b ;) (func (export "memory.fill") i32.const 1 i32.const 2 i32.const 3 memory.fill)
  (; 0xfc 0x0c ;) (func (export "table.init") i32.const 1 i32.const 2 i32.const 3 table.init 0)
  (; 0xfc 0x0d ;) (func (export "elem.drop") elem.drop 0)
  (; 0xfc 0x0e ;) (func (export "table.copy") i32.const 1 i32.const 2 i32.const 3 table.copy)

  ;; --enable-simd
  (; 0xfd 0x00 ;) (func (export "v128.load") i32.const 1 v128.load offset=3 drop)
  (; 0xfd 0x01 ;) (func (export "v128.store") i32.const 1 v128.const i32x4 1 1 1 1 v128.store offset=3)
  (; 0xfd 0x02 ;) (func (export "v128.const") v128.const i32x4 1 1 1 1 drop)
  (; 0xfd 0x04 ;) (func (export "i8x16.splat") i32.const 1 i8x16.splat drop)
  (; 0xfd 0x05 ;) (func (export "i8x16.extract_lane_s") v128.const i32x4 1 1 1 1 i8x16.extract_lane_s 15 drop)
  (; 0xfd 0x06 ;) (func (export "i8x16.extract_lane_u") v128.const i32x4 1 1 1 1 i8x16.extract_lane_u 15 drop)
  (; 0xfd 0x07 ;) (func (export "i8x16.replace_lane") v128.const i32x4 1 1 1 1 i32.const 0 i8x16.replace_lane 15 drop)
  (; 0xfd 0x08 ;) (func (export "i16x8.splat") i32.const 1 i16x8.splat drop)
  (; 0xfd 0x09 ;) (func (export "i16x8.extract_lane_s") v128.const i32x4 1 1 1 1 i16x8.extract_lane_s 7 drop)
  (; 0xfd 0x0a ;) (func (export "i16x8.extract_lane_u") v128.const i32x4 1 1 1 1 i16x8.extract_lane_u 7 drop)
  (; 0xfd 0x0b ;) (func (export "i16x8.replace_lane") v128.const i32x4 1 1 1 1 i32.const 0 i16x8.replace_lane 7 drop)
  (; 0xfd 0x0c ;) (func (export "i32x4.splat") i32.const 1 i32x4.splat drop)
  (; 0xfd 0x0d ;) (func (export "i32x4.extract_lane") v128.const i32x4 1 1 1 1 i32x4.extract_lane 3 drop)
  (; 0xfd 0x0e ;) (func (export "i32x4.replace_lane") v128.const i32x4 1 1 1 1 i32.const 0 i32x4.replace_lane 3 drop)
  (; 0xfd 0x0f ;) (func (export "i64x2.splat") i64.const 1 i64x2.splat drop)
  (; 0xfd 0x10 ;) (func (export "i64x2.extract_lane") v128.const i32x4 1 1 1 1 i64x2.extract_lane 1 drop)
  (; 0xfd 0x11 ;) (func (export "i64x2.replace_lane") v128.const i32x4 1 1 1 1 i64.const 0 i64x2.replace_lane 1 drop)
  (; 0xfd 0x12 ;) (func (export "f32x4.splat") f32.const 1 f32x4.splat drop)
  (; 0xfd 0x13 ;) (func (export "f32x4.extract_lane") v128.const i32x4 1 1 1 1 f32x4.extract_lane 3 drop)
  (; 0xfd 0x14 ;) (func (export "f32x4.replace_lane") v128.const i32x4 1 1 1 1 f32.const 0 f32x4.replace_lane 3 drop)
  (; 0xfd 0x15 ;) (func (export "f64x2.splat") f64.const 1 f64x2.splat drop)
  (; 0xfd 0x16 ;) (func (export "f64x2.extract_lane") v128.const i32x4 1 1 1 1 f64x2.extract_lane 1 drop)
  (; 0xfd 0x17 ;) (func (export "f64x2.replace_lane") v128.const i32x4 1 1 1 1 f64.const 0 f64x2.replace_lane 1 drop)
  (; 0xfd 0x18 ;) (func (export "i8x16.eq") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.eq drop)
  (; 0xfd 0x19 ;) (func (export "i8x16.ne") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.ne drop)
  (; 0xfd 0x1a ;) (func (export "i8x16.lt_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.lt_s drop)
  (; 0xfd 0x1b ;) (func (export "i8x16.lt_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.lt_u drop)
  (; 0xfd 0x1c ;) (func (export "i8x16.gt_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.gt_s drop)
  (; 0xfd 0x1d ;) (func (export "i8x16.gt_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.gt_u drop)
  (; 0xfd 0x1e ;) (func (export "i8x16.le_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.le_s drop)
  (; 0xfd 0x1f ;) (func (export "i8x16.le_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.le_u drop)
  (; 0xfd 0x20 ;) (func (export "i8x16.ge_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.ge_s drop)
  (; 0xfd 0x21 ;) (func (export "i8x16.ge_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.ge_u drop)
  (; 0xfd 0x22 ;) (func (export "i16x8.eq") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.eq drop)
  (; 0xfd 0x23 ;) (func (export "i16x8.ne") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.ne drop)
  (; 0xfd 0x24 ;) (func (export "i16x8.lt_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.lt_s drop)
  (; 0xfd 0x25 ;) (func (export "i16x8.lt_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.lt_u drop)
  (; 0xfd 0x26 ;) (func (export "i16x8.gt_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.gt_s drop)
  (; 0xfd 0x27 ;) (func (export "i16x8.gt_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.gt_u drop)
  (; 0xfd 0x28 ;) (func (export "i16x8.le_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.le_s drop)
  (; 0xfd 0x29 ;) (func (export "i16x8.le_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.le_u drop)
  (; 0xfd 0x2a ;) (func (export "i16x8.ge_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.ge_s drop)
  (; 0xfd 0x2b ;) (func (export "i16x8.ge_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.ge_u drop)
  (; 0xfd 0x2c ;) (func (export "i32x4.eq") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.eq drop)
  (; 0xfd 0x2d ;) (func (export "i32x4.ne") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.ne drop)
  (; 0xfd 0x2e ;) (func (export "i32x4.lt_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.lt_s drop)
  (; 0xfd 0x2f ;) (func (export "i32x4.lt_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.lt_u drop)
  (; 0xfd 0x30 ;) (func (export "i32x4.gt_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.gt_s drop)
  (; 0xfd 0x31 ;) (func (export "i32x4.gt_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.gt_u drop)
  (; 0xfd 0x32 ;) (func (export "i32x4.le_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.le_s drop)
  (; 0xfd 0x33 ;) (func (export "i32x4.le_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.le_u drop)
  (; 0xfd 0x34 ;) (func (export "i32x4.ge_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.ge_s drop)
  (; 0xfd 0x35 ;) (func (export "i32x4.ge_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.ge_u drop)
  (; 0xfd 0x40 ;) (func (export "f32x4.eq") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.eq drop)
  (; 0xfd 0x41 ;) (func (export "f32x4.ne") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.ne drop)
  (; 0xfd 0x42 ;) (func (export "f32x4.lt") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.lt drop)
  (; 0xfd 0x43 ;) (func (export "f32x4.gt") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.gt drop)
  (; 0xfd 0x44 ;) (func (export "f32x4.le") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.le drop)
  (; 0xfd 0x45 ;) (func (export "f32x4.ge") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.ge drop)
  (; 0xfd 0x46 ;) (func (export "f64x2.eq") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.eq drop)
  (; 0xfd 0x47 ;) (func (export "f64x2.ne") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.ne drop)
  (; 0xfd 0x48 ;) (func (export "f64x2.lt") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.lt drop)
  (; 0xfd 0x49 ;) (func (export "f64x2.gt") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.gt drop)
  (; 0xfd 0x4a ;) (func (export "f64x2.le") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.le drop)
  (; 0xfd 0x4b ;) (func (export "f64x2.ge") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.ge drop)
  (; 0xfd 0x4c ;) (func (export "v128.not") v128.const i32x4 1 1 1 1 v128.not drop)
  (; 0xfd 0x4d ;) (func (export "v128.and") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 v128.and drop)
  (; 0xfd 0x4e ;) (func (export "v128.or") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 v128.or drop)
  (; 0xfd 0x4f ;) (func (export "v128.xor") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 v128.xor drop)
  (; 0xfd 0x50 ;) (func (export "v128.bitselect") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 v128.const i32x4 3 3 3 3 v128.bitselect drop)
  (; 0xfd 0x51 ;) (func (export "i8x16.neg") v128.const i32x4 1 1 1 1 i8x16.neg drop)
  (; 0xfd 0x52 ;) (func (export "i8x16.any_true") v128.const i32x4 1 1 1 1 i8x16.any_true drop)
  (; 0xfd 0x53 ;) (func (export "i8x16.all_true") v128.const i32x4 1 1 1 1 i8x16.all_true drop)
  (; 0xfd 0x54 ;) (func (export "i8x16.shl") v128.const i32x4 1 1 1 1 i32.const 0 i8x16.shl drop)
  (; 0xfd 0x55 ;) (func (export "i8x16.shr_s") v128.const i32x4 1 1 1 1 i32.const 0 i8x16.shr_s drop)
  (; 0xfd 0x56 ;) (func (export "i8x16.shr_u") v128.const i32x4 1 1 1 1 i32.const 0 i8x16.shr_u drop)
  (; 0xfd 0x57 ;) (func (export "i8x16.add") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.add drop)
  (; 0xfd 0x58 ;) (func (export "i8x16.add_saturate_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.add_saturate_s drop)
  (; 0xfd 0x59 ;) (func (export "i8x16.add_saturate_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.add_saturate_u drop)
  (; 0xfd 0x5a ;) (func (export "i8x16.sub") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.sub drop)
  (; 0xfd 0x5b ;) (func (export "i8x16.sub_saturate_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.sub_saturate_s drop)
  (; 0xfd 0x5c ;) (func (export "i8x16.sub_saturate_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.sub_saturate_u drop)
  (; 0xfd 0x5e ;) (func (export "i8x16.min_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.min_s drop)
  (; 0xfd 0x5f ;) (func (export "i8x16.min_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.min_u drop)
  (; 0xfd 0x60 ;) (func (export "i8x16.max_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.max_s drop)
  (; 0xfd 0x61 ;) (func (export "i8x16.max_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.max_u drop)
  (; 0xfd 0x62 ;) (func (export "i16x8.neg") v128.const i32x4 1 1 1 1 i16x8.neg drop)
  (; 0xfd 0x63 ;) (func (export "i16x8.any_true") v128.const i32x4 1 1 1 1 i16x8.any_true drop)
  (; 0xfd 0x64 ;) (func (export "i16x8.all_true") v128.const i32x4 1 1 1 1 i16x8.all_true drop)
  (; 0xfd 0x65 ;) (func (export "i16x8.shl") v128.const i32x4 1 1 1 1 i32.const 0 i16x8.shl drop)
  (; 0xfd 0x66 ;) (func (export "i16x8.shr_s") v128.const i32x4 1 1 1 1 i32.const 0 i16x8.shr_s drop)
  (; 0xfd 0x67 ;) (func (export "i16x8.shr_u") v128.const i32x4 1 1 1 1 i32.const 0 i16x8.shr_u drop)
  (; 0xfd 0x68 ;) (func (export "i16x8.add") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.add drop)
  (; 0xfd 0x69 ;) (func (export "i16x8.add_saturate_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.add_saturate_s drop)
  (; 0xfd 0x6a ;) (func (export "i16x8.add_saturate_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.add_saturate_u drop)
  (; 0xfd 0x6b ;) (func (export "i16x8.sub") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.sub drop)
  (; 0xfd 0x6c ;) (func (export "i16x8.sub_saturate_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.sub_saturate_s drop)
  (; 0xfd 0x6d ;) (func (export "i16x8.sub_saturate_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.sub_saturate_u drop)
  (; 0xfd 0x6e ;) (func (export "i16x8.mul") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.mul drop)
  (; 0xfd 0x6f ;) (func (export "i16x8.min_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.min_s drop)
  (; 0xfd 0x70 ;) (func (export "i16x8.min_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.min_u drop)
  (; 0xfd 0x71 ;) (func (export "i16x8.max_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.max_s drop)
  (; 0xfd 0x72 ;) (func (export "i16x8.max_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.max_u drop)
  (; 0xfd 0x73 ;) (func (export "i32x4.neg") v128.const i32x4 1 1 1 1 i32x4.neg drop)
  (; 0xfd 0x74 ;) (func (export "i32x4.any_true") v128.const i32x4 1 1 1 1 i32x4.any_true drop)
  (; 0xfd 0x75 ;) (func (export "i32x4.all_true") v128.const i32x4 1 1 1 1 i32x4.all_true drop)
  (; 0xfd 0x76 ;) (func (export "i32x4.shl") v128.const i32x4 1 1 1 1 i32.const 0 i32x4.shl drop)
  (; 0xfd 0x77 ;) (func (export "i32x4.shr_s") v128.const i32x4 1 1 1 1 i32.const 0 i32x4.shr_s drop)
  (; 0xfd 0x78 ;) (func (export "i32x4.shr_u") v128.const i32x4 1 1 1 1 i32.const 0 i32x4.shr_u drop)
  (; 0xfd 0x79 ;) (func (export "i32x4.add") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.add drop)
  (; 0xfd 0x7c ;) (func (export "i32x4.sub") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.sub drop)
  (; 0xfd 0x7f ;) (func (export "i32x4.mul") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.mul drop)
  (; 0xfd 0x80 ;) (func (export "i32x4.min_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.min_s drop)
  (; 0xfd 0x81 ;) (func (export "i32x4.min_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.min_u drop)
  (; 0xfd 0x82 ;) (func (export "i32x4.max_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.max_s drop)
  (; 0xfd 0x83 ;) (func (export "i32x4.max_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.max_u drop)
  (; 0xfd 0x84 ;) (func (export "i64x2.neg") v128.const i32x4 1 1 1 1 i64x2.neg drop)
  (; 0xfd 0x87 ;) (func (export "i64x2.shl") v128.const i32x4 1 1 1 1 i32.const 0 i64x2.shl drop)
  (; 0xfd 0x88 ;) (func (export "i64x2.shr_s") v128.const i32x4 1 1 1 1 i32.const 0 i64x2.shr_s drop)
  (; 0xfd 0x89 ;) (func (export "i64x2.shr_u") v128.const i32x4 1 1 1 1 i32.const 0 i64x2.shr_u drop)
  (; 0xfd 0x8a ;) (func (export "i64x2.add") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i64x2.add drop)
  (; 0xfd 0x8d ;) (func (export "i64x2.sub") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i64x2.sub drop)
  (; 0xfd 0x90 ;) (func (export "i64x2.mul") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i64x2.mul drop)
  (; 0xfd 0x95 ;) (func (export "f32x4.abs") v128.const i32x4 1 1 1 1 f32x4.abs drop)
  (; 0xfd 0x96 ;) (func (export "f32x4.neg") v128.const i32x4 1 1 1 1 f32x4.neg drop)
  (; 0xfd 0x97 ;) (func (export "f32x4.sqrt") v128.const i32x4 1 1 1 1 f32x4.sqrt drop)
  (; 0xfd 0x9a ;) (func (export "f32x4.add") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.add drop)
  (; 0xfd 0x9b ;) (func (export "f32x4.sub") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.sub drop)
  (; 0xfd 0x9c ;) (func (export "f32x4.mul") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.mul drop)
  (; 0xfd 0x9d ;) (func (export "f32x4.div") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.div drop)
  (; 0xfd 0x9e ;) (func (export "f32x4.min") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.min drop)
  (; 0xfd 0x9f ;) (func (export "f32x4.max") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.max drop)
  (; 0xfd 0xa0 ;) (func (export "f64x2.abs") v128.const i32x4 1 1 1 1 f64x2.abs drop)
  (; 0xfd 0xa1 ;) (func (export "f64x2.neg") v128.const i32x4 1 1 1 1 f64x2.neg drop)
  (; 0xfd 0xa2 ;) (func (export "f64x2.sqrt") v128.const i32x4 1 1 1 1 f64x2.sqrt drop)
  (; 0xfd 0xa5 ;) (func (export "f64x2.add") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.add drop)
  (; 0xfd 0xa6 ;) (func (export "f64x2.sub") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.sub drop)
  (; 0xfd 0xa7 ;) (func (export "f64x2.mul") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.mul drop)
  (; 0xfd 0xa8 ;) (func (export "f64x2.div") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.div drop)
  (; 0xfd 0xa9 ;) (func (export "f64x2.min") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.min drop)
  (; 0xfd 0xaa ;) (func (export "f64x2.max") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.max drop)
  (; 0xfd 0xab ;) (func (export "i32x4.trunc_sat_f32x4_s") v128.const i32x4 1 1 1 1 i32x4.trunc_sat_f32x4_s drop)
  (; 0xfd 0xac ;) (func (export "i32x4.trunc_sat_f32x4_u") v128.const i32x4 1 1 1 1 i32x4.trunc_sat_f32x4_u drop)
  (; 0xfd 0xaf ;) (func (export "f32x4.convert_i32x4_s") v128.const i32x4 1 1 1 1 f32x4.convert_i32x4_s drop)
  (; 0xfd 0xb0 ;) (func (export "f32x4.convert_i32x4_u") v128.const i32x4 1 1 1 1 f32x4.convert_i32x4_u drop)
  (; 0xfd 0xc0 ;) (func (export "v8x16.swizzle") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 v8x16.swizzle drop)
  (; 0xfd 0xc1 ;) (func (export "v8x16.shuffle") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 v8x16.shuffle 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 drop)
  (; 0xfd 0xc2 ;) (func (export "v8x16.load_splat") i32.const 1 v8x16.load_splat drop)
  (; 0xfd 0xc3 ;) (func (export "v16x8.load_splat") i32.const 1 v16x8.load_splat drop)
  (; 0xfd 0xc4 ;) (func (export "v32x4.load_splat") i32.const 1 v32x4.load_splat drop)
  (; 0xfd 0xc5 ;) (func (export "v64x2.load_splat") i32.const 1 v64x2.load_splat drop)
  (; 0xfd 0xc6 ;) (func (export "i8x16.narrow_i16x8_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.narrow_i16x8_s drop)
  (; 0xfd 0xc7 ;) (func (export "i8x16.narrow_i16x8_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.narrow_i16x8_u drop)
  (; 0xfd 0xc8 ;) (func (export "i16x8.narrow_i32x4_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.narrow_i32x4_s drop)
  (; 0xfd 0xc9 ;) (func (export "i16x8.narrow_i32x4_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.narrow_i32x4_u drop)
  (; 0xfd 0xca ;) (func (export "i16x8.widen_low_i8x16_s") v128.const i32x4 1 1 1 1 i16x8.widen_low_i8x16_s drop)
  (; 0xfd 0xcb ;) (func (export "i16x8.widen_high_i8x16_s") v128.const i32x4 1 1 1 1 i16x8.widen_high_i8x16_s drop)
  (; 0xfd 0xcc ;) (func (export "i16x8.widen_low_i8x16_u") v128.const i32x4 1 1 1 1 i16x8.widen_low_i8x16_u drop)
  (; 0xfd 0xcd ;) (func (export "i16x8.widen_high_i8x16_u") v128.const i32x4 1 1 1 1 i16x8.widen_high_i8x16_u drop)
  (; 0xfd 0xce ;) (func (export "i32x4.widen_low_i16x8_s") v128.const i32x4 1 1 1 1 i32x4.widen_low_i16x8_s drop)
  (; 0xfd 0xcf ;) (func (export "i32x4.widen_high_i16x8_s") v128.const i32x4 1 1 1 1 i32x4.widen_high_i16x8_s drop)
  (; 0xfd 0xd0 ;) (func (export "i32x4.widen_low_i16x8_u") v128.const i32x4 1 1 1 1 i32x4.widen_low_i16x8_u drop)
  (; 0xfd 0xd1 ;) (func (export "i32x4.widen_high_i16x8_u") v128.const i32x4 1 1 1 1 i32x4.widen_high_i16x8_u drop)
  (; 0xfd 0xd2 ;) (func (export "i16x8.load8x8_s") i32.const 0 i16x8.load8x8_s drop)
  (; 0xfd 0xd3 ;) (func (export "i16x8.load8x8_u") i32.const 0 i16x8.load8x8_u drop)
  (; 0xfd 0xd4 ;) (func (export "i32x4.load16x4_s") i32.const 0 i32x4.load16x4_s drop)
  (; 0xfd 0xd5 ;) (func (export "i32x4.load16x4_u") i32.const 0 i32x4.load16x4_u drop)
  (; 0xfd 0xd6 ;) (func (export "i64x2.load32x2_s") i32.const 0 i64x2.load32x2_s drop)
  (; 0xfd 0xd7 ;) (func (export "i64x2.load32x2_u") i32.const 0 i64x2.load32x2_u drop)
  (; 0xfd 0xd8 ;) (func (export "v128.andnot") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 v128.andnot drop)
  (; 0xfd 0xd9 ;) (func (export "i8x16.avgr_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.avgr_u drop)
  (; 0xfd 0xda ;) (func (export "i16x8.avgr_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.avgr_u drop)

  ;; --enable-threads
  (; 0xfe 0x00 ;) (func (export "atomic.notify") i32.const 1 i32.const 2 atomic.notify offset=3 drop)
  (; 0xfe 0x01 ;) (func (export "i32.atomic.wait") i32.const 1 i32.const 2 i64.const 3 i32.atomic.wait offset=3 drop)
  (; 0xfe 0x02 ;) (func (export "i64.atomic.wait") i32.const 1 i64.const 2 i64.const 3 i64.atomic.wait offset=3 drop)
  (; 0xfe 0x10 ;) (func (export "i32.atomic.load") i32.const 1 i32.atomic.load offset=3 drop)
  (; 0xfe 0x11 ;) (func (export "i64.atomic.load") i32.const 1 i64.atomic.load offset=7 drop)
  (; 0xfe 0x12 ;) (func (export "i32.atomic.load8_u") i32.const 1 i32.atomic.load8_u offset=3 drop)
  (; 0xfe 0x13 ;) (func (export "i32.atomic.load16_u") i32.const 1 i32.atomic.load16_u offset=3 drop)
  (; 0xfe 0x14 ;) (func (export "i64.atomic.load8_u") i32.const 1 i64.atomic.load8_u offset=3 drop)
  (; 0xfe 0x15 ;) (func (export "i64.atomic.load16_u") i32.const 1 i64.atomic.load16_u offset=3 drop)
  (; 0xfe 0x16 ;) (func (export "i64.atomic.load32_u") i32.const 1 i64.atomic.load32_u offset=3 drop)
  (; 0xfe 0x17 ;) (func (export "i32.atomic.store") i32.const 1 i32.const 2 i32.atomic.store offset=3)
  (; 0xfe 0x18 ;) (func (export "i64.atomic.store") i32.const 1 i64.const 2 i64.atomic.store offset=7)
  (; 0xfe 0x19 ;) (func (export "i32.atomic.store8") i32.const 1 i32.const 2 i32.atomic.store8 offset=3)
  (; 0xfe 0x1a ;) (func (export "i32.atomic.store16") i32.const 1 i32.const 2 i32.atomic.store16 offset=3)
  (; 0xfe 0x1b ;) (func (export "i64.atomic.store8") i32.const 1 i64.const 2 i64.atomic.store8 offset=3)
  (; 0xfe 0x1c ;) (func (export "i64.atomic.store16") i32.const 1 i64.const 2 i64.atomic.store16 offset=3)
  (; 0xfe 0x1d ;) (func (export "i64.atomic.store32") i32.const 1 i64.const 2 i64.atomic.store32 offset=3)
  (; 0xfe 0x1e ;) (func (export "i32.atomic.rmw.add") i32.const 1 i32.const 2 i32.atomic.rmw.add offset=3 drop)
  (; 0xfe 0x1f ;) (func (export "i64.atomic.rmw.add") i32.const 1 i64.const 2 i64.atomic.rmw.add offset=7 drop)
  (; 0xfe 0x20 ;) (func (export "i32.atomic.rmw8.add_u") i32.const 1 i32.const 2 i32.atomic.rmw8.add_u offset=3 drop)
  (; 0xfe 0x21 ;) (func (export "i32.atomic.rmw16.add_u") i32.const 1 i32.const 2 i32.atomic.rmw16.add_u offset=3 drop)
  (; 0xfe 0x22 ;) (func (export "i64.atomic.rmw8.add_u") i32.const 1 i64.const 2 i64.atomic.rmw8.add_u offset=3 drop)
  (; 0xfe 0x23 ;) (func (export "i64.atomic.rmw16.add_u") i32.const 1 i64.const 2 i64.atomic.rmw16.add_u offset=3 drop)
  (; 0xfe 0x24 ;) (func (export "i64.atomic.rmw32.add_u") i32.const 1 i64.const 2 i64.atomic.rmw32.add_u offset=3 drop)
  (; 0xfe 0x25 ;) (func (export "i32.atomic.rmw.sub") i32.const 1 i32.const 2 i32.atomic.rmw.sub offset=3 drop)
  (; 0xfe 0x26 ;) (func (export "i64.atomic.rmw.sub") i32.const 1 i64.const 2 i64.atomic.rmw.sub offset=7 drop)
  (; 0xfe 0x27 ;) (func (export "i32.atomic.rmw8.sub_u") i32.const 1 i32.const 2 i32.atomic.rmw8.sub_u offset=3 drop)
  (; 0xfe 0x28 ;) (func (export "i32.atomic.rmw16.sub_u") i32.const 1 i32.const 2 i32.atomic.rmw16.sub_u offset=3 drop)
  (; 0xfe 0x29 ;) (func (export "i64.atomic.rmw8.sub_u") i32.const 1 i64.const 2 i64.atomic.rmw8.sub_u offset=3 drop)
  (; 0xfe 0x2a ;) (func (export "i64.atomic.rmw16.sub_u") i32.const 1 i64.const 2 i64.atomic.rmw16.sub_u offset=3 drop)
  (; 0xfe 0x2b ;) (func (export "i64.atomic.rmw32.sub_u") i32.const 1 i64.const 2 i64.atomic.rmw32.sub_u offset=3 drop)
  (; 0xfe 0x2c ;) (func (export "i32.atomic.rmw.and") i32.const 1 i32.const 2 i32.atomic.rmw.and offset=3 drop)
  (; 0xfe 0x2d ;) (func (export "i64.atomic.rmw.and") i32.const 1 i64.const 2 i64.atomic.rmw.and offset=7 drop)
  (; 0xfe 0x2e ;) (func (export "i32.atomic.rmw8.and_u") i32.const 1 i32.const 2 i32.atomic.rmw8.and_u offset=3 drop)
  (; 0xfe 0x2f ;) (func (export "i32.atomic.rmw16.and_u") i32.const 1 i32.const 2 i32.atomic.rmw16.and_u offset=3 drop)
  (; 0xfe 0x30 ;) (func (export "i64.atomic.rmw8.and_u") i32.const 1 i64.const 2 i64.atomic.rmw8.and_u offset=3 drop)
  (; 0xfe 0x31 ;) (func (export "i64.atomic.rmw16.and_u") i32.const 1 i64.const 2 i64.atomic.rmw16.and_u offset=3 drop)
  (; 0xfe 0x32 ;) (func (export "i64.atomic.rmw32.and_u") i32.const 1 i64.const 2 i64.atomic.rmw32.and_u offset=3 drop)
  (; 0xfe 0x33 ;) (func (export "i32.atomic.rmw.or") i32.const 1 i32.const 2 i32.atomic.rmw.or offset=3 drop)
  (; 0xfe 0x34 ;) (func (export "i64.atomic.rmw.or") i32.const 1 i64.const 2 i64.atomic.rmw.or offset=7 drop)
  (; 0xfe 0x35 ;) (func (export "i32.atomic.rmw8.or_u") i32.const 1 i32.const 2 i32.atomic.rmw8.or_u offset=3 drop)
  (; 0xfe 0x36 ;) (func (export "i32.atomic.rmw16.or_u") i32.const 1 i32.const 2 i32.atomic.rmw16.or_u offset=3 drop)
  (; 0xfe 0x37 ;) (func (export "i64.atomic.rmw8.or_u") i32.const 1 i64.const 2 i64.atomic.rmw8.or_u offset=3 drop)
  (; 0xfe 0x38 ;) (func (export "i64.atomic.rmw16.or_u") i32.const 1 i64.const 2 i64.atomic.rmw16.or_u offset=3 drop)
  (; 0xfe 0x39 ;) (func (export "i64.atomic.rmw32.or_u") i32.const 1 i64.const 2 i64.atomic.rmw32.or_u offset=3 drop)
  (; 0xfe 0x3a ;) (func (export "i32.atomic.rmw.xor") i32.const 1 i32.const 2 i32.atomic.rmw.xor offset=3 drop)
  (; 0xfe 0x3b ;) (func (export "i64.atomic.rmw.xor") i32.const 1 i64.const 2 i64.atomic.rmw.xor offset=7 drop)
  (; 0xfe 0x3c ;) (func (export "i32.atomic.rmw8.xor_u") i32.const 1 i32.const 2 i32.atomic.rmw8.xor_u offset=3 drop)
  (; 0xfe 0x3d ;) (func (export "i32.atomic.rmw16.xor_u") i32.const 1 i32.const 2 i32.atomic.rmw16.xor_u offset=3 drop)
  (; 0xfe 0x3e ;) (func (export "i64.atomic.rmw8.xor_u") i32.const 1 i64.const 2 i64.atomic.rmw8.xor_u offset=3 drop)
  (; 0xfe 0x3f ;) (func (export "i64.atomic.rmw16.xor_u") i32.const 1 i64.const 2 i64.atomic.rmw16.xor_u offset=3 drop)
  (; 0xfe 0x40 ;) (func (export "i64.atomic.rmw32.xor_u") i32.const 1 i64.const 2 i64.atomic.rmw32.xor_u offset=3 drop)
  (; 0xfe 0x41 ;) (func (export "i32.atomic.rmw.xchg") i32.const 1 i32.const 2 i32.atomic.rmw.xchg offset=3 drop)
  (; 0xfe 0x42 ;) (func (export "i64.atomic.rmw.xchg") i32.const 1 i64.const 2 i64.atomic.rmw.xchg offset=7 drop)
  (; 0xfe 0x43 ;) (func (export "i32.atomic.rmw8.xchg_u") i32.const 1 i32.const 2 i32.atomic.rmw8.xchg_u offset=3 drop)
  (; 0xfe 0x44 ;) (func (export "i32.atomic.rmw16.xchg_u") i32.const 1 i32.const 2 i32.atomic.rmw16.xchg_u offset=3 drop)
  (; 0xfe 0x45 ;) (func (export "i64.atomic.rmw8.xchg_u") i32.const 1 i64.const 2 i64.atomic.rmw8.xchg_u offset=3 drop)
  (; 0xfe 0x46 ;) (func (export "i64.atomic.rmw16.xchg_u") i32.const 1 i64.const 2 i64.atomic.rmw16.xchg_u offset=3 drop)
  (; 0xfe 0x47 ;) (func (export "i64.atomic.rmw32.xchg_u") i32.const 1 i64.const 2 i64.atomic.rmw32.xchg_u offset=3 drop)

  (; 0xfe 0x48 ;) (func (export "i32.atomic.rmw.cmpxchg") i32.const 1 i32.const 2 i32.const 3 i32.atomic.rmw.cmpxchg offset=3 drop)
  (; 0xfe 0x49 ;) (func (export "i64.atomic.rmw.cmpxchg") i32.const 1 i64.const 2 i64.const 3 i64.atomic.rmw.cmpxchg offset=7 drop)
  (; 0xfe 0x4a ;) (func (export "i32.atomic.rmw8.cmpxchg_u") i32.const 1 i32.const 2 i32.const 3 i32.atomic.rmw8.cmpxchg_u offset=3 drop)
  (; 0xfe 0x4b ;) (func (export "i32.atomic.rmw16.cmpxchg_u") i32.const 1 i32.const 2 i32.const 3 i32.atomic.rmw16.cmpxchg_u offset=3 drop)
  (; 0xfe 0x4c ;) (func (export "i64.atomic.rmw8.cmpxchg_u") i32.const 1 i64.const 2 i64.const 3 i64.atomic.rmw8.cmpxchg_u offset=3 drop)
  (; 0xfe 0x4d ;) (func (export "i64.atomic.rmw16.cmpxchg_u") i32.const 1 i64.const 2 i64.const 3 i64.atomic.rmw16.cmpxchg_u offset=3 drop)
  (; 0xfe 0x4e ;) (func (export "i64.atomic.rmw32.cmpxchg_u") i32.const 1 i64.const 2 i64.const 3 i64.atomic.rmw32.cmpxchg_u offset=3 drop)
)

(;; STDOUT ;;;
0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 02                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 00                                        ; num params
000000d: 00                                        ; num results
; type 1
000000e: 60                                        ; func
000000f: 01                                        ; num params
0000010: 7f                                        ; i32
0000011: 00                                        ; num results
0000009: 08                                        ; FIXUP section size
; section "Import" (2)
0000012: 02                                        ; section code
0000013: 00                                        ; section size (guess)
0000014: 01                                        ; num imports
; import header 0
0000015: 04                                        ; string length
0000016: 686f 7374                                host  ; import module name
000001a: 05                                        ; string length
000001b: 7072 696e 74                             print  ; import field name
0000020: 00                                        ; import kind
0000021: 01                                        ; import signature index
0000013: 0e                                        ; FIXUP section size
; section "Function" (3)
0000022: 03                                        ; section code
0000023: 00                                        ; section size (guess)
0000024: b003                                      ; num functions
0000026: 00                                        ; function 0 signature index
0000027: 00                                        ; function 1 signature index
0000028: 00                                        ; function 2 signature index
0000029: 00                                        ; function 3 signature index
000002a: 00                                        ; function 4 signature index
000002b: 00                                        ; function 5 signature index
000002c: 00                                        ; function 6 signature index
000002d: 00                                        ; function 7 signature index
000002e: 00                                        ; function 8 signature index
000002f: 00                                        ; function 9 signature index
0000030: 00                                        ; function 10 signature index
0000031: 00                                        ; function 11 signature index
0000032: 00                                        ; function 12 signature index
0000033: 00                                        ; function 13 signature index
0000034: 00                                        ; function 14 signature index
0000035: 00                                        ; function 15 signature index
0000036: 00                                        ; function 16 signature index
0000037: 00                                        ; function 17 signature index
0000038: 00                                        ; function 18 signature index
0000039: 00                                        ; function 19 signature index
000003a: 00                                        ; function 20 signature index
000003b: 00                                        ; function 21 signature index
000003c: 00                                        ; function 22 signature index
000003d: 00                                        ; function 23 signature index
000003e: 00                                        ; function 24 signature index
000003f: 00                                        ; function 25 signature index
0000040: 00                                        ; function 26 signature index
0000041: 00                                        ; function 27 signature index
0000042: 00                                        ; function 28 signature index
0000043: 00                                        ; function 29 signature index
0000044: 00                                        ; function 30 signature index
0000045: 00                                        ; function 31 signature index
0000046: 00                                        ; function 32 signature index
0000047: 00                                        ; function 33 signature index
0000048: 00                                        ; function 34 signature index
0000049: 00                                        ; function 35 signature index
000004a: 00                                        ; function 36 signature index
000004b: 00                                        ; function 37 signature index
000004c: 00                                        ; function 38 signature index
000004d: 00                                        ; function 39 signature index
000004e: 00                                        ; function 40 signature index
000004f: 00                                        ; function 41 signature index
0000050: 00                                        ; function 42 signature index
0000051: 00                                        ; function 43 signature index
0000052: 00                                        ; function 44 signature index
0000053: 00                                        ; function 45 signature index
0000054: 00                                        ; function 46 signature index
0000055: 00                                        ; function 47 signature index
0000056: 00                                        ; function 48 signature index
0000057: 00                                        ; function 49 signature index
0000058: 00                                        ; function 50 signature index
0000059: 00                                        ; function 51 signature index
000005a: 00                                        ; function 52 signature index
000005b: 00                                        ; function 53 signature index
000005c: 00                                        ; function 54 signature index
000005d: 00                                        ; function 55 signature index
000005e: 00                                        ; function 56 signature index
000005f: 00                                        ; function 57 signature index
0000060: 00                                        ; function 58 signature index
0000061: 00                                        ; function 59 signature index
0000062: 00                                        ; function 60 signature index
0000063: 00                                        ; function 61 signature index
0000064: 00                                        ; function 62 signature index
0000065: 00                                        ; function 63 signature index
0000066: 00                                        ; function 64 signature index
0000067: 00                                        ; function 65 signature index
0000068: 00                                        ; function 66 signature index
0000069: 00                                        ; function 67 signature index
000006a: 00                                        ; function 68 signature index
000006b: 00                                        ; function 69 signature index
000006c: 00                                        ; function 70 signature index
000006d: 00                                        ; function 71 signature index
000006e: 00                                        ; function 72 signature index
000006f: 00                                        ; function 73 signature index
0000070: 00                                        ; function 74 signature index
0000071: 00                                        ; function 75 signature index
0000072: 00                                        ; function 76 signature index
0000073: 00                                        ; function 77 signature index
0000074: 00                                        ; function 78 signature index
0000075: 00                                        ; function 79 signature index
0000076: 00                                        ; function 80 signature index
0000077: 00                                        ; function 81 signature index
0000078: 00                                        ; function 82 signature index
0000079: 00                                        ; function 83 signature index
000007a: 00                                        ; function 84 signature index
000007b: 00                                        ; function 85 signature index
000007c: 00                                        ; function 86 signature index
000007d: 00                                        ; function 87 signature index
000007e: 00                                        ; function 88 signature index
000007f: 00                                        ; function 89 signature index
0000080: 00                                        ; function 90 signature index
0000081: 00                                        ; function 91 signature index
0000082: 00                                        ; function 92 signature index
0000083: 00                                        ; function 93 signature index
0000084: 00                                        ; function 94 signature index
0000085: 00                                        ; function 95 signature index
0000086: 00                                        ; function 96 signature index
0000087: 00                                        ; function 97 signature index
0000088: 00                                        ; function 98 signature index
0000089: 00                                        ; function 99 signature index
000008a: 00                                        ; function 100 signature index
000008b: 00                                        ; function 101 signature index
000008c: 00                                        ; function 102 signature index
000008d: 00                                        ; function 103 signature index
000008e: 00                                        ; function 104 signature index
000008f: 00                                        ; function 105 signature index
0000090: 00                                        ; function 106 signature index
0000091: 00                                        ; function 107 signature index
0000092: 00                                        ; function 108 signature index
0000093: 00                                        ; function 109 signature index
0000094: 00                                        ; function 110 signature index
0000095: 00                                        ; function 111 signature index
0000096: 00                                        ; function 112 signature index
0000097: 00                                        ; function 113 signature index
0000098: 00                                        ; function 114 signature index
0000099: 00                                        ; function 115 signature index
000009a: 00                                        ; function 116 signature index
000009b: 00                                        ; function 117 signature index
000009c: 00                                        ; function 118 signature index
000009d: 00                                        ; function 119 signature index
000009e: 00                                        ; function 120 signature index
000009f: 00                                        ; function 121 signature index
00000a0: 00                                        ; function 122 signature index
00000a1: 00                                        ; function 123 signature index
00000a2: 00                                        ; function 124 signature index
00000a3: 00                                        ; function 125 signature index
00000a4: 00                                        ; function 126 signature index
00000a5: 00                                        ; function 127 signature index
00000a6: 00                                        ; function 128 signature index
00000a7: 00                                        ; function 129 signature index
00000a8: 00                                        ; function 130 signature index
00000a9: 00                                        ; function 131 signature index
00000aa: 00                                        ; function 132 signature index
00000ab: 00                                        ; function 133 signature index
00000ac: 00                                        ; function 134 signature index
00000ad: 00                                        ; function 135 signature index
00000ae: 00                                        ; function 136 signature index
00000af: 00                                        ; function 137 signature index
00000b0: 00                                        ; function 138 signature index
00000b1: 00                                        ; function 139 signature index
00000b2: 00                                        ; function 140 signature index
00000b3: 00                                        ; function 141 signature index
00000b4: 00                                        ; function 142 signature index
00000b5: 00                                        ; function 143 signature index
00000b6: 00                                        ; function 144 signature index
00000b7: 00                                        ; function 145 signature index
00000b8: 00                                        ; function 146 signature index
00000b9: 00                                        ; function 147 signature index
00000ba: 00                                        ; function 148 signature index
00000bb: 00                                        ; function 149 signature index
00000bc: 00                                        ; function 150 signature index
00000bd: 00                                        ; function 151 signature index
00000be: 00                                        ; function 152 signature index
00000bf: 00                                        ; function 153 signature index
00000c0: 00                                        ; function 154 signature index
00000c1: 00                                        ; function 155 signature index
00000c2: 00                                        ; function 156 signature index
00000c3: 00                                        ; function 157 signature index
00000c4: 00                                        ; function 158 signature index
00000c5: 00                                        ; function 159 signature index
00000c6: 00                                        ; function 160 signature index
00000c7: 00                                        ; function 161 signature index
00000c8: 00                                        ; function 162 signature index
00000c9: 00                                        ; function 163 signature index
00000ca: 00                                        ; function 164 signature index
00000cb: 00                                        ; function 165 signature index
00000cc: 00                                        ; function 166 signature index
00000cd: 00                                        ; function 167 signature index
00000ce: 00                                        ; function 168 signature index
00000cf: 00                                        ; function 169 signature index
00000d0: 00                                        ; function 170 signature index
00000d1: 00                                        ; function 171 signature index
00000d2: 00                                        ; function 172 signature index
00000d3: 00                                        ; function 173 signature index
00000d4: 00                                        ; function 174 signature index
00000d5: 00                                        ; function 175 signature index
00000d6: 00                                        ; function 176 signature index
00000d7: 00                                        ; function 177 signature index
00000d8: 00                                        ; function 178 signature index
00000d9: 00                                        ; function 179 signature index
00000da: 00                                        ; function 180 signature index
00000db: 00                                        ; function 181 signature index
00000dc: 00                                        ; function 182 signature index
00000dd: 00                                        ; function 183 signature index
00000de: 00                                        ; function 184 signature index
00000df: 00                                        ; function 185 signature index
00000e0: 00                                        ; function 186 signature index
00000e1: 00                                        ; function 187 signature index
00000e2: 00                                        ; function 188 signature index
00000e3: 00                                        ; function 189 signature index
00000e4: 00                                        ; function 190 signature index
00000e5: 00                                        ; function 191 signature index
00000e6: 00                                        ; function 192 signature index
00000e7: 00                                        ; function 193 signature index
00000e8: 00                                        ; function 194 signature index
00000e9: 00                                        ; function 195 signature index
00000ea: 00                                        ; function 196 signature index
00000eb: 00                                        ; function 197 signature index
00000ec: 00                                        ; function 198 signature index
00000ed: 00                                        ; function 199 signature index
00000ee: 00                                        ; function 200 signature index
00000ef: 00                                        ; function 201 signature index
00000f0: 00                                        ; function 202 signature index
00000f1: 00                                        ; function 203 signature index
00000f2: 00                                        ; function 204 signature index
00000f3: 00                                        ; function 205 signature index
00000f4: 00                                        ; function 206 signature index
00000f5: 00                                        ; function 207 signature index
00000f6: 00                                        ; function 208 signature index
00000f7: 00                                        ; function 209 signature index
00000f8: 00                                        ; function 210 signature index
00000f9: 00                                        ; function 211 signature index
00000fa: 00                                        ; function 212 signature index
00000fb: 00                                        ; function 213 signature index
00000fc: 00                                        ; function 214 signature index
00000fd: 00                                        ; function 215 signature index
00000fe: 00                                        ; function 216 signature index
00000ff: 00                                        ; function 217 signature index
0000100: 00                                        ; function 218 signature index
0000101: 00                                        ; function 219 signature index
0000102: 00                                        ; function 220 signature index
0000103: 00                                        ; function 221 signature index
0000104: 00                                        ; function 222 signature index
0000105: 00                                        ; function 223 signature index
0000106: 00                                        ; function 224 signature index
0000107: 00                                        ; function 225 signature index
0000108: 00                                        ; function 226 signature index
0000109: 00                                        ; function 227 signature index
000010a: 00                                        ; function 228 signature index
000010b: 00                                        ; function 229 signature index
000010c: 00                                        ; function 230 signature index
000010d: 00                                        ; function 231 signature index
000010e: 00                                        ; function 232 signature index
000010f: 00                                        ; function 233 signature index
0000110: 00                                        ; function 234 signature index
0000111: 00                                        ; function 235 signature index
0000112: 00                                        ; function 236 signature index
0000113: 00                                        ; function 237 signature index
0000114: 00                                        ; function 238 signature index
0000115: 00                                        ; function 239 signature index
0000116: 00                                        ; function 240 signature index
0000117: 00                                        ; function 241 signature index
0000118: 00                                        ; function 242 signature index
0000119: 00                                        ; function 243 signature index
000011a: 00                                        ; function 244 signature index
000011b: 00                                        ; function 245 signature index
000011c: 00                                        ; function 246 signature index
000011d: 00                                        ; function 247 signature index
000011e: 00                                        ; function 248 signature index
000011f: 00                                        ; function 249 signature index
0000120: 00                                        ; function 250 signature index
0000121: 00                                        ; function 251 signature index
0000122: 00                                        ; function 252 signature index
0000123: 00                                        ; function 253 signature index
0000124: 00                                        ; function 254 signature index
0000125: 00                                        ; function 255 signature index
0000126: 00                                        ; function 256 signature index
0000127: 00                                        ; function 257 signature index
0000128: 00                                        ; function 258 signature index
0000129: 00                                        ; function 259 signature index
000012a: 00                                        ; function 260 signature index
000012b: 00                                        ; function 261 signature index
000012c: 00                                        ; function 262 signature index
000012d: 00                                        ; function 263 signature index
000012e: 00                                        ; function 264 signature index
000012f: 00                                        ; function 265 signature index
0000130: 00                                        ; function 266 signature index
0000131: 00                                        ; function 267 signature index
0000132: 00                                        ; function 268 signature index
0000133: 00                                        ; function 269 signature index
0000134: 00                                        ; function 270 signature index
0000135: 00                                        ; function 271 signature index
0000136: 00                                        ; function 272 signature index
0000137: 00                                        ; function 273 signature index
0000138: 00                                        ; function 274 signature index
0000139: 00                                        ; function 275 signature index
000013a: 00                                        ; function 276 signature index
000013b: 00                                        ; function 277 signature index
000013c: 00                                        ; function 278 signature index
000013d: 00                                        ; function 279 signature index
000013e: 00                                        ; function 280 signature index
000013f: 00                                        ; function 281 signature index
0000140: 00                                        ; function 282 signature index
0000141: 00                                        ; function 283 signature index
0000142: 00                                        ; function 284 signature index
0000143: 00                                        ; function 285 signature index
0000144: 00                                        ; function 286 signature index
0000145: 00                                        ; function 287 signature index
0000146: 00                                        ; function 288 signature index
0000147: 00                                        ; function 289 signature index
0000148: 00                                        ; function 290 signature index
0000149: 00                                        ; function 291 signature index
000014a: 00                                        ; function 292 signature index
000014b: 00                                        ; function 293 signature index
000014c: 00                                        ; function 294 signature index
000014d: 00                                        ; function 295 signature index
000014e: 00                                        ; function 296 signature index
000014f: 00                                        ; function 297 signature index
0000150: 00                                        ; function 298 signature index
0000151: 00                                        ; function 299 signature index
0000152: 00                                        ; function 300 signature index
0000153: 00                                        ; function 301 signature index
0000154: 00                                        ; function 302 signature index
0000155: 00                                        ; function 303 signature index
0000156: 00                                        ; function 304 signature index
0000157: 00                                        ; function 305 signature index
0000158: 00                                        ; function 306 signature index
0000159: 00                                        ; function 307 signature index
000015a: 00                                        ; function 308 signature index
000015b: 00                                        ; function 309 signature index
000015c: 00                                        ; function 310 signature index
000015d: 00                                        ; function 311 signature index
000015e: 00                                        ; function 312 signature index
000015f: 00                                        ; function 313 signature index
0000160: 00                                        ; function 314 signature index
0000161: 00                                        ; function 315 signature index
0000162: 00                                        ; function 316 signature index
0000163: 00                                        ; function 317 signature index
0000164: 00                                        ; function 318 signature index
0000165: 00                                        ; function 319 signature index
0000166: 00                                        ; function 320 signature index
0000167: 00                                        ; function 321 signature index
0000168: 00                                        ; function 322 signature index
0000169: 00                                        ; function 323 signature index
000016a: 00                                        ; function 324 signature index
000016b: 00                                        ; function 325 signature index
000016c: 00                                        ; function 326 signature index
000016d: 00                                        ; function 327 signature index
000016e: 00                                        ; function 328 signature index
000016f: 00                                        ; function 329 signature index
0000170: 00                                        ; function 330 signature index
0000171: 00                                        ; function 331 signature index
0000172: 00                                        ; function 332 signature index
0000173: 00                                        ; function 333 signature index
0000174: 00                                        ; function 334 signature index
0000175: 00                                        ; function 335 signature index
0000176: 00                                        ; function 336 signature index
0000177: 00                                        ; function 337 signature index
0000178: 00                                        ; function 338 signature index
0000179: 00                                        ; function 339 signature index
000017a: 00                                        ; function 340 signature index
000017b: 00                                        ; function 341 signature index
000017c: 00                                        ; function 342 signature index
000017d: 00                                        ; function 343 signature index
000017e: 00                                        ; function 344 signature index
000017f: 00                                        ; function 345 signature index
0000180: 00                                        ; function 346 signature index
0000181: 00                                        ; function 347 signature index
0000182: 00                                        ; function 348 signature index
0000183: 00                                        ; function 349 signature index
0000184: 00                                        ; function 350 signature index
0000185: 00                                        ; function 351 signature index
0000186: 00                                        ; function 352 signature index
0000187: 00                                        ; function 353 signature index
0000188: 00                                        ; function 354 signature index
0000189: 00                                        ; function 355 signature index
000018a: 00                                        ; function 356 signature index
000018b: 00                                        ; function 357 signature index
000018c: 00                                        ; function 358 signature index
000018d: 00                                        ; function 359 signature index
000018e: 00                                        ; function 360 signature index
000018f: 00                                        ; function 361 signature index
0000190: 00                                        ; function 362 signature index
0000191: 00                                        ; function 363 signature index
0000192: 00                                        ; function 364 signature index
0000193: 00                                        ; function 365 signature index
0000194: 00                                        ; function 366 signature index
0000195: 00                                        ; function 367 signature index
0000196: 00                                        ; function 368 signature index
0000197: 00                                        ; function 369 signature index
0000198: 00                                        ; function 370 signature index
0000199: 00                                        ; function 371 signature index
000019a: 00                                        ; function 372 signature index
000019b: 00                                        ; function 373 signature index
000019c: 00                                        ; function 374 signature index
000019d: 00                                        ; function 375 signature index
000019e: 00                                        ; function 376 signature index
000019f: 00                                        ; function 377 signature index
00001a0: 00                                        ; function 378 signature index
00001a1: 00                                        ; function 379 signature index
00001a2: 00                                        ; function 380 signature index
00001a3: 00                                        ; function 381 signature index
00001a4: 00                                        ; function 382 signature index
00001a5: 00                                        ; function 383 signature index
00001a6: 00                                        ; function 384 signature index
00001a7: 00                                        ; function 385 signature index
00001a8: 00                                        ; function 386 signature index
00001a9: 00                                        ; function 387 signature index
00001aa: 00                                        ; function 388 signature index
00001ab: 00                                        ; function 389 signature index
00001ac: 00                                        ; function 390 signature index
00001ad: 00                                        ; function 391 signature index
00001ae: 00                                        ; function 392 signature index
00001af: 00                                        ; function 393 signature index
00001b0: 00                                        ; function 394 signature index
00001b1: 00                                        ; function 395 signature index
00001b2: 00                                        ; function 396 signature index
00001b3: 00                                        ; function 397 signature index
00001b4: 00                                        ; function 398 signature index
00001b5: 00                                        ; function 399 signature index
00001b6: 00                                        ; function 400 signature index
00001b7: 00                                        ; function 401 signature index
00001b8: 00                                        ; function 402 signature index
00001b9: 00                                        ; function 403 signature index
00001ba: 00                                        ; function 404 signature index
00001bb: 00                                        ; function 405 signature index
00001bc: 00                                        ; function 406 signature index
00001bd: 00                                        ; function 407 signature index
00001be: 00                                        ; function 408 signature index
00001bf: 00                                        ; function 409 signature index
00001c0: 00                                        ; function 410 signature index
00001c1: 00                                        ; function 411 signature index
00001c2: 00                                        ; function 412 signature index
00001c3: 00                                        ; function 413 signature index
00001c4: 00                                        ; function 414 signature index
00001c5: 00                                        ; function 415 signature index
00001c6: 00                                        ; function 416 signature index
00001c7: 00                                        ; function 417 signature index
00001c8: 00                                        ; function 418 signature index
00001c9: 00                                        ; function 419 signature index
00001ca: 00                                        ; function 420 signature index
00001cb: 00                                        ; function 421 signature index
00001cc: 00                                        ; function 422 signature index
00001cd: 00                                        ; function 423 signature index
00001ce: 00                                        ; function 424 signature index
00001cf: 00                                        ; function 425 signature index
00001d0: 00                                        ; function 426 signature index
00001d1: 00                                        ; function 427 signature index
00001d2: 00                                        ; function 428 signature index
00001d3: 00                                        ; function 429 signature index
00001d4: 00                                        ; function 430 signature index
00001d5: 00                                        ; function 431 signature index
; move data: [24, 1d6) -> [25, 1d7)
0000023: b203                                      ; FIXUP section size
; section "Table" (4)
00001d7: 04                                        ; section code
00001d8: 00                                        ; section size (guess)
00001d9: 01                                        ; num tables
; table 0
00001da: 70                                        ; funcref
00001db: 01                                        ; limits: flags
00001dc: 02                                        ; limits: initial
00001dd: 02                                        ; limits: max
00001d8: 05                                        ; FIXUP section size
; section "Memory" (5)
00001de: 05                                        ; section code
00001df: 00                                        ; section size (guess)
00001e0: 01                                        ; num memories
; memory 0
00001e1: 03                                        ; limits: flags
00001e2: 01                                        ; limits: initial
00001e3: 01                                        ; limits: max
00001df: 04                                        ; FIXUP section size
; section "Global" (6)
00001e4: 06                                        ; section code
00001e5: 00                                        ; section size (guess)
00001e6: 01                                        ; num globals
00001e7: 7f                                        ; i32
00001e8: 01                                        ; global mutability
00001e9: 41                                        ; i32.const
00001ea: 00                                        ; i32 literal
00001eb: 0b                                        ; end
00001e5: 06                                        ; FIXUP section size
; section "Export" (7)
00001ec: 07                                        ; section code
00001ed: 00                                        ; section size (guess)
00001ee: af03                                      ; num exports
00001f0: 0b                                        ; string length
00001f1: 756e 7265 6163 6861 626c 65              unreachable  ; export name
00001fc: 00                                        ; export kind
00001fd: 02                                        ; export func index
00001fe: 02                                        ; string length
00001ff: 6272                                     br  ; export name
0000201: 00                                        ; export kind
0000202: 03                                        ; export func index
0000203: 08                                        ; string length
0000204: 6272 5f74 6162 6c65                      br_table  ; export name
000020c: 00                                        ; export kind
000020d: 04                                        ; export func index
000020e: 06                                        ; string length
000020f: 7265 7475 726e                           return  ; export name
0000215: 00                                        ; export kind
0000216: 05                                        ; export func index
0000217: 04                                        ; string length
0000218: 6361 6c6c                                call  ; export name
000021c: 00                                        ; export kind
000021d: 06                                        ; export func index
000021e: 0d                                        ; string length
000021f: 6361 6c6c 5f69 6e64 6972 6563 74         call_indirect  ; export name
000022c: 00                                        ; export kind
000022d: 07                                        ; export func index
000022e: 0b                                        ; string length
000022f: 7265 7475 726e 5f63 616c 6c              return_call  ; export name
000023a: 00                                        ; export kind
000023b: 08                                        ; export func index
000023c: 14                                        ; string length
000023d: 7265 7475 726e 5f63 616c 6c5f 696e 6469  return_call_indi
000024d: 7265 6374                                rect  ; export name
0000251: 00                                        ; export kind
0000252: 09                                        ; export func index
0000253: 04                                        ; string length
0000254: 6472 6f70                                drop  ; export name
0000258: 00                                        ; export kind
0000259: 0a                                        ; export func index
000025a: 06                                        ; string length
000025b: 7365 6c65 6374                           select  ; export name
0000261: 00                                        ; export kind
0000262: 0b                                        ; export func index
0000263: 08                                        ; string length
0000264: 7365 6c65 6374 5f74                      select_t  ; export name
000026c: 00                                        ; export kind
000026d: 0c                                        ; export func index
000026e: 09                                        ; string length
000026f: 6765 745f 6c6f 6361 6c                   get_local  ; export name
0000278: 00                                        ; export kind
0000279: 0d                                        ; export func index
000027a: 09                                        ; string length
000027b: 7365 745f 6c6f 6361 6c                   set_local  ; export name
0000284: 00                                        ; export kind
0000285: 0e                                        ; export func index
0000286: 09                                        ; string length
0000287: 7465 655f 6c6f 6361 6c                   tee_local  ; export name
0000290: 00                                        ; export kind
0000291: 0f                                        ; export func index
0000292: 0a                                        ; string length
0000293: 6765 745f 676c 6f62 616c                 get_global  ; export name
000029d: 00                                        ; export kind
000029e: 10                                        ; export func index
000029f: 0a                                        ; string length
00002a0: 7365 745f 676c 6f62 616c                 set_global  ; export name
00002aa: 00                                        ; export kind
00002ab: 11                                        ; export func index
00002ac: 08                                        ; string length
00002ad: 6933 322e 6c6f 6164                      i32.load  ; export name
00002b5: 00                                        ; export kind
00002b6: 12                                        ; export func index
00002b7: 08                                        ; string length
00002b8: 6936 342e 6c6f 6164                      i64.load  ; export name
00002c0: 00                                        ; export kind
00002c1: 13                                        ; export func index
00002c2: 08                                        ; string length
00002c3: 6633 322e 6c6f 6164                      f32.load  ; export name
00002cb: 00                                        ; export kind
00002cc: 14                                        ; export func index
00002cd: 08                                        ; string length
00002ce: 6636 342e 6c6f 6164                      f64.load  ; export name
00002d6: 00                                        ; export kind
00002d7: 15                                        ; export func index
00002d8: 0b                                        ; string length
00002d9: 6933 322e 6c6f 6164 385f 73              i32.load8_s  ; export name
00002e4: 00                                        ; export kind
00002e5: 16                                        ; export func index
00002e6: 0b                                        ; string length
00002e7: 6933 322e 6c6f 6164 385f 75              i32.load8_u  ; export name
00002f2: 00                                        ; export kind
00002f3: 17                                        ; export func index
00002f4: 0c                                        ; string length
00002f5: 6933 322e 6c6f 6164 3136 5f73            i32.load16_s  ; export name
0000301: 00                                        ; export kind
0000302: 18                                        ; export func index
0000303: 0c                                        ; string length
0000304: 6933 322e 6c6f 6164 3136 5f75            i32.load16_u  ; export name
0000310: 00                                        ; export kind
0000311: 19                                        ; export func index
0000312: 0b                                        ; string length
0000313: 6936 342e 6c6f 6164 385f 73              i64.load8_s  ; export name
000031e: 00                                        ; export kind
000031f: 1a                                        ; export func index
0000320: 0b                                        ; string length
0000321: 6936 342e 6c6f 6164 385f 75              i64.load8_u  ; export name
000032c: 00                                        ; export kind
000032d: 1b                                        ; export func index
000032e: 0c                                        ; string length
000032f: 6936 342e 6c6f 6164 3136 5f73            i64.load16_s  ; export name
000033b: 00                                        ; export kind
000033c: 1c                                        ; export func index
000033d: 0c                                        ; string length
000033e: 6936 342e 6c6f 6164 3136 5f75            i64.load16_u  ; export name
000034a: 00                                        ; export kind
000034b: 1d                                        ; export func index
000034c: 0c                                        ; string length
000034d: 6936 342e 6c6f 6164 3332 5f73            i64.load32_s  ; export name
0000359: 00                                        ; export kind
000035a: 1e                                        ; export func index
000035b: 0c                                        ; string length
000035c: 6936 342e 6c6f 6164 3332 5f75            i64.load32_u  ; export name
0000368: 00                                        ; export kind
0000369: 1f                                        ; export func index
000036a: 09                                        ; string length
000036b: 6933 322e 7374 6f72 65                   i32.store  ; export name
0000374: 00                                        ; export kind
0000375: 20                                        ; export func index
0000376: 09                                        ; string length
0000377: 6936 342e 7374 6f72 65                   i64.store  ; export name
0000380: 00                                        ; export kind
0000381: 21                                        ; export func index
0000382: 09                                        ; string length
0000383: 6633 322e 7374 6f72 65                   f32.store  ; export name
000038c: 00                                        ; export kind
000038d: 22                                        ; export func index
000038e: 09                                        ; string length
000038f: 6636 342e 7374 6f72 65                   f64.store  ; export name
0000398: 00                                        ; export kind
0000399: 23                                        ; export func index
000039a: 0a                                        ; string length
000039b: 6933 322e 7374 6f72 6538                 i32.store8  ; export name
00003a5: 00                                        ; export kind
00003a6: 24                                        ; export func index
00003a7: 0b                                        ; string length
00003a8: 6933 322e 7374 6f72 6531 36              i32.store16  ; export name
00003b3: 00                                        ; export kind
00003b4: 25                                        ; export func index
00003b5: 0a                                        ; string length
00003b6: 6936 342e 7374 6f72 6538                 i64.store8  ; export name
00003c0: 00                                        ; export kind
00003c1: 26                                        ; export func index
00003c2: 0b                                        ; string length
00003c3: 6936 342e 7374 6f72 6531 36              i64.store16  ; export name
00003ce: 00                                        ; export kind
00003cf: 27                                        ; export func index
00003d0: 0b                                        ; string length
00003d1: 6936 342e 7374 6f72 6533 32              i64.store32  ; export name
00003dc: 00                                        ; export kind
00003dd: 28                                        ; export func index
00003de: 0e                                        ; string length
00003df: 6375 7272 656e 745f 6d65 6d6f 7279       current_memory  ; export name
00003ed: 00                                        ; export kind
00003ee: 29                                        ; export func index
00003ef: 0b                                        ; string length
00003f0: 6772 6f77 5f6d 656d 6f72 79              grow_memory  ; export name
00003fb: 00                                        ; export kind
00003fc: 2a                                        ; export func index
00003fd: 09                                        ; string length
00003fe: 6933 322e 636f 6e73 74                   i32.const  ; export name
0000407: 00                                        ; export kind
0000408: 2b                                        ; export func index
0000409: 09                                        ; string length
000040a: 6936 342e 636f 6e73 74                   i64.const  ; export name
0000413: 00                                        ; export kind
0000414: 2c                                        ; export func index
0000415: 09                                        ; string length
0000416: 6633 322e 636f 6e73 74                   f32.const  ; export name
000041f: 00                                        ; export kind
0000420: 2d                                        ; export func index
0000421: 09                                        ; string length
0000422: 6636 342e 636f 6e73 74                   f64.const  ; export name
000042b: 00                                        ; export kind
000042c: 2e                                        ; export func index
000042d: 07                                        ; string length
000042e: 6933 322e 6571 7a                        i32.eqz  ; export name
0000435: 00                                        ; export kind
0000436: 2f                                        ; export func index
0000437: 06                                        ; string length
0000438: 6933 322e 6571                           i32.eq  ; export name
000043e: 00                                        ; export kind
000043f: 30                                        ; export func index
0000440: 06                                        ; string length
0000441: 6933 322e 6e65                           i32.ne  ; export name
0000447: 00                                        ; export kind
0000448: 31                                        ; export func index
0000449: 08                                        ; string length
000044a: 6933 322e 6c74 5f73                      i32.lt_s  ; export name
0000452: 00                                        ; export kind
0000453: 32                                        ; export func index
0000454: 08                                        ; string length
0000455: 6933 322e 6c74 5f75                      i32.lt_u  ; export name
000045d: 00                                        ; export kind
000045e: 33                                        ; export func index
000045f: 08                                        ; string length
0000460: 6933 322e 6774 5f73                      i32.gt_s  ; export name
0000468: 00                                        ; export kind
0000469: 34                                        ; export func index
000046a: 08                                        ; string length
000046b: 6933 322e 6774 5f75                      i32.gt_u  ; export name
0000473: 00                                        ; export kind
0000474: 35                                        ; export func index
0000475: 08                                        ; string length
0000476: 6933 322e 6c65 5f73                      i32.le_s  ; export name
000047e: 00                                        ; export kind
000047f: 36                                        ; export func index
0000480: 08                                        ; string length
0000481: 6933 322e 6c65 5f75                      i32.le_u  ; export name
0000489: 00                                        ; export kind
000048a: 37                                        ; export func index
000048b: 08                                        ; string length
000048c: 6933 322e 6765 5f73                      i32.ge_s  ; export name
0000494: 00                                        ; export kind
0000495: 38                                        ; export func index
0000496: 08                                        ; string length
0000497: 6933 322e 6765 5f75                      i32.ge_u  ; export name
000049f: 00                                        ; export kind
00004a0: 39                                        ; export func index
00004a1: 07                                        ; string length
00004a2: 6936 342e 6571 7a                        i64.eqz  ; export name
00004a9: 00                                        ; export kind
00004aa: 3a                                        ; export func index
00004ab: 06                                        ; string length
00004ac: 6936 342e 6571                           i64.eq  ; export name
00004b2: 00                                        ; export kind
00004b3: 3b                                        ; export func index
00004b4: 06                                        ; string length
00004b5: 6936 342e 6e65                           i64.ne  ; export name
00004bb: 00                                        ; export kind
00004bc: 3c                                        ; export func index
00004bd: 08                                        ; string length
00004be: 6936 342e 6c74 5f73                      i64.lt_s  ; export name
00004c6: 00                                        ; export kind
00004c7: 3d                                        ; export func index
00004c8: 08                                        ; string length
00004c9: 6936 342e 6c74 5f75                      i64.lt_u  ; export name
00004d1: 00                                        ; export kind
00004d2: 3e                                        ; export func index
00004d3: 08                                        ; string length
00004d4: 6936 342e 6774 5f73                      i64.gt_s  ; export name
00004dc: 00                                        ; export kind
00004dd: 3f                                        ; export func index
00004de: 08                                        ; string length
00004df: 6936 342e 6774 5f75                      i64.gt_u  ; export name
00004e7: 00                                        ; export kind
00004e8: 40                                        ; export func index
00004e9: 08                                        ; string length
00004ea: 6936 342e 6c65 5f73                      i64.le_s  ; export name
00004f2: 00                                        ; export kind
00004f3: 41                                        ; export func index
00004f4: 08                                        ; string length
00004f5: 6936 342e 6c65 5f75                      i64.le_u  ; export name
00004fd: 00                                        ; export kind
00004fe: 42                                        ; export func index
00004ff: 08                                        ; string length
0000500: 6936 342e 6765 5f73                      i64.ge_s  ; export name
0000508: 00                                        ; export kind
0000509: 43                                        ; export func index
000050a: 08                                        ; string length
000050b: 6936 342e 6765 5f75                      i64.ge_u  ; export name
0000513: 00                                        ; export kind
0000514: 44                                        ; export func index
0000515: 06                                        ; string length
0000516: 6633 322e 6571                           f32.eq  ; export name
000051c: 00                                        ; export kind
000051d: 45                                        ; export func index
000051e: 06                                        ; string length
000051f: 6633 322e 6e65                           f32.ne  ; export name
0000525: 00                                        ; export kind
0000526: 46                                        ; export func index
0000527: 06                                        ; string length
0000528: 6633 322e 6c74                           f32.lt  ; export name
000052e: 00                                        ; export kind
000052f: 47                                        ; export func index
0000530: 06                                        ; string length
0000531: 6633 322e 6774                           f32.gt  ; export name
0000537: 00                                        ; export kind
0000538: 48                                        ; export func index
0000539: 06                                        ; string length
000053a: 6633 322e 6c65                           f32.le  ; export name
0000540: 00                                        ; export kind
0000541: 49                                        ; export func index
0000542: 06                                        ; string length
0000543: 6633 322e 6765                           f32.ge  ; export name
0000549: 00                                        ; export kind
000054a: 4a                                        ; export func index
000054b: 06                                        ; string length
000054c: 6636 342e 6571                           f64.eq  ; export name
0000552: 00                                        ; export kind
0000553: 4b                                        ; export func index
0000554: 06                                        ; string length
0000555: 6636 342e 6e65                           f64.ne  ; export name
000055b: 00                                        ; export kind
000055c: 4c                                        ; export func index
000055d: 06                                        ; string length
000055e: 6636 342e 6c74                           f64.lt  ; export name
0000564: 00                                        ; export kind
0000565: 4d                                        ; export func index
0000566: 06                                        ; string length
0000567: 6636 342e 6774                           f64.gt  ; export name
000056d: 00                                        ; export kind
000056e: 4e                                        ; export func index
000056f: 06                                        ; string length
0000570: 6636 342e 6c65                           f64.le  ; export name
0000576: 00                                        ; export kind
0000577: 4f                                        ; export func index
0000578: 06                                        ; string length
0000579: 6636 342e 6765                           f64.ge  ; export name
000057f: 00                                        ; export kind
0000580: 50                                        ; export func index
0000581: 07                                        ; string length
0000582: 6933 322e 636c 7a                        i32.clz  ; export name
0000589: 00                                        ; export kind
000058a: 51                                        ; export func index
000058b: 07                                        ; string length
000058c: 6933 322e 6374 7a                        i32.ctz  ; export name
0000593: 00                                        ; export kind
0000594: 52                                        ; export func index
0000595: 0a                                        ; string length
0000596: 6933 322e 706f 7063 6e74                 i32.popcnt  ; export name
00005a0: 00                                        ; export kind
00005a1: 53                                        ; export func index
00005a2: 07                                        ; string length
00005a3: 6933 322e 6164 64                        i32.add  ; export name
00005aa: 00                                        ; export kind
00005ab: 54                                        ; export func index
00005ac: 07                                        ; string length
00005ad: 6933 322e 7375 62                        i32.sub  ; export name
00005b4: 00                                        ; export kind
00005b5: 55                                        ; export func index
00005b6: 07                                        ; string length
00005b7: 6933 322e 6d75 6c                        i32.mul  ; export name
00005be: 00                                        ; export kind
00005bf: 56                                        ; export func index
00005c0: 09                                        ; string length
00005c1: 6933 322e 6469 765f 73                   i32.div_s  ; export name
00005ca: 00                                        ; export kind
00005cb: 57                                        ; export func index
00005cc: 09                                        ; string length
00005cd: 6933 322e 6469 765f 75                   i32.div_u  ; export name
00005d6: 00                                        ; export kind
00005d7: 58                                        ; export func index
00005d8: 09                                        ; string length
00005d9: 6933 322e 7265 6d5f 73                   i32.rem_s  ; export name
00005e2: 00                                        ; export kind
00005e3: 59                                        ; export func index
00005e4: 09                                        ; string length
00005e5: 6933 322e 7265 6d5f 75                   i32.rem_u  ; export name
00005ee: 00                                        ; export kind
00005ef: 5a                                        ; export func index
00005f0: 07                                        ; string length
00005f1: 6933 322e 616e 64                        i32.and  ; export name
00005f8: 00                                        ; export kind
00005f9: 5b                                        ; export func index
00005fa: 06                                        ; string length
00005fb: 6933 322e 6f72                           i32.or  ; export name
0000601: 00                                        ; export kind
0000602: 5c                                        ; export func index
0000603: 07                                        ; string length
0000604: 6933 322e 786f 72                        i32.xor  ; export name
000060b: 00                                        ; export kind
000060c: 5d                                        ; export func index
000060d: 07                                        ; string length
000060e: 6933 322e 7368 6c                        i32.shl  ; export name
0000615: 00                                        ; export kind
0000616: 5e                                        ; export func index
0000617: 09                                        ; string length
0000618: 6933 322e 7368 725f 73                   i32.shr_s  ; export name
0000621: 00                                        ; export kind
0000622: 5f                                        ; export func index
0000623: 09                                        ; string length
0000624: 6933 322e 7368 725f 75                   i32.shr_u  ; export name
000062d: 00                                        ; export kind
000062e: 60                                        ; export func index
000062f: 08                                        ; string length
0000630: 6933 322e 726f 746c                      i32.rotl  ; export name
0000638: 00                                        ; export kind
0000639: 61                                        ; export func index
000063a: 08                                        ; string length
000063b: 6933 322e 726f 7472                      i32.rotr  ; export name
0000643: 00                                        ; export kind
0000644: 62                                        ; export func index
0000645: 07                                        ; string length
0000646: 6936 342e 636c 7a                        i64.clz  ; export name
000064d: 00                                        ; export kind
000064e: 63                                        ; export func index
000064f: 07                                        ; string length
0000650: 6936 342e 6374 7a                        i64.ctz  ; export name
0000657: 00                                        ; export kind
0000658: 64                                        ; export func index
0000659: 0a                                        ; string length
000065a: 6936 342e 706f 7063 6e74                 i64.popcnt  ; export name
0000664: 00                                        ; export kind
0000665: 65                                        ; export func index
0000666: 07                                        ; string length
0000667: 6936 342e 6164 64                        i64.add  ; export name
000066e: 00                                        ; export kind
000066f: 66                                        ; export func index
0000670: 07                                        ; string length
0000671: 6936 342e 7375 62                        i64.sub  ; export name
0000678: 00                                        ; export kind
0000679: 67                                        ; export func index
000067a: 07                                        ; string length
000067b: 6936 342e 6d75 6c                        i64.mul  ; export name
0000682: 00                                        ; export kind
0000683: 68                                        ; export func index
0000684: 09                                        ; string length
0000685: 6936 342e 6469 765f 73                   i64.div_s  ; export name
000068e: 00                                        ; export kind
000068f: 69                                        ; export func index
0000690: 09                                        ; string length
0000691: 6936 342e 6469 765f 75                   i64.div_u  ; export name
000069a: 00                                        ; export kind
000069b: 6a                                        ; export func index
000069c: 09                                        ; string length
000069d: 6936 342e 7265 6d5f 73                   i64.rem_s  ; export name
00006a6: 00                                        ; export kind
00006a7: 6b                                        ; export func index
00006a8: 09                                        ; string length
00006a9: 6936 342e 7265 6d5f 75                   i64.rem_u  ; export name
00006b2: 00                                        ; export kind
00006b3: 6c                                        ; export func index
00006b4: 07                                        ; string length
00006b5: 6936 342e 616e 64                        i64.and  ; export name
00006bc: 00                                        ; export kind
00006bd: 6d                                        ; export func index
00006be: 06                                        ; string length
00006bf: 6936 342e 6f72                           i64.or  ; export name
00006c5: 00                                        ; export kind
00006c6: 6e                                        ; export func index
00006c7: 07                                        ; string length
00006c8: 6936 342e 786f 72                        i64.xor  ; export name
00006cf: 00                                        ; export kind
00006d0: 6f                                        ; export func index
00006d1: 07                                        ; string length
00006d2: 6936 342e 7368 6c                        i64.shl  ; export name
00006d9: 00                                        ; export kind
00006da: 70                                        ; export func index
00006db: 09                                        ; string length
00006dc: 6936 342e 7368 725f 73                   i64.shr_s  ; export name
00006e5: 00                                        ; export kind
00006e6: 71                                        ; export func index
00006e7: 09                                        ; string length
00006e8: 6936 342e 7368 725f 75                   i64.shr_u  ; export name
00006f1: 00                                        ; export kind
00006f2: 72                                        ; export func index
00006f3: 08                                        ; string length
00006f4: 6936 342e 726f 746c                      i64.rotl  ; export name
00006fc: 00                                        ; export kind
00006fd: 73                                        ; export func index
00006fe: 08                                        ; string length
00006ff: 6936 342e 726f 7472                      i64.rotr  ; export name
0000707: 00                                        ; export kind
0000708: 74                                        ; export func index
0000709: 07                                        ; string length
000070a: 6633 322e 6162 73                        f32.abs  ; export name
0000711: 00                                        ; export kind
0000712: 75                                        ; export func index
0000713: 07                                        ; string length
0000714: 6633 322e 6e65 67                        f32.neg  ; export name
000071b: 00                                        ; export kind
000071c: 76                                        ; export func index
000071d: 08                                        ; string length
000071e: 6633 322e 6365 696c                      f32.ceil  ; export name
0000726: 00                                        ; export kind
0000727: 77                                        ; export func index
0000728: 09                                        ; string length
0000729: 6633 322e 666c 6f6f 72                   f32.floor  ; export name
0000732: 00                                        ; export kind
0000733: 78                                        ; export func index
0000734: 09                                        ; string length
0000735: 6633 322e 7472 756e 63                   f32.trunc  ; export name
000073e: 00                                        ; export kind
000073f: 79                                        ; export func index
0000740: 0b                                        ; string length
0000741: 6633 322e 6e65 6172 6573 74              f32.nearest  ; export name
000074c: 00                                        ; export kind
000074d: 7a                                        ; export func index
000074e: 08                                        ; string length
000074f: 6633 322e 7371 7274                      f32.sqrt  ; export name
0000757: 00                                        ; export kind
0000758: 7b                                        ; export func index
0000759: 07                                        ; string length
000075a: 6633 322e 6164 64                        f32.add  ; export name
0000761: 00                                        ; export kind
0000762: 7c                                        ; export func index
0000763: 07                                        ; string length
0000764: 6633 322e 7375 62                        f32.sub  ; export name
000076b: 00                                        ; export kind
000076c: 7d                                        ; export func index
000076d: 07                                        ; string length
000076e: 6633 322e 6d75 6c                        f32.mul  ; export name
0000775: 00                                        ; export kind
0000776: 7e                                        ; export func index
0000777: 07                                        ; string length
0000778: 6633 322e 6469 76                        f32.div  ; export name
000077f: 00                                        ; export kind
0000780: 7f                                        ; export func index
0000781: 07                                        ; string length
0000782: 6633 322e 6d69 6e                        f32.min  ; export name
0000789: 00                                        ; export kind
000078a: 8001                                      ; export func index
000078c: 07                                        ; string length
000078d: 6633 322e 6d61 78                        f32.max  ; export name
0000794: 00                                        ; export kind
0000795: 8101                                      ; export func index
0000797: 0c                                        ; string length
0000798: 6633 322e 636f 7079 7369 676e            f32.copysign  ; export name
00007a4: 00                                        ; export kind
00007a5: 8201                                      ; export func index
00007a7: 07                                        ; string length
00007a8: 6636 342e 6162 73                        f64.abs  ; export name
00007af: 00                                        ; export kind
00007b0: 8301                                      ; export func index
00007b2: 07                                        ; string length
00007b3: 6636 342e 6e65 67                        f64.neg  ; export name
00007ba: 00                                        ; export kind
00007bb: 8401                                      ; export func index
00007bd: 08                                        ; string length
00007be: 6636 342e 6365 696c                      f64.ceil  ; export name
00007c6: 00                                        ; export kind
00007c7: 8501                                      ; export func index
00007c9: 09                                        ; string length
00007ca: 6636 342e 666c 6f6f 72                   f64.floor  ; export name
00007d3: 00                                        ; export kind
00007d4: 8601                                      ; export func index
00007d6: 09                                        ; string length
00007d7: 6636 342e 7472 756e 63                   f64.trunc  ; export name
00007e0: 00                                        ; export kind
00007e1: 8701                                      ; export func index
00007e3: 0b                                        ; string length
00007e4: 6636 342e 6e65 6172 6573 74              f64.nearest  ; export name
00007ef: 00                                        ; export kind
00007f0: 8801                                      ; export func index
00007f2: 08                                        ; string length
00007f3: 6636 342e 7371 7274                      f64.sqrt  ; export name
00007fb: 00                                        ; export kind
00007fc: 8901                                      ; export func index
00007fe: 07                                        ; string length
00007ff: 6636 342e 6164 64                        f64.add  ; export name
0000806: 00                                        ; export kind
0000807: 8a01                                      ; export func index
0000809: 07                                        ; string length
000080a: 6636 342e 7375 62                        f64.sub  ; export name
0000811: 00                                        ; export kind
0000812: 8b01                                      ; export func index
0000814: 07                                        ; string length
0000815: 6636 342e 6d75 6c                        f64.mul  ; export name
000081c: 00                                        ; export kind
000081d: 8c01                                      ; export func index
000081f: 07                                        ; string length
0000820: 6636 342e 6469 76                        f64.div  ; export name
0000827: 00                                        ; export kind
0000828: 8d01                                      ; export func index
000082a: 07                                        ; string length
000082b: 6636 342e 6d69 6e                        f64.min  ; export name
0000832: 00                                        ; export kind
0000833: 8e01                                      ; export func index
0000835: 07                                        ; string length
0000836: 6636 342e 6d61 78                        f64.max  ; export name
000083d: 00                                        ; export kind
000083e: 8f01                                      ; export func index
0000840: 0c                                        ; string length
0000841: 6636 342e 636f 7079 7369 676e            f64.copysign  ; export name
000084d: 00                                        ; export kind
000084e: 9001                                      ; export func index
0000850: 0c                                        ; string length
0000851: 6933 322e 7772 6170 2f69 3634            i32.wrap/i64  ; export name
000085d: 00                                        ; export kind
000085e: 9101                                      ; export func index
0000860: 0f                                        ; string length
0000861: 6933 322e 7472 756e 635f 732f 6633 32    i32.trunc_s/f32  ; export name
0000870: 00                                        ; export kind
0000871: 9201                                      ; export func index
0000873: 0f                                        ; string length
0000874: 6933 322e 7472 756e 635f 752f 6633 32    i32.trunc_u/f32  ; export name
0000883: 00                                        ; export kind
0000884: 9301                                      ; export func index
0000886: 0f                                        ; string length
0000887: 6933 322e 7472 756e 635f 732f 6636 34    i32.trunc_s/f64  ; export name
0000896: 00                                        ; export kind
0000897: 9401                                      ; export func index
0000899: 0f                                        ; string length
000089a: 6933 322e 7472 756e 635f 752f 6636 34    i32.trunc_u/f64  ; export name
00008a9: 00                                        ; export kind
00008aa: 9501                                      ; export func index
00008ac: 10                                        ; string length
00008ad: 6936 342e 6578 7465 6e64 5f73 2f69 3332  i64.extend_s/i32  ; export name
00008bd: 00                                        ; export kind
00008be: 9601                                      ; export func index
00008c0: 10                                        ; string length
00008c1: 6936 342e 6578 7465 6e64 5f75 2f69 3332  i64.extend_u/i32  ; export name
00008d1: 00                                        ; export kind
00008d2: 9701                                      ; export func index
00008d4: 0f                                        ; string length
00008d5: 6936 342e 7472 756e 635f 732f 6633 32    i64.trunc_s/f32  ; export name
00008e4: 00                                        ; export kind
00008e5: 9801                                      ; export func index
00008e7: 0f                                        ; string length
00008e8: 6936 342e 7472 756e 635f 752f 6633 32    i64.trunc_u/f32  ; export name
00008f7: 00                                        ; export kind
00008f8: 9901                                      ; export func index
00008fa: 0f                                        ; string length
00008fb: 6936 342e 7472 756e 635f 732f 6636 34    i64.trunc_s/f64  ; export name
000090a: 00                                        ; export kind
000090b: 9a01                                      ; export func index
000090d: 0f                                        ; string length
000090e: 6936 342e 7472 756e 635f 752f 6636 34    i64.trunc_u/f64  ; export name
000091d: 00                                        ; export kind
000091e: 9b01                                      ; export func index
0000920: 11                                        ; string length
0000921: 6633 322e 636f 6e76 6572 745f 732f 6933  f32.convert_s/i3
0000931: 32                                       2  ; export name
0000932: 00                                        ; export kind
0000933: 9c01                                      ; export func index
0000935: 11                                        ; string length
0000936: 6633 322e 636f 6e76 6572 745f 752f 6933  f32.convert_u/i3
0000946: 32                                       2  ; export name
0000947: 00                                        ; export kind
0000948: 9d01                                      ; export func index
000094a: 11                                        ; string length
000094b: 6633 322e 636f 6e76 6572 745f 732f 6936  f32.convert_s/i6
000095b: 34                                       4  ; export name
000095c: 00                                        ; export kind
000095d: 9e01                                      ; export func index
000095f: 11                                        ; string length
0000960: 6633 322e 636f 6e76 6572 745f 752f 6936  f32.convert_u/i6
0000970: 34                                       4  ; export name
0000971: 00                                        ; export kind
0000972: 9f01                                      ; export func index
0000974: 0e                                        ; string length
0000975: 6633 322e 6465 6d6f 7465 2f66 3634       f32.demote/f64  ; export name
0000983: 00                                        ; export kind
0000984: a001                                      ; export func index
0000986: 11                                        ; string length
0000987: 6636 342e 636f 6e76 6572 745f 732f 6933  f64.convert_s/i3
0000997: 32                                       2  ; export name
0000998: 00                                        ; export kind
0000999: a101                                      ; export func index
000099b: 11                                        ; string length
000099c: 6636 342e 636f 6e76 6572 745f 752f 6933  f64.convert_u/i3
00009ac: 32                                       2  ; export name
00009ad: 00                                        ; export kind
00009ae: a201                                      ; export func index
00009b0: 11                                        ; string length
00009b1: 6636 342e 636f 6e76 6572 745f 732f 6936  f64.convert_s/i6
00009c1: 34                                       4  ; export name
00009c2: 00                                        ; export kind
00009c3: a301                                      ; export func index
00009c5: 11                                        ; string length
00009c6: 6636 342e 636f 6e76 6572 745f 752f 6936  f64.convert_u/i6
00009d6: 34                                       4  ; export name
00009d7: 00                                        ; export kind
00009d8: a401                                      ; export func index
00009da: 0f                                        ; string length
00009db: 6636 342e 7072 6f6d 6f74 652f 6633 32    f64.promote/f32  ; export name
00009ea: 00                                        ; export kind
00009eb: a501                                      ; export func index
00009ed: 13                                        ; string length
00009ee: 6933 322e 7265 696e 7465 7270 7265 742f  i32.reinterpret/
00009fe: 6633 32                                  f32  ; export name
0000a01: 00                                        ; export kind
0000a02: a601                                      ; export func index
0000a04: 13                                        ; string length
0000a05: 6633 322e 7265 696e 7465 7270 7265 742f  f32.reinterpret/
0000a15: 6933 32                                  i32  ; export name
0000a18: 00                                        ; export kind
0000a19: a701                                      ; export func index
0000a1b: 13                                        ; string length
0000a1c: 6936 342e 7265 696e 7465 7270 7265 742f  i64.reinterpret/
0000a2c: 6636 34                                  f64  ; export name
0000a2f: 00                                        ; export kind
0000a30: a801                                      ; export func index
0000a32: 13                                        ; string length
0000a33: 6636 342e 7265 696e 7465 7270 7265 742f  f64.reinterpret/
0000a43: 6936 34                                  i64  ; export name
0000a46: 00                                        ; export kind
0000a47: a901                                      ; export func index
0000a49: 0d                                        ; string length
0000a4a: 6933 322e 6578 7465 6e64 385f 73         i32.extend8_s  ; export name
0000a57: 00                                        ; export kind
0000a58: aa01                                      ; export func index
0000a5a: 0e                                        ; string length
0000a5b: 6933 322e 6578 7465 6e64 3136 5f73       i32.extend16_s  ; export name
0000a69: 00                                        ; export kind
0000a6a: ab01                                      ; export func index
0000a6c: 0d                                        ; string length
0000a6d: 6936 342e 6578 7465 6e64 385f 73         i64.extend8_s  ; export name
0000a7a: 00                                        ; export kind
0000a7b: ac01                                      ; export func index
0000a7d: 0e                                        ; string length
0000a7e: 6936 342e 6578 7465 6e64 3136 5f73       i64.extend16_s  ; export name
0000a8c: 00                                        ; export kind
0000a8d: ad01                                      ; export func index
0000a8f: 0e                                        ; string length
0000a90: 6936 342e 6578 7465 6e64 3332 5f73       i64.extend32_s  ; export name
0000a9e: 00                                        ; export kind
0000a9f: ae01                                      ; export func index
0000aa1: 06                                        ; string length
0000aa2: 616c 6c6f 6361                           alloca  ; export name
0000aa8: 00                                        ; export kind
0000aa9: af01                                      ; export func index
0000aab: 09                                        ; string length
0000aac: 6272 5f75 6e6c 6573 73                   br_unless  ; export name
0000ab5: 00                                        ; export kind
0000ab6: b001                                      ; export func index
0000ab8: 09                                        ; string length
0000ab9: 6361 6c6c 5f68 6f73 74                   call_host  ; export name
0000ac2: 00                                        ; export kind
0000ac3: b101                                      ; export func index
0000ac5: 04                                        ; string length
0000ac6: 6461 7461                                data  ; export name
0000aca: 00                                        ; export kind
0000acb: b201                                      ; export func index
0000acd: 09                                        ; string length
0000ace: 6472 6f70 5f6b 6565 70                   drop_keep  ; export name
0000ad7: 00                                        ; export kind
0000ad8: b301                                      ; export func index
0000ada: 13                                        ; string length
0000adb: 6933 322e 7472 756e 635f 733a 7361 742f  i32.trunc_s:sat/
0000aeb: 6633 32                                  f32  ; export name
0000aee: 00                                        ; export kind
0000aef: b401                                      ; export func index
0000af1: 13                                        ; string length
0000af2: 6933 322e 7472 756e 635f 753a 7361 742f  i32.trunc_u:sat/
0000b02: 6633 32                                  f32  ; export name
0000b05: 00                                        ; export kind
0000b06: b501                                      ; export func index
0000b08: 13                                        ; string length
0000b09: 6933 322e 7472 756e 635f 733a 7361 742f  i32.trunc_s:sat/
0000b19: 6636 34                                  f64  ; export name
0000b1c: 00                                        ; export kind
0000b1d: b601                                      ; export func index
0000b1f: 13                                        ; string length
0000b20: 6933 322e 7472 756e 635f 753a 7361 742f  i32.trunc_u:sat/
0000b30: 6636 34                                  f64  ; export name
0000b33: 00                                        ; export kind
0000b34: b701                                      ; export func index
0000b36: 13                                        ; string length
0000b37: 6936 342e 7472 756e 635f 733a 7361 742f  i64.trunc_s:sat/
0000b47: 6633 32                                  f32  ; export name
0000b4a: 00                                        ; export kind
0000b4b: b801                                      ; export func index
0000b4d: 13                                        ; string length
0000b4e: 6936 342e 7472 756e 635f 753a 7361 742f  i64.trunc_u:sat/
0000b5e: 6633 32                                  f32  ; export name
0000b61: 00                                        ; export kind
0000b62: b901                                      ; export func index
0000b64: 13                                        ; string length
0000b65: 6936 342e 7472 756e 635f 733a 7361 742f  i64.trunc_s:sat/
0000b75: 6636 34                                  f64  ; export name
0000b78: 00                                        ; export kind
0000b79: ba01                                      ; export func index
0000b7b: 13                                        ; string length
0000b7c: 6936 342e 7472 756e 635f 753a 7361 742f  i64.trunc_u:sat/
0000b8c: 6636 34                                  f64  ; export name
0000b8f: 00                                        ; export kind
0000b90: bb01                                      ; export func index
0000b92: 0b                                        ; string length
0000b93: 6d65 6d6f 7279 2e69 6e69 74              memory.init  ; export name
0000b9e: 00                                        ; export kind
0000b9f: bc01                                      ; export func index
0000ba1: 09                                        ; string length
0000ba2: 6461 7461 2e64 726f 70                   data.drop  ; export name
0000bab: 00                                        ; export kind
0000bac: bd01                                      ; export func index
0000bae: 0b                                        ; string length
0000baf: 6d65 6d6f 7279 2e63 6f70 79              memory.copy  ; export name
0000bba: 00                                        ; export kind
0000bbb: be01                                      ; export func index
0000bbd: 0b                                        ; string length
0000bbe: 6d65 6d6f 7279 2e66 696c 6c              memory.fill  ; export name
0000bc9: 00                                        ; export kind
0000bca: bf01                                      ; export func index
0000bcc: 0a                                        ; string length
0000bcd: 7461 626c 652e 696e 6974                 table.init  ; export name
0000bd7: 00                                        ; export kind
0000bd8: c001                                      ; export func index
0000bda: 09                                        ; string length
0000bdb: 656c 656d 2e64 726f 70                   elem.drop  ; export name
0000be4: 00                                        ; export kind
0000be5: c101                                      ; export func index
0000be7: 0a                                        ; string length
0000be8: 7461 626c 652e 636f 7079                 table.copy  ; export name
0000bf2: 00                                        ; export kind
0000bf3: c201                                      ; export func index
0000bf5: 09                                        ; string length
0000bf6: 7631 3238 2e6c 6f61 64                   v128.load  ; export name
0000bff: 00                                        ; export kind
0000c00: c301                                      ; export func index
0000c02: 0a                                        ; string length
0000c03: 7631 3238 2e73 746f 7265                 v128.store  ; export name
0000c0d: 00                                        ; export kind
0000c0e: c401                                      ; export func index
0000c10: 0a                                        ; string length
0000c11: 7631 3238 2e63 6f6e 7374                 v128.const  ; export name
0000c1b: 00                                        ; export kind
0000c1c: c501                                      ; export func index
0000c1e: 0b                                        ; string length
0000c1f: 6938 7831 362e 7370 6c61 74              i8x16.splat  ; export name
0000c2a: 00                                        ; export kind
0000c2b: c601                                      ; export func index
0000c2d: 14                                        ; string length
0000c2e: 6938 7831 362e 6578 7472 6163 745f 6c61  i8x16.extract_la
0000c3e: 6e65 5f73                                ne_s  ; export name
0000c42: 00                                        ; export kind
0000c43: c701                                      ; export func index
0000c45: 14                                        ; string length
0000c46: 6938 7831 362e 6578 7472 6163 745f 6c61  i8x16.extract_la
0000c56: 6e65 5f75                                ne_u  ; export name
0000c5a: 00                                        ; export kind
0000c5b: c801                                      ; export func index
0000c5d: 12                                        ; string length
0000c5e: 6938 7831 362e 7265 706c 6163 655f 6c61  i8x16.replace_la
0000c6e: 6e65                                     ne  ; export name
0000c70: 00                                        ; export kind
0000c71: c901                                      ; export func index
0000c73: 0b                                        ; string length
0000c74: 6931 3678 382e 7370 6c61 74              i16x8.splat  ; export name
0000c7f: 00                                        ; export kind
0000c80: ca01                                      ; export func index
0000c82: 14                                        ; string length
0000c83: 6931 3678 382e 6578 7472 6163 745f 6c61  i16x8.extract_la
0000c93: 6e65 5f73                                ne_s  ; export name
0000c97: 00                                        ; export kind
0000c98: cb01                                      ; export func index
0000c9a: 14                                        ; string length
0000c9b: 6931 3678 382e 6578 7472 6163 745f 6c61  i16x8.extract_la
0000cab: 6e65 5f75                                ne_u  ; export name
0000caf: 00                                        ; export kind
0000cb0: cc01                                      ; export func index
0000cb2: 12                                        ; string length
0000cb3: 6931 3678 382e 7265 706c 6163 655f 6c61  i16x8.replace_la
0000cc3: 6e65                                     ne  ; export name
0000cc5: 00                                        ; export kind
0000cc6: cd01                                      ; export func index
0000cc8: 0b                                        ; string length
0000cc9: 6933 3278 342e 7370 6c61 74              i32x4.splat  ; export name
0000cd4: 00                                        ; export kind
0000cd5: ce01                                      ; export func index
0000cd7: 12                                        ; string length
0000cd8: 6933 3278 342e 6578 7472 6163 745f 6c61  i32x4.extract_la
0000ce8: 6e65                                     ne  ; export name
0000cea: 00                                        ; export kind
0000ceb: cf01                                      ; export func index
0000ced: 12                                        ; string length
0000cee: 6933 3278 342e 7265 706c 6163 655f 6c61  i32x4.replace_la
0000cfe: 6e65                                     ne  ; export name
0000d00: 00                                        ; export kind
0000d01: d001                                      ; export func index
0000d03: 0b                                        ; string length
0000d04: 6936 3478 322e 7370 6c61 74              i64x2.splat  ; export name
0000d0f: 00                                        ; export kind
0000d10: d101                                      ; export func index
0000d12: 12                                        ; string length
0000d13: 6936 3478 322e 6578 7472 6163 745f 6c61  i64x2.extract_la
0000d23: 6e65                                     ne  ; export name
0000d25: 00                                        ; export kind
0000d26: d201                                      ; export func index
0000d28: 12                                        ; string length
0000d29: 6936 3478 322e 7265 706c 6163 655f 6c61  i64x2.replace_la
0000d39: 6e65                                     ne  ; export name
0000d3b: 00                                        ; export kind
0000d3c: d301                                      ; export func index
0000d3e: 0b                                        ; string length
0000d3f: 6633 3278 342e 7370 6c61 74              f32x4.splat  ; export name
0000d4a: 00                                        ; export kind
0000d4b: d401                                      ; export func index
0000d4d: 12                                        ; string length
0000d4e: 6633 3278 342e 6578 7472 6163 745f 6c61  f32x4.extract_la
0000d5e: 6e65                                     ne  ; export name
0000d60: 00                                        ; export kind
0000d61: d501                                      ; export func index
0000d63: 12                                        ; string length
0000d64: 6633 3278 342e 7265 706c 6163 655f 6c61  f32x4.replace_la
0000d74: 6e65                                     ne  ; export name
0000d76: 00                                        ; export kind
0000d77: d601                                      ; export func index
0000d79: 0b                                        ; string length
0000d7a: 6636 3478 322e 7370 6c61 74              f64x2.splat  ; export name
0000d85: 00                                        ; export kind
0000d86: d701                                      ; export func index
0000d88: 12                                        ; string length
0000d89: 6636 3478 322e 6578 7472 6163 745f 6c61  f64x2.extract_la
0000d99: 6e65                                     ne  ; export name
0000d9b: 00                                        ; export kind
0000d9c: d801                                      ; export func index
0000d9e: 12                                        ; string length
0000d9f: 6636 3478 322e 7265 706c 6163 655f 6c61  f64x2.replace_la
0000daf: 6e65                                     ne  ; export name
0000db1: 00                                        ; export kind
0000db2: d901                                      ; export func index
0000db4: 08                                        ; string length
0000db5: 6938 7831 362e 6571                      i8x16.eq  ; export name
0000dbd: 00                                        ; export kind
0000dbe: da01                                      ; export func index
0000dc0: 08                                        ; string length
0000dc1: 6938 7831 362e 6e65                      i8x16.ne  ; export name
0000dc9: 00                                        ; export kind
0000dca: db01                                      ; export func index
0000dcc: 0a                                        ; string length
0000dcd: 6938 7831 362e 6c74 5f73                 i8x16.lt_s  ; export name
0000dd7: 00                                        ; export kind
0000dd8: dc01                                      ; export func index
0000dda: 0a                                        ; string length
0000ddb: 6938 7831 362e 6c74 5f75                 i8x16.lt_u  ; export name
0000de5: 00                                        ; export kind
0000de6: dd01                                      ; export func index
0000de8: 0a                                        ; string length
0000de9: 6938 7831 362e 6774 5f73                 i8x16.gt_s  ; export name
0000df3: 00                                        ; export kind
0000df4: de01                                      ; export func index
0000df6: 0a                                        ; string length
0000df7: 6938 7831 362e 6774 5f75                 i8x16.gt_u  ; export name
0000e01: 00                                        ; export kind
0000e02: df01                                      ; export func index
0000e04: 0a                                        ; string length
0000e05: 6938 7831 362e 6c65 5f73                 i8x16.le_s  ; export name
0000e0f: 00                                        ; export kind
0000e10: e001                                      ; export func index
0000e12: 0a                                        ; string length
0000e13: 6938 7831 362e 6c65 5f75                 i8x16.le_u  ; export name
0000e1d: 00                                        ; export kind
0000e1e: e101                                      ; export func index
0000e20: 0a                                        ; string length
0000e21: 6938 7831 362e 6765 5f73                 i8x16.ge_s  ; export name
0000e2b: 00                                        ; export kind
0000e2c: e201                                      ; export func index
0000e2e: 0a                                        ; string length
0000e2f: 6938 7831 362e 6765 5f75                 i8x16.ge_u  ; export name
0000e39: 00                                        ; export kind
0000e3a: e301                                      ; export func index
0000e3c: 08                                        ; string length
0000e3d: 6931 3678 382e 6571                      i16x8.eq  ; export name
0000e45: 00                                        ; export kind
0000e46: e401                                      ; export func index
0000e48: 08                                        ; string length
0000e49: 6931 3678 382e 6e65                      i16x8.ne  ; export name
0000e51: 00                                        ; export kind
0000e52: e501                                      ; export func index
0000e54: 0a                                        ; string length
0000e55: 6931 3678 382e 6c74 5f73                 i16x8.lt_s  ; export name
0000e5f: 00                                        ; export kind
0000e60: e601                                      ; export func index
0000e62: 0a                                        ; string length
0000e63: 6931 3678 382e 6c74 5f75                 i16x8.lt_u  ; export name
0000e6d: 00                                        ; export kind
0000e6e: e701                                      ; export func index
0000e70: 0a                                        ; string length
0000e71: 6931 3678 382e 6774 5f73                 i16x8.gt_s  ; export name
0000e7b: 00                                        ; export kind
0000e7c: e801                                      ; export func index
0000e7e: 0a                                        ; string length
0000e7f: 6931 3678 382e 6774 5f75                 i16x8.gt_u  ; export name
0000e89: 00                                        ; export kind
0000e8a: e901                                      ; export func index
0000e8c: 0a                                        ; string length
0000e8d: 6931 3678 382e 6c65 5f73                 i16x8.le_s  ; export name
0000e97: 00                                        ; export kind
0000e98: ea01                                      ; export func index
0000e9a: 0a                                        ; string length
0000e9b: 6931 3678 382e 6c65 5f75                 i16x8.le_u  ; export name
0000ea5: 00                                        ; export kind
0000ea6: eb01                                      ; export func index
0000ea8: 0a                                        ; string length
0000ea9: 6931 3678 382e 6765 5f73                 i16x8.ge_s  ; export name
0000eb3: 00                                        ; export kind
0000eb4: ec01                                      ; export func index
0000eb6: 0a                                        ; string length
0000eb7: 6931 3678 382e 6765 5f75                 i16x8.ge_u  ; export name
0000ec1: 00                                        ; export kind
0000ec2: ed01                                      ; export func index
0000ec4: 08                                        ; string length
0000ec5: 6933 3278 342e 6571                      i32x4.eq  ; export name
0000ecd: 00                                        ; export kind
0000ece: ee01                                      ; export func index
0000ed0: 08                                        ; string length
0000ed1: 6933 3278 342e 6e65                      i32x4.ne  ; export name
0000ed9: 00                                        ; export kind
0000eda: ef01                                      ; export func index
0000edc: 0a                                        ; string length
0000edd: 6933 3278 342e 6c74 5f73                 i32x4.lt_s  ; export name
0000ee7: 00                                        ; export kind
0000ee8: f001                                      ; export func index
0000eea: 0a                                        ; string length
0000eeb: 6933 3278 342e 6c74 5f75                 i32x4.lt_u  ; export name
0000ef5: 00                                        ; export kind
0000ef6: f101                                      ; export func index
0000ef8: 0a                                        ; string length
0000ef9: 6933 3278 342e 6774 5f73                 i32x4.gt_s  ; export name
0000f03: 00                                        ; export kind
0000f04: f201                                      ; export func index
0000f06: 0a                                        ; string length
0000f07: 6933 3278 342e 6774 5f75                 i32x4.gt_u  ; export name
0000f11: 00                                        ; export kind
0000f12: f301                                      ; export func index
0000f14: 0a                                        ; string length
0000f15: 6933 3278 342e 6c65 5f73                 i32x4.le_s  ; export name
0000f1f: 00                                        ; export kind
0000f20: f401                                      ; export func index
0000f22: 0a                                        ; string length
0000f23: 6933 3278 342e 6c65 5f75                 i32x4.le_u  ; export name
0000f2d: 00                                        ; export kind
0000f2e: f501                                      ; export func index
0000f30: 0a                                        ; string length
0000f31: 6933 3278 342e 6765 5f73                 i32x4.ge_s  ; export name
0000f3b: 00                                        ; export kind
0000f3c: f601                                      ; export func index
0000f3e: 0a                                        ; string length
0000f3f: 6933 3278 342e 6765 5f75                 i32x4.ge_u  ; export name
0000f49: 00                                        ; export kind
0000f4a: f701                                      ; export func index
0000f4c: 08                                        ; string length
0000f4d: 6633 3278 342e 6571                      f32x4.eq  ; export name
0000f55: 00                                        ; export kind
0000f56: f801                                      ; export func index
0000f58: 08                                        ; string length
0000f59: 6633 3278 342e 6e65                      f32x4.ne  ; export name
0000f61: 00                                        ; export kind
0000f62: f901                                      ; export func index
0000f64: 08                                        ; string length
0000f65: 6633 3278 342e 6c74                      f32x4.lt  ; export name
0000f6d: 00                                        ; export kind
0000f6e: fa01                                      ; export func index
0000f70: 08                                        ; string length
0000f71: 6633 3278 342e 6774                      f32x4.gt  ; export name
0000f79: 00                                        ; export kind
0000f7a: fb01                                      ; export func index
0000f7c: 08                                        ; string length
0000f7d: 6633 3278 342e 6c65                      f32x4.le  ; export name
0000f85: 00                                        ; export kind
0000f86: fc01                                      ; export func index
0000f88: 08                                        ; string length
0000f89: 6633 3278 342e 6765                      f32x4.ge  ; export name
0000f91: 00                                        ; export kind
0000f92: fd01                                      ; export func index
0000f94: 08                                        ; string length
0000f95: 6636 3478 322e 6571                      f64x2.eq  ; export name
0000f9d: 00                                        ; export kind
0000f9e: fe01                                      ; export func index
0000fa0: 08                                        ; string length
0000fa1: 6636 3478 322e 6e65                      f64x2.ne  ; export name
0000fa9: 00                                        ; export kind
0000faa: ff01                                      ; export func index
0000fac: 08                                        ; string length
0000fad: 6636 3478 322e 6c74                      f64x2.lt  ; export name
0000fb5: 00                                        ; export kind
0000fb6: 8002                                      ; export func index
0000fb8: 08                                        ; string length
0000fb9: 6636 3478 322e 6774                      f64x2.gt  ; export name
0000fc1: 00                                        ; export kind
0000fc2: 8102                                      ; export func index
0000fc4: 08                                        ; string length
0000fc5: 6636 3478 322e 6c65                      f64x2.le  ; export name
0000fcd: 00                                        ; export kind
0000fce: 8202                                      ; export func index
0000fd0: 08                                        ; string length
0000fd1: 6636 3478 322e 6765                      f64x2.ge  ; export name
0000fd9: 00                                        ; export kind
0000fda: 8302                                      ; export func index
0000fdc: 08                                        ; string length
0000fdd: 7631 3238 2e6e 6f74                      v128.not  ; export name
0000fe5: 00                                        ; export kind
0000fe6: 8402                                      ; export func index
0000fe8: 08                                        ; string length
0000fe9: 7631 3238 2e61 6e64                      v128.and  ; export name
0000ff1: 00                                        ; export kind
0000ff2: 8502                                      ; export func index
0000ff4: 07                                        ; string length
0000ff5: 7631 3238 2e6f 72                        v128.or  ; export name
0000ffc: 00                                        ; export kind
0000ffd: 8602                                      ; export func index
0000fff: 08                                        ; string length
0001000: 7631 3238 2e78 6f72                      v128.xor  ; export name
0001008: 00                                        ; export kind
0001009: 8702                                      ; export func index
000100b: 0e                                        ; string length
000100c: 7631 3238 2e62 6974 7365 6c65 6374       v128.bitselect  ; export name
000101a: 00                                        ; export kind
000101b: 8802                                      ; export func index
000101d: 09                                        ; string length
000101e: 6938 7831 362e 6e65 67                   i8x16.neg  ; export name
0001027: 00                                        ; export kind
0001028: 8902                                      ; export func index
000102a: 0e                                        ; string length
000102b: 6938 7831 362e 616e 795f 7472 7565       i8x16.any_true  ; export name
0001039: 00                                        ; export kind
000103a: 8a02                                      ; export func index
000103c: 0e                                        ; string length
000103d: 6938 7831 362e 616c 6c5f 7472 7565       i8x16.all_true  ; export name
000104b: 00                                        ; export kind
000104c: 8b02                                      ; export func index
000104e: 09                                        ; string length
000104f: 6938 7831 362e 7368 6c                   i8x16.shl  ; export name
0001058: 00                                        ; export kind
0001059: 8c02                                      ; export func index
000105b: 0b                                        ; string length
000105c: 6938 7831 362e 7368 725f 73              i8x16.shr_s  ; export name
0001067: 00                                        ; export kind
0001068: 8d02                                      ; export func index
000106a: 0b                                        ; string length
000106b: 6938 7831 362e 7368 725f 75              i8x16.shr_u  ; export name
0001076: 00                                        ; export kind
0001077: 8e02                                      ; export func index
0001079: 09                                        ; string length
000107a: 6938 7831 362e 6164 64                   i8x16.add  ; export name
0001083: 00                                        ; export kind
0001084: 8f02                                      ; export func index
0001086: 14                                        ; string length
0001087: 6938 7831 362e 6164 645f 7361 7475 7261  i8x16.add_satura
0001097: 7465 5f73                                te_s  ; export name
000109b: 00                                        ; export kind
000109c: 9002                                      ; export func index
000109e: 14                                        ; string length
000109f: 6938 7831 362e 6164 645f 7361 7475 7261  i8x16.add_satura
00010af: 7465 5f75                                te_u  ; export name
00010b3: 00                                        ; export kind
00010b4: 9102                                      ; export func index
00010b6: 09                                        ; string length
00010b7: 6938 7831 362e 7375 62                   i8x16.sub  ; export name
00010c0: 00                                        ; export kind
00010c1: 9202                                      ; export func index
00010c3: 14                                        ; string length
00010c4: 6938 7831 362e 7375 625f 7361 7475 7261  i8x16.sub_satura
00010d4: 7465 5f73                                te_s  ; export name
00010d8: 00                                        ; export kind
00010d9: 9302                                      ; export func index
00010db: 14                                        ; string length
00010dc: 6938 7831 362e 7375 625f 7361 7475 7261  i8x16.sub_satura
00010ec: 7465 5f75                                te_u  ; export name
00010f0: 00                                        ; export kind
00010f1: 9402                                      ; export func index
00010f3: 0b                                        ; string length
00010f4: 6938 7831 362e 6d69 6e5f 73              i8x16.min_s  ; export name
00010ff: 00                                        ; export kind
0001100: 9502                                      ; export func index
0001102: 0b                                        ; string length
0001103: 6938 7831 362e 6d69 6e5f 75              i8x16.min_u  ; export name
000110e: 00                                        ; export kind
000110f: 9602                                      ; export func index
0001111: 0b                                        ; string length
0001112: 6938 7831 362e 6d61 785f 73              i8x16.max_s  ; export name
000111d: 00                                        ; export kind
000111e: 9702                                      ; export func index
0001120: 0b                                        ; string length
0001121: 6938 7831 362e 6d61 785f 75              i8x16.max_u  ; export name
000112c: 00                                        ; export kind
000112d: 9802                                      ; export func index
000112f: 09                                        ; string length
0001130: 6931 3678 382e 6e65 67                   i16x8.neg  ; export name
0001139: 00                                        ; export kind
000113a: 9902                                      ; export func index
000113c: 0e                                        ; string length
000113d: 6931 3678 382e 616e 795f 7472 7565       i16x8.any_true  ; export name
000114b: 00                                        ; export kind
000114c: 9a02                                      ; export func index
000114e: 0e                                        ; string length
000114f: 6931 3678 382e 616c 6c5f 7472 7565       i16x8.all_true  ; export name
000115d: 00                                        ; export kind
000115e: 9b02                                      ; export func index
0001160: 09                                        ; string length
0001161: 6931 3678 382e 7368 6c                   i16x8.shl  ; export name
000116a: 00                                        ; export kind
000116b: 9c02                                      ; export func index
000116d: 0b                                        ; string length
000116e: 6931 3678 382e 7368 725f 73              i16x8.shr_s  ; export name
0001179: 00                                        ; export kind
000117a: 9d02                                      ; export func index
000117c: 0b                                        ; string length
000117d: 6931 3678 382e 7368 725f 75              i16x8.shr_u  ; export name
0001188: 00                                        ; export kind
0001189: 9e02                                      ; export func index
000118b: 09                                        ; string length
000118c: 6931 3678 382e 6164 64                   i16x8.add  ; export name
0001195: 00                                        ; export kind
0001196: 9f02                                      ; export func index
0001198: 14                                        ; string length
0001199: 6931 3678 382e 6164 645f 7361 7475 7261  i16x8.add_satura
00011a9: 7465 5f73                                te_s  ; export name
00011ad: 00                                        ; export kind
00011ae: a002                                      ; export func index
00011b0: 14                                        ; string length
00011b1: 6931 3678 382e 6164 645f 7361 7475 7261  i16x8.add_satura
00011c1: 7465 5f75                                te_u  ; export name
00011c5: 00                                        ; export kind
00011c6: a102                                      ; export func index
00011c8: 09                                        ; string length
00011c9: 6931 3678 382e 7375 62                   i16x8.sub  ; export name
00011d2: 00                                        ; export kind
00011d3: a202                                      ; export func index
00011d5: 14                                        ; string length
00011d6: 6931 3678 382e 7375 625f 7361 7475 7261  i16x8.sub_satura
00011e6: 7465 5f73                                te_s  ; export name
00011ea: 00                                        ; export kind
00011eb: a302                                      ; export func index
00011ed: 14                                        ; string length
00011ee: 6931 3678 382e 7375 625f 7361 7475 7261  i16x8.sub_satura
00011fe: 7465 5f75                                te_u  ; export name
0001202: 00                                        ; export kind
0001203: a402                                      ; export func index
0001205: 09                                        ; string length
0001206: 6931 3678 382e 6d75 6c                   i16x8.mul  ; export name
000120f: 00                                        ; export kind
0001210: a502                                      ; export func index
0001212: 0b                                        ; string length
0001213: 6931 3678 382e 6d69 6e5f 73              i16x8.min_s  ; export name
000121e: 00                                        ; export kind
000121f: a602                                      ; export func index
0001221: 0b                                        ; string length
0001222: 6931 3678 382e 6d69 6e5f 75              i16x8.min_u  ; export name
000122d: 00                                        ; export kind
000122e: a702                                      ; export func index
0001230: 0b                                        ; string length
0001231: 6931 3678 382e 6d61 785f 73              i16x8.max_s  ; export name
000123c: 00                                        ; export kind
000123d: a802                                      ; export func index
000123f: 0b                                        ; string length
0001240: 6931 3678 382e 6d61 785f 75              i16x8.max_u  ; export name
000124b: 00                                        ; export kind
000124c: a902                                      ; export func index
000124e: 09                                        ; string length
000124f: 6933 3278 342e 6e65 67                   i32x4.neg  ; export name
0001258: 00                                        ; export kind
0001259: aa02                                      ; export func index
000125b: 0e                                        ; string length
000125c: 6933 3278 342e 616e 795f 7472 7565       i32x4.any_true  ; export name
000126a: 00                                        ; export kind
000126b: ab02                                      ; export func index
000126d: 0e                                        ; string length
000126e: 6933 3278 342e 616c 6c5f 7472 7565       i32x4.all_true  ; export name
000127c: 00                                        ; export kind
000127d: ac02                                      ; export func index
000127f: 09                                        ; string length
0001280: 6933 3278 342e 7368 6c                   i32x4.shl  ; export name
0001289: 00                                        ; export kind
000128a: ad02                                      ; export func index
000128c: 0b                                        ; string length
000128d: 6933 3278 342e 7368 725f 73              i32x4.shr_s  ; export name
0001298: 00                                        ; export kind
0001299: ae02                                      ; export func index
000129b: 0b                                        ; string length
000129c: 6933 3278 342e 7368 725f 75              i32x4.shr_u  ; export name
00012a7: 00                                        ; export kind
00012a8: af02                                      ; export func index
00012aa: 09                                        ; string length
00012ab: 6933 3278 342e 6164 64                   i32x4.add  ; export name
00012b4: 00                                        ; export kind
00012b5: b002                                      ; export func index
00012b7: 09                                        ; string length
00012b8: 6933 3278 342e 7375 62                   i32x4.sub  ; export name
00012c1: 00                                        ; export kind
00012c2: b102                                      ; export func index
00012c4: 09                                        ; string length
00012c5: 6933 3278 342e 6d75 6c                   i32x4.mul  ; export name
00012ce: 00                                        ; export kind
00012cf: b202                                      ; export func index
00012d1: 0b                                        ; string length
00012d2: 6933 3278 342e 6d69 6e5f 73              i32x4.min_s  ; export name
00012dd: 00                                        ; export kind
00012de: b302                                      ; export func index
00012e0: 0b                                        ; string length
00012e1: 6933 3278 342e 6d69 6e5f 75              i32x4.min_u  ; export name
00012ec: 00                                        ; export kind
00012ed: b402                                      ; export func index
00012ef: 0b                                        ; string length
00012f0: 6933 3278 342e 6d61 785f 73              i32x4.max_s  ; export name
00012fb: 00                                        ; export kind
00012fc: b502                                      ; export func index
00012fe: 0b                                        ; string length
00012ff: 6933 3278 342e 6d61 785f 75              i32x4.max_u  ; export name
000130a: 00                                        ; export kind
000130b: b602                                      ; export func index
000130d: 09                                        ; string length
000130e: 6936 3478 322e 6e65 67                   i64x2.neg  ; export name
0001317: 00                                        ; export kind
0001318: b702                                      ; export func index
000131a: 09                                        ; string length
000131b: 6936 3478 322e 7368 6c                   i64x2.shl  ; export name
0001324: 00                                        ; export kind
0001325: b802                                      ; export func index
0001327: 0b                                        ; string length
0001328: 6936 3478 322e 7368 725f 73              i64x2.shr_s  ; export name
0001333: 00                                        ; export kind
0001334: b902                                      ; export func index
0001336: 0b                                        ; string length
0001337: 6936 3478 322e 7368 725f 75              i64x2.shr_u  ; export name
0001342: 00                                        ; export kind
0001343: ba02                                      ; export func index
0001345: 09                                        ; string length
0001346: 6936 3478 322e 6164 64                   i64x2.add  ; export name
000134f: 00                                        ; export kind
0001350: bb02                                      ; export func index
0001352: 09                                        ; string length
0001353: 6936 3478 322e 7375 62                   i64x2.sub  ; export name
000135c: 00                                        ; export kind
000135d: bc02                                      ; export func index
000135f: 09                                        ; string length
0001360: 6936 3478 322e 6d75 6c                   i64x2.mul  ; export name
0001369: 00                                        ; export kind
000136a: bd02                                      ; export func index
000136c: 09                                        ; string length
000136d: 6633 3278 342e 6162 73                   f32x4.abs  ; export name
0001376: 00                                        ; export kind
0001377: be02                                      ; export func index
0001379: 09                                        ; string length
000137a: 6633 3278 342e 6e65 67                   f32x4.neg  ; export name
0001383: 00                                        ; export kind
0001384: bf02                                      ; export func index
0001386: 0a                                        ; string length
0001387: 6633 3278 342e 7371 7274                 f32x4.sqrt  ; export name
0001391: 00                                        ; export kind
0001392: c002                                      ; export func index
0001394: 09                                        ; string length
0001395: 6633 3278 342e 6164 64                   f32x4.add  ; export name
000139e: 00                                        ; export kind
000139f: c102                                      ; export func index
00013a1: 09                                        ; string length
00013a2: 6633 3278 342e 7375 62                   f32x4.sub  ; export name
00013ab: 00                                        ; export kind
00013ac: c202                                      ; export func index
00013ae: 09                                        ; string length
00013af: 6633 3278 342e 6d75 6c                   f32x4.mul  ; export name
00013b8: 00                                        ; export kind
00013b9: c302                                      ; export func index
00013bb: 09                                        ; string length
00013bc: 6633 3278 342e 6469 76                   f32x4.div  ; export name
00013c5: 00                                        ; export kind
00013c6: c402                                      ; export func index
00013c8: 09                                        ; string length
00013c9: 6633 3278 342e 6d69 6e                   f32x4.min  ; export name
00013d2: 00                                        ; export kind
00013d3: c502                                      ; export func index
00013d5: 09                                        ; string length
00013d6: 6633 3278 342e 6d61 78                   f32x4.max  ; export name
00013df: 00                                        ; export kind
00013e0: c602                                      ; export func index
00013e2: 09                                        ; string length
00013e3: 6636 3478 322e 6162 73                   f64x2.abs  ; export name
00013ec: 00                                        ; export kind
00013ed: c702                                      ; export func index
00013ef: 09                                        ; string length
00013f0: 6636 3478 322e 6e65 67                   f64x2.neg  ; export name
00013f9: 00                                        ; export kind
00013fa: c802                                      ; export func index
00013fc: 0a                                        ; string length
00013fd: 6636 3478 322e 7371 7274                 f64x2.sqrt  ; export name
0001407: 00                                        ; export kind
0001408: c902                                      ; export func index
000140a: 09                                        ; string length
000140b: 6636 3478 322e 6164 64                   f64x2.add  ; export name
0001414: 00                                        ; export kind
0001415: ca02                                      ; export func index
0001417: 09                                        ; string length
0001418: 6636 3478 322e 7375 62                   f64x2.sub  ; export name
0001421: 00                                        ; export kind
0001422: cb02                                      ; export func index
0001424: 09                                        ; string length
0001425: 6636 3478 322e 6d75 6c                   f64x2.mul  ; export name
000142e: 00                                        ; export kind
000142f: cc02                                      ; export func index
0001431: 09                                        ; string length
0001432: 6636 3478 322e 6469 76                   f64x2.div  ; export name
000143b: 00                                        ; export kind
000143c: cd02                                      ; export func index
000143e: 09                                        ; string length
000143f: 6636 3478 322e 6d69 6e                   f64x2.min  ; export name
0001448: 00                                        ; export kind
0001449: ce02                                      ; export func index
000144b: 09                                        ; string length
000144c: 6636 3478 322e 6d61 78                   f64x2.max  ; export name
0001455: 00                                        ; export kind
0001456: cf02                                      ; export func index
0001458: 17                                        ; string length
0001459: 6933 3278 342e 7472 756e 635f 7361 745f  i32x4.trunc_sat_
0001469: 6633 3278 345f 73                        f32x4_s  ; export name
0001470: 00                                        ; export kind
0001471: d002                                      ; export func index
0001473: 17                                        ; string length
0001474: 6933 3278 342e 7472 756e 635f 7361 745f  i32x4.trunc_sat_
0001484: 6633 3278 345f 75                        f32x4_u  ; export name
000148b: 00                                        ; export kind
000148c: d102                                      ; export func index
000148e: 15                                        ; string length
000148f: 6633 3278 342e 636f 6e76 6572 745f 6933  f32x4.convert_i3
000149f: 3278 345f 73                             2x4_s  ; export name
00014a4: 00                                        ; export kind
00014a5: d202                                      ; export func index
00014a7: 15                                        ; string length
00014a8: 6633 3278 342e 636f 6e76 6572 745f 6933  f32x4.convert_i3
00014b8: 3278 345f 75                             2x4_u  ; export name
00014bd: 00                                        ; export kind
00014be: d302                                      ; export func index
00014c0: 0d                                        ; string length
00014c1: 7638 7831 362e 7377 697a 7a6c 65         v8x16.swizzle  ; export name
00014ce: 00                                        ; export kind
00014cf: d402                                      ; export func index
00014d1: 0d                                        ; string length
00014d2: 7638 7831 362e 7368 7566 666c 65         v8x16.shuffle  ; export name
00014df: 00                                        ; export kind
00014e0: d502                                      ; export func index
00014e2: 10                                        ; string length
00014e3: 7638 7831 362e 6c6f 6164 5f73 706c 6174  v8x16.load_splat  ; export name
00014f3: 00                                        ; export kind
00014f4: d602                                      ; export func index
00014f6: 10                                        ; string length
00014f7: 7631 3678 382e 6c6f 6164 5f73 706c 6174  v16x8.load_splat  ; export name
0001507: 00                                        ; export kind
0001508: d702                                      ; export func index
000150a: 10                                        ; string length
000150b: 7633 3278 342e 6c6f 6164 5f73 706c 6174  v32x4.load_splat  ; export name
000151b: 00                                        ; export kind
000151c: d802                                      ; export func index
000151e: 10                                        ; string length
000151f: 7636 3478 322e 6c6f 6164 5f73 706c 6174  v64x2.load_splat  ; export name
000152f: 00                                        ; export kind
0001530: d902                                      ; export func index
0001532: 14                                        ; string length
0001533: 6938 7831 362e 6e61 7272 6f77 5f69 3136  i8x16.narrow_i16
0001543: 7838 5f73                                x8_s  ; export name
0001547: 00                                        ; export kind
0001548: da02                                      ; export func index
000154a: 14                                        ; string length
000154b: 6938 7831 362e 6e61 7272 6f77 5f69 3136  i8x16.narrow_i16
000155b: 7838 5f75                                x8_u  ; export name
000155f: 00                                        ; export kind
0001560: db02                                      ; export func index
0001562: 14                                        ; string length
0001563: 6931 3678 382e 6e61 7272 6f77 5f69 3332  i16x8.narrow_i32
0001573: 7834 5f73                                x4_s  ; export name
0001577: 00                                        ; export kind
0001578: dc02                                      ; export func index
000157a: 14                                        ; string length
000157b: 6931 3678 382e 6e61 7272 6f77 5f69 3332  i16x8.narrow_i32
000158b: 7834 5f75                                x4_u  ; export name
000158f: 00                                        ; export kind
0001590: dd02                                      ; export func index
0001592: 17                                        ; string length
0001593: 6931 3678 382e 7769 6465 6e5f 6c6f 775f  i16x8.widen_low_
00015a3: 6938 7831 365f 73                        i8x16_s  ; export name
00015aa: 00                                        ; export kind
00015ab: de02                                      ; export func index
00015ad: 18                                        ; string length
00015ae: 6931 3678 382e 7769 6465 6e5f 6869 6768  i16x8.widen_high
00015be: 5f69 3878 3136 5f73                      _i8x16_s  ; export name
00015c6: 00                                        ; export kind
00015c7: df02                                      ; export func index
00015c9: 17                                        ; string length
00015ca: 6931 3678 382e 7769 6465 6e5f 6c6f 775f  i16x8.widen_low_
00015da: 6938 7831 365f 75                        i8x16_u  ; export name
00015e1: 00                                        ; export kind
00015e2: e002                                      ; export func index
00015e4: 18                                        ; string length
00015e5: 6931 3678 382e 7769 6465 6e5f 6869 6768  i16x8.widen_high
00015f5: 5f69 3878 3136 5f75                      _i8x16_u  ; export name
00015fd: 00                                        ; export kind
00015fe: e102                                      ; export func index
0001600: 17                                        ; string length
0001601: 6933 3278 342e 7769 6465 6e5f 6c6f 775f  i32x4.widen_low_
0001611: 6931 3678 385f 73                        i16x8_s  ; export name
0001618: 00                                        ; export kind
0001619: e202                                      ; export func index
000161b: 18                                        ; string length
000161c: 6933 3278 342e 7769 6465 6e5f 6869 6768  i32x4.widen_high
000162c: 5f69 3136 7838 5f73                      _i16x8_s  ; export name
0001634: 00                                        ; export kind
0001635: e302                                      ; export func index
0001637: 17                                        ; string length
0001638: 6933 3278 342e 7769 6465 6e5f 6c6f 775f  i32x4.widen_low_
0001648: 6931 3678 385f 75                        i16x8_u  ; export name
000164f: 00                                        ; export kind
0001650: e402                                      ; export func index
0001652: 18                                        ; string length
0001653: 6933 3278 342e 7769 6465 6e5f 6869 6768  i32x4.widen_high
0001663: 5f69 3136 7838 5f75                      _i16x8_u  ; export name
000166b: 00                                        ; export kind
000166c: e502                                      ; export func index
000166e: 0f                                        ; string length
000166f: 6931 3678 382e 6c6f 6164 3878 385f 73    i16x8.load8x8_s  ; export name
000167e: 00                                        ; export kind
000167f: e602                                      ; export func index
0001681: 0f                                        ; string length
0001682: 6931 3678 382e 6c6f 6164 3878 385f 75    i16x8.load8x8_u  ; export name
0001691: 00                                        ; export kind
0001692: e702                                      ; export func index
0001694: 10                                        ; string length
0001695: 6933 3278 342e 6c6f 6164 3136 7834 5f73  i32x4.load16x4_s  ; export name
00016a5: 00                                        ; export kind
00016a6: e802                                      ; export func index
00016a8: 10                                        ; string length
00016a9: 6933 3278 342e 6c6f 6164 3136 7834 5f75  i32x4.load16x4_u  ; export name
00016b9: 00                                        ; export kind
00016ba: e902                                      ; export func index
00016bc: 10                                        ; string length
00016bd: 6936 3478 322e 6c6f 6164 3332 7832 5f73  i64x2.load32x2_s  ; export name
00016cd: 00                                        ; export kind
00016ce: ea02                                      ; export func index
00016d0: 10                                        ; string length
00016d1: 6936 3478 322e 6c6f 6164 3332 7832 5f75  i64x2.load32x2_u  ; export name
00016e1: 00                                        ; export kind
00016e2: eb02                                      ; export func index
00016e4: 0b                                        ; string length
00016e5: 7631 3238 2e61 6e64 6e6f 74              v128.andnot  ; export name
00016f0: 00                                        ; export kind
00016f1: ec02                                      ; export func index
00016f3: 0c                                        ; string length
00016f4: 6938 7831 362e 6176 6772 5f75            i8x16.avgr_u  ; export name
0001700: 00                                        ; export kind
0001701: ed02                                      ; export func index
0001703: 0c                                        ; string length
0001704: 6931 3678 382e 6176 6772 5f75            i16x8.avgr_u  ; export name
0001710: 00                                        ; export kind
0001711: ee02                                      ; export func index
0001713: 0d                                        ; string length
0001714: 6174 6f6d 6963 2e6e 6f74 6966 79         atomic.notify  ; export name
0001721: 00                                        ; export kind
0001722: ef02                                      ; export func index
0001724: 0f                                        ; string length
0001725: 6933 322e 6174 6f6d 6963 2e77 6169 74    i32.atomic.wait  ; export name
0001734: 00                                        ; export kind
0001735: f002                                      ; export func index
0001737: 0f                                        ; string length
0001738: 6936 342e 6174 6f6d 6963 2e77 6169 74    i64.atomic.wait  ; export name
0001747: 00                                        ; export kind
0001748: f102                                      ; export func index
000174a: 0f                                        ; string length
000174b: 6933 322e 6174 6f6d 6963 2e6c 6f61 64    i32.atomic.load  ; export name
000175a: 00                                        ; export kind
000175b: f202                                      ; export func index
000175d: 0f                                        ; string length
000175e: 6936 342e 6174 6f6d 6963 2e6c 6f61 64    i64.atomic.load  ; export name
000176d: 00                                        ; export kind
000176e: f302                                      ; export func index
0001770: 12                                        ; string length
0001771: 6933 322e 6174 6f6d 6963 2e6c 6f61 6438  i32.atomic.load8
0001781: 5f75                                     _u  ; export name
0001783: 00                                        ; export kind
0001784: f402                                      ; export func index
0001786: 13                                        ; string length
0001787: 6933 322e 6174 6f6d 6963 2e6c 6f61 6431  i32.atomic.load1
0001797: 365f 75                                  6_u  ; export name
000179a: 00                                        ; export kind
000179b: f502                                      ; export func index
000179d: 12                                        ; string length
000179e: 6936 342e 6174 6f6d 6963 2e6c 6f61 6438  i64.atomic.load8
00017ae: 5f75                                     _u  ; export name
00017b0: 00                                        ; export kind
00017b1: f602                                      ; export func index
00017b3: 13                                        ; string length
00017b4: 6936 342e 6174 6f6d 6963 2e6c 6f61 6431  i64.atomic.load1
00017c4: 365f 75                                  6_u  ; export name
00017c7: 00                                        ; export kind
00017c8: f702                                      ; export func index
00017ca: 13                                        ; string length
00017cb: 6936 342e 6174 6f6d 6963 2e6c 6f61 6433  i64.atomic.load3
00017db: 325f 75                                  2_u  ; export name
00017de: 00                                        ; export kind
00017df: f802                                      ; export func index
00017e1: 10                                        ; string length
00017e2: 6933 322e 6174 6f6d 6963 2e73 746f 7265  i32.atomic.store  ; export name
00017f2: 00                                        ; export kind
00017f3: f902                                      ; export func index
00017f5: 10                                        ; string length
00017f6: 6936 342e 6174 6f6d 6963 2e73 746f 7265  i64.atomic.store  ; export name
0001806: 00                                        ; export kind
0001807: fa02                                      ; export func index
0001809: 11                                        ; string length
000180a: 6933 322e 6174 6f6d 6963 2e73 746f 7265  i32.atomic.store
000181a: 38                                       8  ; export name
000181b: 00                                        ; export kind
000181c: fb02                                      ; export func index
000181e: 12                                        ; string length
000181f: 6933 322e 6174 6f6d 6963 2e73 746f 7265  i32.atomic.store
000182f: 3136                                     16  ; export name
0001831: 00                                        ; export kind
0001832: fc02                                      ; export func index
0001834: 11                                        ; string length
0001835: 6936 342e 6174 6f6d 6963 2e73 746f 7265  i64.atomic.store
0001845: 38                                       8  ; export name
0001846: 00                                        ; export kind
0001847: fd02                                      ; export func index
0001849: 12                                        ; string length
000184a: 6936 342e 6174 6f6d 6963 2e73 746f 7265  i64.atomic.store
000185a: 3136                                     16  ; export name
000185c: 00                                        ; export kind
000185d: fe02                                      ; export func index
000185f: 12                                        ; string length
0001860: 6936 342e 6174 6f6d 6963 2e73 746f 7265  i64.atomic.store
0001870: 3332                                     32  ; export name
0001872: 00                                        ; export kind
0001873: ff02                                      ; export func index
0001875: 12                                        ; string length
0001876: 6933 322e 6174 6f6d 6963 2e72 6d77 2e61  i32.atomic.rmw.a
0001886: 6464                                     dd  ; export name
0001888: 00                                        ; export kind
0001889: 8003                                      ; export func index
000188b: 12                                        ; string length
000188c: 6936 342e 6174 6f6d 6963 2e72 6d77 2e61  i64.atomic.rmw.a
000189c: 6464                                     dd  ; export name
000189e: 00                                        ; export kind
000189f: 8103                                      ; export func index
00018a1: 15                                        ; string length
00018a2: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
00018b2: 6164 645f 75                             add_u  ; export name
00018b7: 00                                        ; export kind
00018b8: 8203                                      ; export func index
00018ba: 16                                        ; string length
00018bb: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
00018cb: 2e61 6464 5f75                           .add_u  ; export name
00018d1: 00                                        ; export kind
00018d2: 8303                                      ; export func index
00018d4: 15                                        ; string length
00018d5: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
00018e5: 6164 645f 75                             add_u  ; export name
00018ea: 00                                        ; export kind
00018eb: 8403                                      ; export func index
00018ed: 16                                        ; string length
00018ee: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
00018fe: 2e61 6464 5f75                           .add_u  ; export name
0001904: 00                                        ; export kind
0001905: 8503                                      ; export func index
0001907: 16                                        ; string length
0001908: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0001918: 2e61 6464 5f75                           .add_u  ; export name
000191e: 00                                        ; export kind
000191f: 8603                                      ; export func index
0001921: 12                                        ; string length
0001922: 6933 322e 6174 6f6d 6963 2e72 6d77 2e73  i32.atomic.rmw.s
0001932: 7562                                     ub  ; export name
0001934: 00                                        ; export kind
0001935: 8703                                      ; export func index
0001937: 12                                        ; string length
0001938: 6936 342e 6174 6f6d 6963 2e72 6d77 2e73  i64.atomic.rmw.s
0001948: 7562                                     ub  ; export name
000194a: 00                                        ; export kind
000194b: 8803                                      ; export func index
000194d: 15                                        ; string length
000194e: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
000195e: 7375 625f 75                             sub_u  ; export name
0001963: 00                                        ; export kind
0001964: 8903                                      ; export func index
0001966: 16                                        ; string length
0001967: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0001977: 2e73 7562 5f75                           .sub_u  ; export name
000197d: 00                                        ; export kind
000197e: 8a03                                      ; export func index
0001980: 15                                        ; string length
0001981: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
0001991: 7375 625f 75                             sub_u  ; export name
0001996: 00                                        ; export kind
0001997: 8b03                                      ; export func index
0001999: 16                                        ; string length
000199a: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
00019aa: 2e73 7562 5f75                           .sub_u  ; export name
00019b0: 00                                        ; export kind
00019b1: 8c03                                      ; export func index
00019b3: 16                                        ; string length
00019b4: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
00019c4: 2e73 7562 5f75                           .sub_u  ; export name
00019ca: 00                                        ; export kind
00019cb: 8d03                                      ; export func index
00019cd: 12                                        ; string length
00019ce: 6933 322e 6174 6f6d 6963 2e72 6d77 2e61  i32.atomic.rmw.a
00019de: 6e64                                     nd  ; export name
00019e0: 00                                        ; export kind
00019e1: 8e03                                      ; export func index
00019e3: 12                                        ; string length
00019e4: 6936 342e 6174 6f6d 6963 2e72 6d77 2e61  i64.atomic.rmw.a
00019f4: 6e64                                     nd  ; export name
00019f6: 00                                        ; export kind
00019f7: 8f03                                      ; export func index
00019f9: 15                                        ; string length
00019fa: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
0001a0a: 616e 645f 75                             and_u  ; export name
0001a0f: 00                                        ; export kind
0001a10: 9003                                      ; export func index
0001a12: 16                                        ; string length
0001a13: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0001a23: 2e61 6e64 5f75                           .and_u  ; export name
0001a29: 00                                        ; export kind
0001a2a: 9103                                      ; export func index
0001a2c: 15                                        ; string length
0001a2d: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
0001a3d: 616e 645f 75                             and_u  ; export name
0001a42: 00                                        ; export kind
0001a43: 9203                                      ; export func index
0001a45: 16                                        ; string length
0001a46: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0001a56: 2e61 6e64 5f75                           .and_u  ; export name
0001a5c: 00                                        ; export kind
0001a5d: 9303                                      ; export func index
0001a5f: 16                                        ; string length
0001a60: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0001a70: 2e61 6e64 5f75                           .and_u  ; export name
0001a76: 00                                        ; export kind
0001a77: 9403                                      ; export func index
0001a79: 11                                        ; string length
0001a7a: 6933 322e 6174 6f6d 6963 2e72 6d77 2e6f  i32.atomic.rmw.o
0001a8a: 72                                       r  ; export name
0001a8b: 00                                        ; export kind
0001a8c: 9503                                      ; export func index
0001a8e: 11                                        ; string length
0001a8f: 6936 342e 6174 6f6d 6963 2e72 6d77 2e6f  i64.atomic.rmw.o
0001a9f: 72                                       r  ; export name
0001aa0: 00                                        ; export kind
0001aa1: 9603                                      ; export func index
0001aa3: 14                                        ; string length
0001aa4: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
0001ab4: 6f72 5f75                                or_u  ; export name
0001ab8: 00                                        ; export kind
0001ab9: 9703                                      ; export func index
0001abb: 15                                        ; string length
0001abc: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0001acc: 2e6f 725f 75                             .or_u  ; export name
0001ad1: 00                                        ; export kind
0001ad2: 9803                                      ; export func index
0001ad4: 14                                        ; string length
0001ad5: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
0001ae5: 6f72 5f75                                or_u  ; export name
0001ae9: 00                                        ; export kind
0001aea: 9903                                      ; export func index
0001aec: 15                                        ; string length
0001aed: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0001afd: 2e6f 725f 75                             .or_u  ; export name
0001b02: 00                                        ; export kind
0001b03: 9a03                                      ; export func index
0001b05: 15                                        ; string length
0001b06: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0001b16: 2e6f 725f 75                             .or_u  ; export name
0001b1b: 00                                        ; export kind
0001b1c: 9b03                                      ; export func index
0001b1e: 12                                        ; string length
0001b1f: 6933 322e 6174 6f6d 6963 2e72 6d77 2e78  i32.atomic.rmw.x
0001b2f: 6f72                                     or  ; export name
0001b31: 00                                        ; export kind
0001b32: 9c03                                      ; export func index
0001b34: 12                                        ; string length
0001b35: 6936 342e 6174 6f6d 6963 2e72 6d77 2e78  i64.atomic.rmw.x
0001b45: 6f72                                     or  ; export name
0001b47: 00                                        ; export kind
0001b48: 9d03                                      ; export func index
0001b4a: 15                                        ; string length
0001b4b: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
0001b5b: 786f 725f 75                             xor_u  ; export name
0001b60: 00                                        ; export kind
0001b61: 9e03                                      ; export func index
0001b63: 16                                        ; string length
0001b64: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0001b74: 2e78 6f72 5f75                           .xor_u  ; export name
0001b7a: 00                                        ; export kind
0001b7b: 9f03                                      ; export func index
0001b7d: 15                                        ; string length
0001b7e: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
0001b8e: 786f 725f 75                             xor_u  ; export name
0001b93: 00                                        ; export kind
0001b94: a003                                      ; export func index
0001b96: 16                                        ; string length
0001b97: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0001ba7: 2e78 6f72 5f75                           .xor_u  ; export name
0001bad: 00                                        ; export kind
0001bae: a103                                      ; export func index
0001bb0: 16                                        ; string length
0001bb1: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0001bc1: 2e78 6f72 5f75                           .xor_u  ; export name
0001bc7: 00                                        ; export kind
0001bc8: a203                                      ; export func index
0001bca: 13                                        ; string length
0001bcb: 6933 322e 6174 6f6d 6963 2e72 6d77 2e78  i32.atomic.rmw.x
0001bdb: 6368 67                                  chg  ; export name
0001bde: 00                                        ; export kind
0001bdf: a303                                      ; export func index
0001be1: 13                                        ; string length
0001be2: 6936 342e 6174 6f6d 6963 2e72 6d77 2e78  i64.atomic.rmw.x
0001bf2: 6368 67                                  chg  ; export name
0001bf5: 00                                        ; export kind
0001bf6: a403                                      ; export func index
0001bf8: 16                                        ; string length
0001bf9: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
0001c09: 7863 6867 5f75                           xchg_u  ; export name
0001c0f: 00                                        ; export kind
0001c10: a503                                      ; export func index
0001c12: 17                                        ; string length
0001c13: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0001c23: 2e78 6368 675f 75                        .xchg_u  ; export name
0001c2a: 00                                        ; export kind
0001c2b: a603                                      ; export func index
0001c2d: 16                                        ; string length
0001c2e: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
0001c3e: 7863 6867 5f75                           xchg_u  ; export name
0001c44: 00                                        ; export kind
0001c45: a703                                      ; export func index
0001c47: 17                                        ; string length
0001c48: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0001c58: 2e78 6368 675f 75                        .xchg_u  ; export name
0001c5f: 00                                        ; export kind
0001c60: a803                                      ; export func index
0001c62: 17                                        ; string length
0001c63: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0001c73: 2e78 6368 675f 75                        .xchg_u  ; export name
0001c7a: 00                                        ; export kind
0001c7b: a903                                      ; export func index
0001c7d: 16                                        ; string length
0001c7e: 6933 322e 6174 6f6d 6963 2e72 6d77 2e63  i32.atomic.rmw.c
0001c8e: 6d70 7863 6867                           mpxchg  ; export name
0001c94: 00                                        ; export kind
0001c95: aa03                                      ; export func index
0001c97: 16                                        ; string length
0001c98: 6936 342e 6174 6f6d 6963 2e72 6d77 2e63  i64.atomic.rmw.c
0001ca8: 6d70 7863 6867                           mpxchg  ; export name
0001cae: 00                                        ; export kind
0001caf: ab03                                      ; export func index
0001cb1: 19                                        ; string length
0001cb2: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
0001cc2: 636d 7078 6368 675f 75                   cmpxchg_u  ; export name
0001ccb: 00                                        ; export kind
0001ccc: ac03                                      ; export func index
0001cce: 1a                                        ; string length
0001ccf: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0001cdf: 2e63 6d70 7863 6867 5f75                 .cmpxchg_u  ; export name
0001ce9: 00                                        ; export kind
0001cea: ad03                                      ; export func index
0001cec: 19                                        ; string length
0001ced: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
0001cfd: 636d 7078 6368 675f 75                   cmpxchg_u  ; export name
0001d06: 00                                        ; export kind
0001d07: ae03                                      ; export func index
0001d09: 1a                                        ; string length
0001d0a: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0001d1a: 2e63 6d70 7863 6867 5f75                 .cmpxchg_u  ; export name
0001d24: 00                                        ; export kind
0001d25: af03                                      ; export func index
0001d27: 1a                                        ; string length
0001d28: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0001d38: 2e63 6d70 7863 6867 5f75                 .cmpxchg_u  ; export name
0001d42: 00                                        ; export kind
0001d43: b003                                      ; export func index
; move data: [1ee, 1d45) -> [1ef, 1d46)
00001ed: d736                                      ; FIXUP section size
; section "Elem" (9)
0001d46: 09                                        ; section code
0001d47: 00                                        ; section size (guess)
0001d48: 02                                        ; num elem segments
; elem segment header 0
0001d49: 00                                        ; segment flags
0001d4a: 41                                        ; i32.const
0001d4b: 00                                        ; i32 literal
0001d4c: 0b                                        ; end
0001d4d: 02                                        ; num elems
0001d4e: 01                                        ; elem function index
0001d4f: 01                                        ; elem function index
; elem segment header 1
0001d50: 01                                        ; segment flags
0001d51: 00                                        ; elem list type
0001d52: 00                                        ; num elems
0001d47: 0b                                        ; FIXUP section size
; section "DataCount" (12)
0001d53: 0c                                        ; section code
0001d54: 00                                        ; section size (guess)
0001d55: 01                                        ; data count
0001d54: 01                                        ; FIXUP section size
; section "Code" (10)
0001d56: 0a                                        ; section code
0001d57: 00                                        ; section size (guess)
0001d58: b003                                      ; num functions
; function body 0
0001d5a: 00                                        ; func body size (guess)
0001d5b: 00                                        ; local decl count
0001d5c: 0b                                        ; end
0001d5a: 02                                        ; FIXUP func body size
; function body 1
0001d5d: 00                                        ; func body size (guess)
0001d5e: 00                                        ; local decl count
0001d5f: 00                                        ; unreachable
0001d60: 0b                                        ; end
0001d5d: 03                                        ; FIXUP func body size
; function body 2
0001d61: 00                                        ; func body size (guess)
0001d62: 00                                        ; local decl count
0001d63: 0c                                        ; br
0001d64: 00                                        ; break depth
0001d65: 0b                                        ; end
0001d61: 04                                        ; FIXUP func body size
; function body 3
0001d66: 00                                        ; func body size (guess)
0001d67: 00                                        ; local decl count
0001d68: 41                                        ; i32.const
0001d69: 01                                        ; i32 literal
0001d6a: 0e                                        ; br_table
0001d6b: 00                                        ; num targets
0001d6c: 00                                        ; break depth for default
0001d6d: 0b                                        ; end
0001d66: 07                                        ; FIXUP func body size
; function body 4
0001d6e: 00                                        ; func body size (guess)
0001d6f: 00                                        ; local decl count
0001d70: 0f                                        ; return
0001d71: 0b                                        ; end
0001d6e: 03                                        ; FIXUP func body size
; function body 5
0001d72: 00                                        ; func body size (guess)
0001d73: 00                                        ; local decl count
0001d74: 10                                        ; call
0001d75: 01                                        ; function index
0001d76: 0b                                        ; end
0001d72: 04                                        ; FIXUP func body size
; function body 6
0001d77: 00                                        ; func body size (guess)
0001d78: 00                                        ; local decl count
0001d79: 41                                        ; i32.const
0001d7a: 01                                        ; i32 literal
0001d7b: 11                                        ; call_indirect
0001d7c: 00                                        ; signature index
0001d7d: 00                                        ; table index
0001d7e: 0b                                        ; end
0001d77: 07                                        ; FIXUP func body size
; function body 7
0001d7f: 00                                        ; func body size (guess)
0001d80: 00                                        ; local decl count
0001d81: 12                                        ; return_call
0001d82: 01                                        ; function index
0001d83: 0b                                        ; end
0001d7f: 04                                        ; FIXUP func body size
; function body 8
0001d84: 00                                        ; func body size (guess)
0001d85: 00                                        ; local decl count
0001d86: 41                                        ; i32.const
0001d87: 01                                        ; i32 literal
0001d88: 13                                        ; return_call_indirect
0001d89: 00                                        ; signature index
0001d8a: 00                                        ; table index
0001d8b: 0b                                        ; end
0001d84: 07                                        ; FIXUP func body size
; function body 9
0001d8c: 00                                        ; func body size (guess)
0001d8d: 00                                        ; local decl count
0001d8e: 41                                        ; i32.const
0001d8f: 01                                        ; i32 literal
0001d90: 1a                                        ; drop
0001d91: 0b                                        ; end
0001d8c: 05                                        ; FIXUP func body size
; function body 10
0001d92: 00                                        ; func body size (guess)
0001d93: 00                                        ; local decl count
0001d94: 41                                        ; i32.const
0001d95: 01                                        ; i32 literal
0001d96: 41                                        ; i32.const
0001d97: 02                                        ; i32 literal
0001d98: 41                                        ; i32.const
0001d99: 03                                        ; i32 literal
0001d9a: 1b                                        ; select
0001d9b: 1a                                        ; drop
0001d9c: 0b                                        ; end
0001d92: 0a                                        ; FIXUP func body size
; function body 11
0001d9d: 00                                        ; func body size (guess)
0001d9e: 00                                        ; local decl count
0001d9f: 41                                        ; i32.const
0001da0: 01                                        ; i32 literal
0001da1: 41                                        ; i32.const
0001da2: 02                                        ; i32 literal
0001da3: 41                                        ; i32.const
0001da4: 03                                        ; i32 literal
0001da5: 1c                                        ; select
0001da6: 01                                        ; num result types
0001da7: 7f                                        ; result type
0001da8: 1a                                        ; drop
0001da9: 0b                                        ; end
0001d9d: 0c                                        ; FIXUP func body size
; function body 12
0001daa: 00                                        ; func body size (guess)
0001dab: 01                                        ; local decl count
0001dac: 01                                        ; local type count
0001dad: 7f                                        ; i32
0001dae: 20                                        ; local.get
0001daf: 00                                        ; local index
0001db0: 1a                                        ; drop
0001db1: 0b                                        ; end
0001daa: 07                                        ; FIXUP func body size
; function body 13
0001db2: 00                                        ; func body size (guess)
0001db3: 01                                        ; local decl count
0001db4: 01                                        ; local type count
0001db5: 7f                                        ; i32
0001db6: 41                                        ; i32.const
0001db7: 01                                        ; i32 literal
0001db8: 21                                        ; local.set
0001db9: 00                                        ; local index
0001dba: 0b                                        ; end
0001db2: 08                                        ; FIXUP func body size
; function body 14
0001dbb: 00                                        ; func body size (guess)
0001dbc: 01                                        ; local decl count
0001dbd: 01                                        ; local type count
0001dbe: 7f                                        ; i32
0001dbf: 41                                        ; i32.const
0001dc0: 01                                        ; i32 literal
0001dc1: 22                                        ; local.tee
0001dc2: 00                                        ; local index
0001dc3: 1a                                        ; drop
0001dc4: 0b                                        ; end
0001dbb: 09                                        ; FIXUP func body size
; function body 15
0001dc5: 00                                        ; func body size (guess)
0001dc6: 00                                        ; local decl count
0001dc7: 23                                        ; global.get
0001dc8: 00                                        ; global index
0001dc9: 1a                                        ; drop
0001dca: 0b                                        ; end
0001dc5: 05                                        ; FIXUP func body size
; function body 16
0001dcb: 00                                        ; func body size (guess)
0001dcc: 00                                        ; local decl count
0001dcd: 41                                        ; i32.const
0001dce: 01                                        ; i32 literal
0001dcf: 24                                        ; global.set
0001dd0: 00                                        ; global index
0001dd1: 0b                                        ; end
0001dcb: 06                                        ; FIXUP func body size
; function body 17
0001dd2: 00                                        ; func body size (guess)
0001dd3: 00                                        ; local decl count
0001dd4: 41                                        ; i32.const
0001dd5: 01                                        ; i32 literal
0001dd6: 28                                        ; i32.load
0001dd7: 02                                        ; alignment
0001dd8: 02                                        ; load offset
0001dd9: 1a                                        ; drop
0001dda: 0b                                        ; end
0001dd2: 08                                        ; FIXUP func body size
; function body 18
0001ddb: 00                                        ; func body size (guess)
0001ddc: 00                                        ; local decl count
0001ddd: 41                                        ; i32.const
0001dde: 01                                        ; i32 literal
0001ddf: 29                                        ; i64.load
0001de0: 03                                        ; alignment
0001de1: 02                                        ; load offset
0001de2: 1a                                        ; drop
0001de3: 0b                                        ; end
0001ddb: 08                                        ; FIXUP func body size
; function body 19
0001de4: 00                                        ; func body size (guess)
0001de5: 00                                        ; local decl count
0001de6: 41                                        ; i32.const
0001de7: 01                                        ; i32 literal
0001de8: 2a                                        ; f32.load
0001de9: 02                                        ; alignment
0001dea: 02                                        ; load offset
0001deb: 1a                                        ; drop
0001dec: 0b                                        ; end
0001de4: 08                                        ; FIXUP func body size
; function body 20
0001ded: 00                                        ; func body size (guess)
0001dee: 00                                        ; local decl count
0001def: 41                                        ; i32.const
0001df0: 01                                        ; i32 literal
0001df1: 2b                                        ; f64.load
0001df2: 03                                        ; alignment
0001df3: 02                                        ; load offset
0001df4: 1a                                        ; drop
0001df5: 0b                                        ; end
0001ded: 08                                        ; FIXUP func body size
; function body 21
0001df6: 00                                        ; func body size (guess)
0001df7: 00                                        ; local decl count
0001df8: 41                                        ; i32.const
0001df9: 01                                        ; i32 literal
0001dfa: 2c                                        ; i32.load8_s
0001dfb: 00                                        ; alignment
0001dfc: 02                                        ; load offset
0001dfd: 1a                                        ; drop
0001dfe: 0b                                        ; end
0001df6: 08                                        ; FIXUP func body size
; function body 22
0001dff: 00                                        ; func body size (guess)
0001e00: 00                                        ; local decl count
0001e01: 41                                        ; i32.const
0001e02: 01                                        ; i32 literal
0001e03: 2d                                        ; i32.load8_u
0001e04: 00                                        ; alignment
0001e05: 02                                        ; load offset
0001e06: 1a                                        ; drop
0001e07: 0b                                        ; end
0001dff: 08                                        ; FIXUP func body size
; function body 23
0001e08: 00                                        ; func body size (guess)
0001e09: 00                                        ; local decl count
0001e0a: 41                                        ; i32.const
0001e0b: 01                                        ; i32 literal
0001e0c: 2e                                        ; i32.load16_s
0001e0d: 01                                        ; alignment
0001e0e: 02                                        ; load offset
0001e0f: 1a                                        ; drop
0001e10: 0b                                        ; end
0001e08: 08                                        ; FIXUP func body size
; function body 24
0001e11: 00                                        ; func body size (guess)
0001e12: 00                                        ; local decl count
0001e13: 41                                        ; i32.const
0001e14: 01                                        ; i32 literal
0001e15: 2f                                        ; i32.load16_u
0001e16: 01                                        ; alignment
0001e17: 02                                        ; load offset
0001e18: 1a                                        ; drop
0001e19: 0b                                        ; end
0001e11: 08                                        ; FIXUP func body size
; function body 25
0001e1a: 00                                        ; func body size (guess)
0001e1b: 00                                        ; local decl count
0001e1c: 41                                        ; i32.const
0001e1d: 01                                        ; i32 literal
0001e1e: 30                                        ; i64.load8_s
0001e1f: 00                                        ; alignment
0001e20: 02                                        ; load offset
0001e21: 1a                                        ; drop
0001e22: 0b                                        ; end
0001e1a: 08                                        ; FIXUP func body size
; function body 26
0001e23: 00                                        ; func body size (guess)
0001e24: 00                                        ; local decl count
0001e25: 41                                        ; i32.const
0001e26: 01                                        ; i32 literal
0001e27: 31                                        ; i64.load8_u
0001e28: 00                                        ; alignment
0001e29: 02                                        ; load offset
0001e2a: 1a                                        ; drop
0001e2b: 0b                                        ; end
0001e23: 08                                        ; FIXUP func body size
; function body 27
0001e2c: 00                                        ; func body size (guess)
0001e2d: 00                                        ; local decl count
0001e2e: 41                                        ; i32.const
0001e2f: 01                                        ; i32 literal
0001e30: 32                                        ; i64.load16_s
0001e31: 01                                        ; alignment
0001e32: 02                                        ; load offset
0001e33: 1a                                        ; drop
0001e34: 0b                                        ; end
0001e2c: 08                                        ; FIXUP func body size
; function body 28
0001e35: 00                                        ; func body size (guess)
0001e36: 00                                        ; local decl count
0001e37: 41                                        ; i32.const
0001e38: 01                                        ; i32 literal
0001e39: 33                                        ; i64.load16_u
0001e3a: 01                                        ; alignment
0001e3b: 02                                        ; load offset
0001e3c: 1a                                        ; drop
0001e3d: 0b                                        ; end
0001e35: 08                                        ; FIXUP func body size
; function body 29
0001e3e: 00                                        ; func body size (guess)
0001e3f: 00                                        ; local decl count
0001e40: 41                                        ; i32.const
0001e41: 01                                        ; i32 literal
0001e42: 34                                        ; i64.load32_s
0001e43: 02                                        ; alignment
0001e44: 02                                        ; load offset
0001e45: 1a                                        ; drop
0001e46: 0b                                        ; end
0001e3e: 08                                        ; FIXUP func body size
; function body 30
0001e47: 00                                        ; func body size (guess)
0001e48: 00                                        ; local decl count
0001e49: 41                                        ; i32.const
0001e4a: 01                                        ; i32 literal
0001e4b: 35                                        ; i64.load32_u
0001e4c: 02                                        ; alignment
0001e4d: 02                                        ; load offset
0001e4e: 1a                                        ; drop
0001e4f: 0b                                        ; end
0001e47: 08                                        ; FIXUP func body size
; function body 31
0001e50: 00                                        ; func body size (guess)
0001e51: 00                                        ; local decl count
0001e52: 41                                        ; i32.const
0001e53: 01                                        ; i32 literal
0001e54: 41                                        ; i32.const
0001e55: 02                                        ; i32 literal
0001e56: 36                                        ; i32.store
0001e57: 02                                        ; alignment
0001e58: 02                                        ; store offset
0001e59: 0b                                        ; end
0001e50: 09                                        ; FIXUP func body size
; function body 32
0001e5a: 00                                        ; func body size (guess)
0001e5b: 00                                        ; local decl count
0001e5c: 41                                        ; i32.const
0001e5d: 01                                        ; i32 literal
0001e5e: 42                                        ; i64.const
0001e5f: 02                                        ; i64 literal
0001e60: 37                                        ; i64.store
0001e61: 03                                        ; alignment
0001e62: 02                                        ; store offset
0001e63: 0b                                        ; end
0001e5a: 09                                        ; FIXUP func body size
; function body 33
0001e64: 00                                        ; func body size (guess)
0001e65: 00                                        ; local decl count
0001e66: 41                                        ; i32.const
0001e67: 01                                        ; i32 literal
0001e68: 43                                        ; f32.const
0001e69: 0000 0040                                 ; f32 literal
0001e6d: 38                                        ; f32.store
0001e6e: 02                                        ; alignment
0001e6f: 02                                        ; store offset
0001e70: 0b                                        ; end
0001e64: 0c                                        ; FIXUP func body size
; function body 34
0001e71: 00                                        ; func body size (guess)
0001e72: 00                                        ; local decl count
0001e73: 41                                        ; i32.const
0001e74: 01                                        ; i32 literal
0001e75: 44                                        ; f64.const
0001e76: 0000 0000 0000 0040                       ; f64 literal
0001e7e: 39                                        ; f64.store
0001e7f: 03                                        ; alignment
0001e80: 02                                        ; store offset
0001e81: 0b                                        ; end
0001e71: 10                                        ; FIXUP func body size
; function body 35
0001e82: 00                                        ; func body size (guess)
0001e83: 00                                        ; local decl count
0001e84: 41                                        ; i32.const
0001e85: 01                                        ; i32 literal
0001e86: 41                                        ; i32.const
0001e87: 02                                        ; i32 literal
0001e88: 3a                                        ; i32.store8
0001e89: 00                                        ; alignment
0001e8a: 02                                        ; store offset
0001e8b: 0b                                        ; end
0001e82: 09                                        ; FIXUP func body size
; function body 36
0001e8c: 00                                        ; func body size (guess)
0001e8d: 00                                        ; local decl count
0001e8e: 41                                        ; i32.const
0001e8f: 01                                        ; i32 literal
0001e90: 41                                        ; i32.const
0001e91: 02                                        ; i32 literal
0001e92: 3b                                        ; i32.store16
0001e93: 01                                        ; alignment
0001e94: 02                                        ; store offset
0001e95: 0b                                        ; end
0001e8c: 09                                        ; FIXUP func body size
; function body 37
0001e96: 00                                        ; func body size (guess)
0001e97: 00                                        ; local decl count
0001e98: 41                                        ; i32.const
0001e99: 01                                        ; i32 literal
0001e9a: 42                                        ; i64.const
0001e9b: 02                                        ; i64 literal
0001e9c: 3c                                        ; i64.store8
0001e9d: 00                                        ; alignment
0001e9e: 02                                        ; store offset
0001e9f: 0b                                        ; end
0001e96: 09                                        ; FIXUP func body size
; function body 38
0001ea0: 00                                        ; func body size (guess)
0001ea1: 00                                        ; local decl count
0001ea2: 41                                        ; i32.const
0001ea3: 01                                        ; i32 literal
0001ea4: 42                                        ; i64.const
0001ea5: 02                                        ; i64 literal
0001ea6: 3d                                        ; i64.store16
0001ea7: 01                                        ; alignment
0001ea8: 02                                        ; store offset
0001ea9: 0b                                        ; end
0001ea0: 09                                        ; FIXUP func body size
; function body 39
0001eaa: 00                                        ; func body size (guess)
0001eab: 00                                        ; local decl count
0001eac: 41                                        ; i32.const
0001ead: 01                                        ; i32 literal
0001eae: 42                                        ; i64.const
0001eaf: 02                                        ; i64 literal
0001eb0: 3e                                        ; i64.store32
0001eb1: 02                                        ; alignment
0001eb2: 02                                        ; store offset
0001eb3: 0b                                        ; end
0001eaa: 09                                        ; FIXUP func body size
; function body 40
0001eb4: 00                                        ; func body size (guess)
0001eb5: 00                                        ; local decl count
0001eb6: 3f                                        ; memory.size
0001eb7: 00                                        ; memory.size reserved
0001eb8: 1a                                        ; drop
0001eb9: 0b                                        ; end
0001eb4: 05                                        ; FIXUP func body size
; function body 41
0001eba: 00                                        ; func body size (guess)
0001ebb: 00                                        ; local decl count
0001ebc: 41                                        ; i32.const
0001ebd: 01                                        ; i32 literal
0001ebe: 40                                        ; memory.grow
0001ebf: 00                                        ; memory.grow reserved
0001ec0: 1a                                        ; drop
0001ec1: 0b                                        ; end
0001eba: 07                                        ; FIXUP func body size
; function body 42
0001ec2: 00                                        ; func body size (guess)
0001ec3: 00                                        ; local decl count
0001ec4: 41                                        ; i32.const
0001ec5: 01                                        ; i32 literal
0001ec6: 1a                                        ; drop
0001ec7: 0b                                        ; end
0001ec2: 05                                        ; FIXUP func body size
; function body 43
0001ec8: 00                                        ; func body size (guess)
0001ec9: 00                                        ; local decl count
0001eca: 42                                        ; i64.const
0001ecb: 01                                        ; i64 literal
0001ecc: 1a                                        ; drop
0001ecd: 0b                                        ; end
0001ec8: 05                                        ; FIXUP func body size
; function body 44
0001ece: 00                                        ; func body size (guess)
0001ecf: 00                                        ; local decl count
0001ed0: 43                                        ; f32.const
0001ed1: 0000 803f                                 ; f32 literal
0001ed5: 1a                                        ; drop
0001ed6: 0b                                        ; end
0001ece: 08                                        ; FIXUP func body size
; function body 45
0001ed7: 00                                        ; func body size (guess)
0001ed8: 00                                        ; local decl count
0001ed9: 44                                        ; f64.const
0001eda: 0000 0000 0000 f03f                       ; f64 literal
0001ee2: 1a                                        ; drop
0001ee3: 0b                                        ; end
0001ed7: 0c                                        ; FIXUP func body size
; function body 46
0001ee4: 00                                        ; func body size (guess)
0001ee5: 00                                        ; local decl count
0001ee6: 41                                        ; i32.const
0001ee7: 01                                        ; i32 literal
0001ee8: 45                                        ; i32.eqz
0001ee9: 1a                                        ; drop
0001eea: 0b                                        ; end
0001ee4: 06                                        ; FIXUP func body size
; function body 47
0001eeb: 00                                        ; func body size (guess)
0001eec: 00                                        ; local decl count
0001eed: 41                                        ; i32.const
0001eee: 01                                        ; i32 literal
0001eef: 41                                        ; i32.const
0001ef0: 02                                        ; i32 literal
0001ef1: 46                                        ; i32.eq
0001ef2: 1a                                        ; drop
0001ef3: 0b                                        ; end
0001eeb: 08                                        ; FIXUP func body size
; function body 48
0001ef4: 00                                        ; func body size (guess)
0001ef5: 00                                        ; local decl count
0001ef6: 41                                        ; i32.const
0001ef7: 01                                        ; i32 literal
0001ef8: 41                                        ; i32.const
0001ef9: 02                                        ; i32 literal
0001efa: 47                                        ; i32.ne
0001efb: 1a                                        ; drop
0001efc: 0b                                        ; end
0001ef4: 08                                        ; FIXUP func body size
; function body 49
0001efd: 00                                        ; func body size (guess)
0001efe: 00                                        ; local decl count
0001eff: 41                                        ; i32.const
0001f00: 01                                        ; i32 literal
0001f01: 41                                        ; i32.const
0001f02: 02                                        ; i32 literal
0001f03: 48                                        ; i32.lt_s
0001f04: 1a                                        ; drop
0001f05: 0b                                        ; end
0001efd: 08                                        ; FIXUP func body size
; function body 50
0001f06: 00                                        ; func body size (guess)
0001f07: 00                                        ; local decl count
0001f08: 41                                        ; i32.const
0001f09: 01                                        ; i32 literal
0001f0a: 41                                        ; i32.const
0001f0b: 02                                        ; i32 literal
0001f0c: 49                                        ; i32.lt_u
0001f0d: 1a                                        ; drop
0001f0e: 0b                                        ; end
0001f06: 08                                        ; FIXUP func body size
; function body 51
0001f0f: 00                                        ; func body size (guess)
0001f10: 00                                        ; local decl count
0001f11: 41                                        ; i32.const
0001f12: 01                                        ; i32 literal
0001f13: 41                                        ; i32.const
0001f14: 02                                        ; i32 literal
0001f15: 4a                                        ; i32.gt_s
0001f16: 1a                                        ; drop
0001f17: 0b                                        ; end
0001f0f: 08                                        ; FIXUP func body size
; function body 52
0001f18: 00                                        ; func body size (guess)
0001f19: 00                                        ; local decl count
0001f1a: 41                                        ; i32.const
0001f1b: 01                                        ; i32 literal
0001f1c: 41                                        ; i32.const
0001f1d: 02                                        ; i32 literal
0001f1e: 4b                                        ; i32.gt_u
0001f1f: 1a                                        ; drop
0001f20: 0b                                        ; end
0001f18: 08                                        ; FIXUP func body size
; function body 53
0001f21: 00                                        ; func body size (guess)
0001f22: 00                                        ; local decl count
0001f23: 41                                        ; i32.const
0001f24: 01                                        ; i32 literal
0001f25: 41                                        ; i32.const
0001f26: 02                                        ; i32 literal
0001f27: 4c                                        ; i32.le_s
0001f28: 1a                                        ; drop
0001f29: 0b                                        ; end
0001f21: 08                                        ; FIXUP func body size
; function body 54
0001f2a: 00                                        ; func body size (guess)
0001f2b: 00                                        ; local decl count
0001f2c: 41                                        ; i32.const
0001f2d: 01                                        ; i32 literal
0001f2e: 41                                        ; i32.const
0001f2f: 02                                        ; i32 literal
0001f30: 4d                                        ; i32.le_u
0001f31: 1a                                        ; drop
0001f32: 0b                                        ; end
0001f2a: 08                                        ; FIXUP func body size
; function body 55
0001f33: 00                                        ; func body size (guess)
0001f34: 00                                        ; local decl count
0001f35: 41                                        ; i32.const
0001f36: 01                                        ; i32 literal
0001f37: 41                                        ; i32.const
0001f38: 02                                        ; i32 literal
0001f39: 4e                                        ; i32.ge_s
0001f3a: 1a                                        ; drop
0001f3b: 0b                                        ; end
0001f33: 08                                        ; FIXUP func body size
; function body 56
0001f3c: 00                                        ; func body size (guess)
0001f3d: 00                                        ; local decl count
0001f3e: 41                                        ; i32.const
0001f3f: 01                                        ; i32 literal
0001f40: 41                                        ; i32.const
0001f41: 02                                        ; i32 literal
0001f42: 4f                                        ; i32.ge_u
0001f43: 1a                                        ; drop
0001f44: 0b                                        ; end
0001f3c: 08                                        ; FIXUP func body size
; function body 57
0001f45: 00                                        ; func body size (guess)
0001f46: 00                                        ; local decl count
0001f47: 42                                        ; i64.const
0001f48: 01                                        ; i64 literal
0001f49: 50                                        ; i64.eqz
0001f4a: 1a                                        ; drop
0001f4b: 0b                                        ; end
0001f45: 06                                        ; FIXUP func body size
; function body 58
0001f4c: 00                                        ; func body size (guess)
0001f4d: 00                                        ; local decl count
0001f4e: 42                                        ; i64.const
0001f4f: 01                                        ; i64 literal
0001f50: 42                                        ; i64.const
0001f51: 02                                        ; i64 literal
0001f52: 51                                        ; i64.eq
0001f53: 1a                                        ; drop
0001f54: 0b                                        ; end
0001f4c: 08                                        ; FIXUP func body size
; function body 59
0001f55: 00                                        ; func body size (guess)
0001f56: 00                                        ; local decl count
0001f57: 42                                        ; i64.const
0001f58: 01                                        ; i64 literal
0001f59: 42                                        ; i64.const
0001f5a: 02                                        ; i64 literal
0001f5b: 52                                        ; i64.ne
0001f5c: 1a                                        ; drop
0001f5d: 0b                                        ; end
0001f55: 08                                        ; FIXUP func body size
; function body 60
0001f5e: 00                                        ; func body size (guess)
0001f5f: 00                                        ; local decl count
0001f60: 42                                        ; i64.const
0001f61: 01                                        ; i64 literal
0001f62: 42                                        ; i64.const
0001f63: 02                                        ; i64 literal
0001f64: 53                                        ; i64.lt_s
0001f65: 1a                                        ; drop
0001f66: 0b                                        ; end
0001f5e: 08                                        ; FIXUP func body size
; function body 61
0001f67: 00                                        ; func body size (guess)
0001f68: 00                                        ; local decl count
0001f69: 42                                        ; i64.const
0001f6a: 01                                        ; i64 literal
0001f6b: 42                                        ; i64.const
0001f6c: 02                                        ; i64 literal
0001f6d: 54                                        ; i64.lt_u
0001f6e: 1a                                        ; drop
0001f6f: 0b                                        ; end
0001f67: 08                                        ; FIXUP func body size
; function body 62
0001f70: 00                                        ; func body size (guess)
0001f71: 00                                        ; local decl count
0001f72: 42                                        ; i64.const
0001f73: 01                                        ; i64 literal
0001f74: 42                                        ; i64.const
0001f75: 02                                        ; i64 literal
0001f76: 55                                        ; i64.gt_s
0001f77: 1a                                        ; drop
0001f78: 0b                                        ; end
0001f70: 08                                        ; FIXUP func body size
; function body 63
0001f79: 00                                        ; func body size (guess)
0001f7a: 00                                        ; local decl count
0001f7b: 42                                        ; i64.const
0001f7c: 01                                        ; i64 literal
0001f7d: 42                                        ; i64.const
0001f7e: 02                                        ; i64 literal
0001f7f: 56                                        ; i64.gt_u
0001f80: 1a                                        ; drop
0001f81: 0b                                        ; end
0001f79: 08                                        ; FIXUP func body size
; function body 64
0001f82: 00                                        ; func body size (guess)
0001f83: 00                                        ; local decl count
0001f84: 42                                        ; i64.const
0001f85: 01                                        ; i64 literal
0001f86: 42                                        ; i64.const
0001f87: 02                                        ; i64 literal
0001f88: 57                                        ; i64.le_s
0001f89: 1a                                        ; drop
0001f8a: 0b                                        ; end
0001f82: 08                                        ; FIXUP func body size
; function body 65
0001f8b: 00                                        ; func body size (guess)
0001f8c: 00                                        ; local decl count
0001f8d: 42                                        ; i64.const
0001f8e: 01                                        ; i64 literal
0001f8f: 42                                        ; i64.const
0001f90: 02                                        ; i64 literal
0001f91: 58                                        ; i64.le_u
0001f92: 1a                                        ; drop
0001f93: 0b                                        ; end
0001f8b: 08                                        ; FIXUP func body size
; function body 66
0001f94: 00                                        ; func body size (guess)
0001f95: 00                                        ; local decl count
0001f96: 42                                        ; i64.const
0001f97: 01                                        ; i64 literal
0001f98: 42                                        ; i64.const
0001f99: 02                                        ; i64 literal
0001f9a: 59                                        ; i64.ge_s
0001f9b: 1a                                        ; drop
0001f9c: 0b                                        ; end
0001f94: 08                                        ; FIXUP func body size
; function body 67
0001f9d: 00                                        ; func body size (guess)
0001f9e: 00                                        ; local decl count
0001f9f: 42                                        ; i64.const
0001fa0: 01                                        ; i64 literal
0001fa1: 42                                        ; i64.const
0001fa2: 02                                        ; i64 literal
0001fa3: 5a                                        ; i64.ge_u
0001fa4: 1a                                        ; drop
0001fa5: 0b                                        ; end
0001f9d: 08                                        ; FIXUP func body size
; function body 68
0001fa6: 00                                        ; func body size (guess)
0001fa7: 00                                        ; local decl count
0001fa8: 43                                        ; f32.const
0001fa9: 0000 803f                                 ; f32 literal
0001fad: 43                                        ; f32.const
0001fae: 0000 0040                                 ; f32 literal
0001fb2: 5b                                        ; f32.eq
0001fb3: 1a                                        ; drop
0001fb4: 0b                                        ; end
0001fa6: 0e                                        ; FIXUP func body size
; function body 69
0001fb5: 00                                        ; func body size (guess)
0001fb6: 00                                        ; local decl count
0001fb7: 43                                        ; f32.const
0001fb8: 0000 803f                                 ; f32 literal
0001fbc: 43                                        ; f32.const
0001fbd: 0000 0040                                 ; f32 literal
0001fc1: 5c                                        ; f32.ne
0001fc2: 1a                                        ; drop
0001fc3: 0b                                        ; end
0001fb5: 0e                                        ; FIXUP func body size
; function body 70
0001fc4: 00                                        ; func body size (guess)
0001fc5: 00                                        ; local decl count
0001fc6: 43                                        ; f32.const
0001fc7: 0000 803f                                 ; f32 literal
0001fcb: 43                                        ; f32.const
0001fcc: 0000 0040                                 ; f32 literal
0001fd0: 5d                                        ; f32.lt
0001fd1: 1a                                        ; drop
0001fd2: 0b                                        ; end
0001fc4: 0e                                        ; FIXUP func body size
; function body 71
0001fd3: 00                                        ; func body size (guess)
0001fd4: 00                                        ; local decl count
0001fd5: 43                                        ; f32.const
0001fd6: 0000 803f                                 ; f32 literal
0001fda: 43                                        ; f32.const
0001fdb: 0000 0040                                 ; f32 literal
0001fdf: 5e                                        ; f32.gt
0001fe0: 1a                                        ; drop
0001fe1: 0b                                        ; end
0001fd3: 0e                                        ; FIXUP func body size
; function body 72
0001fe2: 00                                        ; func body size (guess)
0001fe3: 00                                        ; local decl count
0001fe4: 43                                        ; f32.const
0001fe5: 0000 803f                                 ; f32 literal
0001fe9: 43                                        ; f32.const
0001fea: 0000 0040                                 ; f32 literal
0001fee: 5f                                        ; f32.le
0001fef: 1a                                        ; drop
0001ff0: 0b                                        ; end
0001fe2: 0e                                        ; FIXUP func body size
; function body 73
0001ff1: 00                                        ; func body size (guess)
0001ff2: 00                                        ; local decl count
0001ff3: 43                                        ; f32.const
0001ff4: 0000 803f                                 ; f32 literal
0001ff8: 43                                        ; f32.const
0001ff9: 0000 0040                                 ; f32 literal
0001ffd: 60                                        ; f32.ge
0001ffe: 1a                                        ; drop
0001fff: 0b                                        ; end
0001ff1: 0e                                        ; FIXUP func body size
; function body 74
0002000: 00                                        ; func body size (guess)
0002001: 00                                        ; local decl count
0002002: 44                                        ; f64.const
0002003: 0000 0000 0000 f03f                       ; f64 literal
000200b: 44                                        ; f64.const
000200c: 0000 0000 0000 0040                       ; f64 literal
0002014: 61                                        ; f64.eq
0002015: 1a                                        ; drop
0002016: 0b                                        ; end
0002000: 16                                        ; FIXUP func body size
; function body 75
0002017: 00                                        ; func body size (guess)
0002018: 00                                        ; local decl count
0002019: 44                                        ; f64.const
000201a: 0000 0000 0000 f03f                       ; f64 literal
0002022: 44                                        ; f64.const
0002023: 0000 0000 0000 0040                       ; f64 literal
000202b: 62                                        ; f64.ne
000202c: 1a                                        ; drop
000202d: 0b                                        ; end
0002017: 16                                        ; FIXUP func body size
; function body 76
000202e: 00                                        ; func body size (guess)
000202f: 00                                        ; local decl count
0002030: 44                                        ; f64.const
0002031: 0000 0000 0000 f03f                       ; f64 literal
0002039: 44                                        ; f64.const
000203a: 0000 0000 0000 0040                       ; f64 literal
0002042: 63                                        ; f64.lt
0002043: 1a                                        ; drop
0002044: 0b                                        ; end
000202e: 16                                        ; FIXUP func body size
; function body 77
0002045: 00                                        ; func body size (guess)
0002046: 00                                        ; local decl count
0002047: 44                                        ; f64.const
0002048: 0000 0000 0000 f03f                       ; f64 literal
0002050: 44                                        ; f64.const
0002051: 0000 0000 0000 0040                       ; f64 literal
0002059: 64                                        ; f64.gt
000205a: 1a                                        ; drop
000205b: 0b                                        ; end
0002045: 16                                        ; FIXUP func body size
; function body 78
000205c: 00                                        ; func body size (guess)
000205d: 00                                        ; local decl count
000205e: 44                                        ; f64.const
000205f: 0000 0000 0000 f03f                       ; f64 literal
0002067: 44                                        ; f64.const
0002068: 0000 0000 0000 0040                       ; f64 literal
0002070: 65                                        ; f64.le
0002071: 1a                                        ; drop
0002072: 0b                                        ; end
000205c: 16                                        ; FIXUP func body size
; function body 79
0002073: 00                                        ; func body size (guess)
0002074: 00                                        ; local decl count
0002075: 44                                        ; f64.const
0002076: 0000 0000 0000 f03f                       ; f64 literal
000207e: 44                                        ; f64.const
000207f: 0000 0000 0000 0040                       ; f64 literal
0002087: 66                                        ; f64.ge
0002088: 1a                                        ; drop
0002089: 0b                                        ; end
0002073: 16                                        ; FIXUP func body size
; function body 80
000208a: 00                                        ; func body size (guess)
000208b: 00                                        ; local decl count
000208c: 41                                        ; i32.const
000208d: 01                                        ; i32 literal
000208e: 67                                        ; i32.clz
000208f: 1a                                        ; drop
0002090: 0b                                        ; end
000208a: 06                                        ; FIXUP func body size
; function body 81
0002091: 00                                        ; func body size (guess)
0002092: 00                                        ; local decl count
0002093: 41                                        ; i32.const
0002094: 01                                        ; i32 literal
0002095: 68                                        ; i32.ctz
0002096: 1a                                        ; drop
0002097: 0b                                        ; end
0002091: 06                                        ; FIXUP func body size
; function body 82
0002098: 00                                        ; func body size (guess)
0002099: 00                                        ; local decl count
000209a: 41                                        ; i32.const
000209b: 01                                        ; i32 literal
000209c: 69                                        ; i32.popcnt
000209d: 1a                                        ; drop
000209e: 0b                                        ; end
0002098: 06                                        ; FIXUP func body size
; function body 83
000209f: 00                                        ; func body size (guess)
00020a0: 00                                        ; local decl count
00020a1: 41                                        ; i32.const
00020a2: 01                                        ; i32 literal
00020a3: 41                                        ; i32.const
00020a4: 02                                        ; i32 literal
00020a5: 6a                                        ; i32.add
00020a6: 1a                                        ; drop
00020a7: 0b                                        ; end
000209f: 08                                        ; FIXUP func body size
; function body 84
00020a8: 00                                        ; func body size (guess)
00020a9: 00                                        ; local decl count
00020aa: 41                                        ; i32.const
00020ab: 01                                        ; i32 literal
00020ac: 41                                        ; i32.const
00020ad: 02                                        ; i32 literal
00020ae: 6b                                        ; i32.sub
00020af: 1a                                        ; drop
00020b0: 0b                                        ; end
00020a8: 08                                        ; FIXUP func body size
; function body 85
00020b1: 00                                        ; func body size (guess)
00020b2: 00                                        ; local decl count
00020b3: 41                                        ; i32.const
00020b4: 01                                        ; i32 literal
00020b5: 41                                        ; i32.const
00020b6: 02                                        ; i32 literal
00020b7: 6c                                        ; i32.mul
00020b8: 1a                                        ; drop
00020b9: 0b                                        ; end
00020b1: 08                                        ; FIXUP func body size
; function body 86
00020ba: 00                                        ; func body size (guess)
00020bb: 00                                        ; local decl count
00020bc: 41                                        ; i32.const
00020bd: 01                                        ; i32 literal
00020be: 41                                        ; i32.const
00020bf: 02                                        ; i32 literal
00020c0: 6d                                        ; i32.div_s
00020c1: 1a                                        ; drop
00020c2: 0b                                        ; end
00020ba: 08                                        ; FIXUP func body size
; function body 87
00020c3: 00                                        ; func body size (guess)
00020c4: 00                                        ; local decl count
00020c5: 41                                        ; i32.const
00020c6: 01                                        ; i32 literal
00020c7: 41                                        ; i32.const
00020c8: 02                                        ; i32 literal
00020c9: 6e                                        ; i32.div_u
00020ca: 1a                                        ; drop
00020cb: 0b                                        ; end
00020c3: 08                                        ; FIXUP func body size
; function body 88
00020cc: 00                                        ; func body size (guess)
00020cd: 00                                        ; local decl count
00020ce: 41                                        ; i32.const
00020cf: 01                                        ; i32 literal
00020d0: 41                                        ; i32.const
00020d1: 02                                        ; i32 literal
00020d2: 6f                                        ; i32.rem_s
00020d3: 1a                                        ; drop
00020d4: 0b                                        ; end
00020cc: 08                                        ; FIXUP func body size
; function body 89
00020d5: 00                                        ; func body size (guess)
00020d6: 00                                        ; local decl count
00020d7: 41                                        ; i32.const
00020d8: 01                                        ; i32 literal
00020d9: 41                                        ; i32.const
00020da: 02                                        ; i32 literal
00020db: 70                                        ; i32.rem_u
00020dc: 1a                                        ; drop
00020dd: 0b                                        ; end
00020d5: 08                                        ; FIXUP func body size
; function body 90
00020de: 00                                        ; func body size (guess)
00020df: 00                                        ; local decl count
00020e0: 41                                        ; i32.const
00020e1: 01                                        ; i32 literal
00020e2: 41                                        ; i32.const
00020e3: 02                                        ; i32 literal
00020e4: 71                                        ; i32.and
00020e5: 1a                                        ; drop
00020e6: 0b                                        ; end
00020de: 08                                        ; FIXUP func body size
; function body 91
00020e7: 00                                        ; func body size (guess)
00020e8: 00                                        ; local decl count
00020e9: 41                                        ; i32.const
00020ea: 01                                        ; i32 literal
00020eb: 41                                        ; i32.const
00020ec: 02                                        ; i32 literal
00020ed: 72                                        ; i32.or
00020ee: 1a                                        ; drop
00020ef: 0b                                        ; end
00020e7: 08                                        ; FIXUP func body size
; function body 92
00020f0: 00                                        ; func body size (guess)
00020f1: 00                                        ; local decl count
00020f2: 41                                        ; i32.const
00020f3: 01                                        ; i32 literal
00020f4: 41                                        ; i32.const
00020f5: 02                                        ; i32 literal
00020f6: 73                                        ; i32.xor
00020f7: 1a                                        ; drop
00020f8: 0b                                        ; end
00020f0: 08                                        ; FIXUP func body size
; function body 93
00020f9: 00                                        ; func body size (guess)
00020fa: 00                                        ; local decl count
00020fb: 41                                        ; i32.const
00020fc: 01                                        ; i32 literal
00020fd: 41                                        ; i32.const
00020fe: 02                                        ; i32 literal
00020ff: 74                                        ; i32.shl
0002100: 1a                                        ; drop
0002101: 0b                                        ; end
00020f9: 08                                        ; FIXUP func body size
; function body 94
0002102: 00                                        ; func body size (guess)
0002103: 00                                        ; local decl count
0002104: 41                                        ; i32.const
0002105: 01                                        ; i32 literal
0002106: 41                                        ; i32.const
0002107: 02                                        ; i32 literal
0002108: 75                                        ; i32.shr_s
0002109: 1a                                        ; drop
000210a: 0b                                        ; end
0002102: 08                                        ; FIXUP func body size
; function body 95
000210b: 00                                        ; func body size (guess)
000210c: 00                                        ; local decl count
000210d: 41                                        ; i32.const
000210e: 01                                        ; i32 literal
000210f: 41                                        ; i32.const
0002110: 02                                        ; i32 literal
0002111: 76                                        ; i32.shr_u
0002112: 1a                                        ; drop
0002113: 0b                                        ; end
000210b: 08                                        ; FIXUP func body size
; function body 96
0002114: 00                                        ; func body size (guess)
0002115: 00                                        ; local decl count
0002116: 41                                        ; i32.const
0002117: 01                                        ; i32 literal
0002118: 41                                        ; i32.const
0002119: 02                                        ; i32 literal
000211a: 77                                        ; i32.rotl
000211b: 1a                                        ; drop
000211c: 0b                                        ; end
0002114: 08                                        ; FIXUP func body size
; function body 97
000211d: 00                                        ; func body size (guess)
000211e: 00                                        ; local decl count
000211f: 41                                        ; i32.const
0002120: 01                                        ; i32 literal
0002121: 41                                        ; i32.const
0002122: 02                                        ; i32 literal
0002123: 78                                        ; i32.rotr
0002124: 1a                                        ; drop
0002125: 0b                                        ; end
000211d: 08                                        ; FIXUP func body size
; function body 98
0002126: 00                                        ; func body size (guess)
0002127: 00                                        ; local decl count
0002128: 42                                        ; i64.const
0002129: 01                                        ; i64 literal
000212a: 79                                        ; i64.clz
000212b: 1a                                        ; drop
000212c: 0b                                        ; end
0002126: 06                                        ; FIXUP func body size
; function body 99
000212d: 00                                        ; func body size (guess)
000212e: 00                                        ; local decl count
000212f: 42                                        ; i64.const
0002130: 01                                        ; i64 literal
0002131: 7a                                        ; i64.ctz
0002132: 1a                                        ; drop
0002133: 0b                                        ; end
000212d: 06                                        ; FIXUP func body size
; function body 100
0002134: 00                                        ; func body size (guess)
0002135: 00                                        ; local decl count
0002136: 42                                        ; i64.const
0002137: 01                                        ; i64 literal
0002138: 7b                                        ; i64.popcnt
0002139: 1a                                        ; drop
000213a: 0b                                        ; end
0002134: 06                                        ; FIXUP func body size
; function body 101
000213b: 00                                        ; func body size (guess)
000213c: 00                                        ; local decl count
000213d: 42                                        ; i64.const
000213e: 01                                        ; i64 literal
000213f: 42                                        ; i64.const
0002140: 02                                        ; i64 literal
0002141: 7c                                        ; i64.add
0002142: 1a                                        ; drop
0002143: 0b                                        ; end
000213b: 08                                        ; FIXUP func body size
; function body 102
0002144: 00                                        ; func body size (guess)
0002145: 00                                        ; local decl count
0002146: 42                                        ; i64.const
0002147: 01                                        ; i64 literal
0002148: 42                                        ; i64.const
0002149: 02                                        ; i64 literal
000214a: 7d                                        ; i64.sub
000214b: 1a                                        ; drop
000214c: 0b                                        ; end
0002144: 08                                        ; FIXUP func body size
; function body 103
000214d: 00                                        ; func body size (guess)
000214e: 00                                        ; local decl count
000214f: 42                                        ; i64.const
0002150: 01                                        ; i64 literal
0002151: 42                                        ; i64.const
0002152: 02                                        ; i64 literal
0002153: 7e                                        ; i64.mul
0002154: 1a                                        ; drop
0002155: 0b                                        ; end
000214d: 08                                        ; FIXUP func body size
; function body 104
0002156: 00                                        ; func body size (guess)
0002157: 00                                        ; local decl count
0002158: 42                                        ; i64.const
0002159: 01                                        ; i64 literal
000215a: 42                                        ; i64.const
000215b: 02                                        ; i64 literal
000215c: 7f                                        ; i64.div_s
000215d: 1a                                        ; drop
000215e: 0b                                        ; end
0002156: 08                                        ; FIXUP func body size
; function body 105
000215f: 00                                        ; func body size (guess)
0002160: 00                                        ; local decl count
0002161: 42                                        ; i64.const
0002162: 01                                        ; i64 literal
0002163: 42                                        ; i64.const
0002164: 02                                        ; i64 literal
0002165: 80                                        ; i64.div_u
0002166: 1a                                        ; drop
0002167: 0b                                        ; end
000215f: 08                                        ; FIXUP func body size
; function body 106
0002168: 00                                        ; func body size (guess)
0002169: 00                                        ; local decl count
000216a: 42                                        ; i64.const
000216b: 01                                        ; i64 literal
000216c: 42                                        ; i64.const
000216d: 02                                        ; i64 literal
000216e: 81                                        ; i64.rem_s
000216f: 1a                                        ; drop
0002170: 0b                                        ; end
0002168: 08                                        ; FIXUP func body size
; function body 107
0002171: 00                                        ; func body size (guess)
0002172: 00                                        ; local decl count
0002173: 42                                        ; i64.const
0002174: 01                                        ; i64 literal
0002175: 42                                        ; i64.const
0002176: 02                                        ; i64 literal
0002177: 82                                        ; i64.rem_u
0002178: 1a                                        ; drop
0002179: 0b                                        ; end
0002171: 08                                        ; FIXUP func body size
; function body 108
000217a: 00                                        ; func body size (guess)
000217b: 00                                        ; local decl count
000217c: 42                                        ; i64.const
000217d: 01                                        ; i64 literal
000217e: 42                                        ; i64.const
000217f: 02                                        ; i64 literal
0002180: 83                                        ; i64.and
0002181: 1a                                        ; drop
0002182: 0b                                        ; end
000217a: 08                                        ; FIXUP func body size
; function body 109
0002183: 00                                        ; func body size (guess)
0002184: 00                                        ; local decl count
0002185: 42                                        ; i64.const
0002186: 01                                        ; i64 literal
0002187: 42                                        ; i64.const
0002188: 02                                        ; i64 literal
0002189: 84                                        ; i64.or
000218a: 1a                                        ; drop
000218b: 0b                                        ; end
0002183: 08                                        ; FIXUP func body size
; function body 110
000218c: 00                                        ; func body size (guess)
000218d: 00                                        ; local decl count
000218e: 42                                        ; i64.const
000218f: 01                                        ; i64 literal
0002190: 42                                        ; i64.const
0002191: 02                                        ; i64 literal
0002192: 85                                        ; i64.xor
0002193: 1a                                        ; drop
0002194: 0b                                        ; end
000218c: 08                                        ; FIXUP func body size
; function body 111
0002195: 00                                        ; func body size (guess)
0002196: 00                                        ; local decl count
0002197: 42                                        ; i64.const
0002198: 01                                        ; i64 literal
0002199: 42                                        ; i64.const
000219a: 02                                        ; i64 literal
000219b: 86                                        ; i64.shl
000219c: 1a                                        ; drop
000219d: 0b                                        ; end
0002195: 08                                        ; FIXUP func body size
; function body 112
000219e: 00                                        ; func body size (guess)
000219f: 00                                        ; local decl count
00021a0: 42                                        ; i64.const
00021a1: 01                                        ; i64 literal
00021a2: 42                                        ; i64.const
00021a3: 02                                        ; i64 literal
00021a4: 87                                        ; i64.shr_s
00021a5: 1a                                        ; drop
00021a6: 0b                                        ; end
000219e: 08                                        ; FIXUP func body size
; function body 113
00021a7: 00                                        ; func body size (guess)
00021a8: 00                                        ; local decl count
00021a9: 42                                        ; i64.const
00021aa: 01                                        ; i64 literal
00021ab: 42                                        ; i64.const
00021ac: 02                                        ; i64 literal
00021ad: 88                                        ; i64.shr_u
00021ae: 1a                                        ; drop
00021af: 0b                                        ; end
00021a7: 08                                        ; FIXUP func body size
; function body 114
00021b0: 00                                        ; func body size (guess)
00021b1: 00                                        ; local decl count
00021b2: 42                                        ; i64.const
00021b3: 01                                        ; i64 literal
00021b4: 42                                        ; i64.const
00021b5: 02                                        ; i64 literal
00021b6: 89                                        ; i64.rotl
00021b7: 1a                                        ; drop
00021b8: 0b                                        ; end
00021b0: 08                                        ; FIXUP func body size
; function body 115
00021b9: 00                                        ; func body size (guess)
00021ba: 00                                        ; local decl count
00021bb: 42                                        ; i64.const
00021bc: 01                                        ; i64 literal
00021bd: 42                                        ; i64.const
00021be: 02                                        ; i64 literal
00021bf: 8a                                        ; i64.rotr
00021c0: 1a                                        ; drop
00021c1: 0b                                        ; end
00021b9: 08                                        ; FIXUP func body size
; function body 116
00021c2: 00                                        ; func body size (guess)
00021c3: 00                                        ; local decl count
00021c4: 43                                        ; f32.const
00021c5: 0000 803f                                 ; f32 literal
00021c9: 8b                                        ; f32.abs
00021ca: 1a                                        ; drop
00021cb: 0b                                        ; end
00021c2: 09                                        ; FIXUP func body size
; function body 117
00021cc: 00                                        ; func body size (guess)
00021cd: 00                                        ; local decl count
00021ce: 43                                        ; f32.const
00021cf: 0000 803f                                 ; f32 literal
00021d3: 8c                                        ; f32.neg
00021d4: 1a                                        ; drop
00021d5: 0b                                        ; end
00021cc: 09                                        ; FIXUP func body size
; function body 118
00021d6: 00                                        ; func body size (guess)
00021d7: 00                                        ; local decl count
00021d8: 43                                        ; f32.const
00021d9: 0000 803f                                 ; f32 literal
00021dd: 8d                                        ; f32.ceil
00021de: 1a                                        ; drop
00021df: 0b                                        ; end
00021d6: 09                                        ; FIXUP func body size
; function body 119
00021e0: 00                                        ; func body size (guess)
00021e1: 00                                        ; local decl count
00021e2: 43                                        ; f32.const
00021e3: 0000 803f                                 ; f32 literal
00021e7: 8e                                        ; f32.floor
00021e8: 1a                                        ; drop
00021e9: 0b                                        ; end
00021e0: 09                                        ; FIXUP func body size
; function body 120
00021ea: 00                                        ; func body size (guess)
00021eb: 00                                        ; local decl count
00021ec: 43                                        ; f32.const
00021ed: 0000 803f                                 ; f32 literal
00021f1: 8f                                        ; f32.trunc
00021f2: 1a                                        ; drop
00021f3: 0b                                        ; end
00021ea: 09                                        ; FIXUP func body size
; function body 121
00021f4: 00                                        ; func body size (guess)
00021f5: 00                                        ; local decl count
00021f6: 43                                        ; f32.const
00021f7: 0000 803f                                 ; f32 literal
00021fb: 90                                        ; f32.nearest
00021fc: 1a                                        ; drop
00021fd: 0b                                        ; end
00021f4: 09                                        ; FIXUP func body size
; function body 122
00021fe: 00                                        ; func body size (guess)
00021ff: 00                                        ; local decl count
0002200: 43                                        ; f32.const
0002201: 0000 803f                                 ; f32 literal
0002205: 91                                        ; f32.sqrt
0002206: 1a                                        ; drop
0002207: 0b                                        ; end
00021fe: 09                                        ; FIXUP func body size
; function body 123
0002208: 00                                        ; func body size (guess)
0002209: 00                                        ; local decl count
000220a: 43                                        ; f32.const
000220b: 0000 803f                                 ; f32 literal
000220f: 43                                        ; f32.const
0002210: 0000 0040                                 ; f32 literal
0002214: 92                                        ; f32.add
0002215: 1a                                        ; drop
0002216: 0b                                        ; end
0002208: 0e                                        ; FIXUP func body size
; function body 124
0002217: 00                                        ; func body size (guess)
0002218: 00                                        ; local decl count
0002219: 43                                        ; f32.const
000221a: 0000 803f                                 ; f32 literal
000221e: 43                                        ; f32.const
000221f: 0000 0040                                 ; f32 literal
0002223: 93                                        ; f32.sub
0002224: 1a                                        ; drop
0002225: 0b                                        ; end
0002217: 0e                                        ; FIXUP func body size
; function body 125
0002226: 00                                        ; func body size (guess)
0002227: 00                                        ; local decl count
0002228: 43                                        ; f32.const
0002229: 0000 803f                                 ; f32 literal
000222d: 43                                        ; f32.const
000222e: 0000 0040                                 ; f32 literal
0002232: 94                                        ; f32.mul
0002233: 1a                                        ; drop
0002234: 0b                                        ; end
0002226: 0e                                        ; FIXUP func body size
; function body 126
0002235: 00                                        ; func body size (guess)
0002236: 00                                        ; local decl count
0002237: 43                                        ; f32.const
0002238: 0000 803f                                 ; f32 literal
000223c: 43                                        ; f32.const
000223d: 0000 0040                                 ; f32 literal
0002241: 95                                        ; f32.div
0002242: 1a                                        ; drop
0002243: 0b                                        ; end
0002235: 0e                                        ; FIXUP func body size
; function body 127
0002244: 00                                        ; func body size (guess)
0002245: 00                                        ; local decl count
0002246: 43                                        ; f32.const
0002247: 0000 803f                                 ; f32 literal
000224b: 43                                        ; f32.const
000224c: 0000 0040                                 ; f32 literal
0002250: 96                                        ; f32.min
0002251: 1a                                        ; drop
0002252: 0b                                        ; end
0002244: 0e                                        ; FIXUP func body size
; function body 128
0002253: 00                                        ; func body size (guess)
0002254: 00                                        ; local decl count
0002255: 43                                        ; f32.const
0002256: 0000 803f                                 ; f32 literal
000225a: 43                                        ; f32.const
000225b: 0000 0040                                 ; f32 literal
000225f: 97                                        ; f32.max
0002260: 1a                                        ; drop
0002261: 0b                                        ; end
0002253: 0e                                        ; FIXUP func body size
; function body 129
0002262: 00                                        ; func body size (guess)
0002263: 00                                        ; local decl count
0002264: 43                                        ; f32.const
0002265: 0000 803f                                 ; f32 literal
0002269: 43                                        ; f32.const
000226a: 0000 0040                                 ; f32 literal
000226e: 98                                        ; f32.copysign
000226f: 1a                                        ; drop
0002270: 0b                                        ; end
0002262: 0e                                        ; FIXUP func body size
; function body 130
0002271: 00                                        ; func body size (guess)
0002272: 00                                        ; local decl count
0002273: 44                                        ; f64.const
0002274: 0000 0000 0000 f03f                       ; f64 literal
000227c: 99                                        ; f64.abs
000227d: 1a                                        ; drop
000227e: 0b                                        ; end
0002271: 0d                                        ; FIXUP func body size
; function body 131
000227f: 00                                        ; func body size (guess)
0002280: 00                                        ; local decl count
0002281: 44                                        ; f64.const
0002282: 0000 0000 0000 f03f                       ; f64 literal
000228a: 9a                                        ; f64.neg
000228b: 1a                                        ; drop
000228c: 0b                                        ; end
000227f: 0d                                        ; FIXUP func body size
; function body 132
000228d: 00                                        ; func body size (guess)
000228e: 00                                        ; local decl count
000228f: 44                                        ; f64.const
0002290: 0000 0000 0000 f03f                       ; f64 literal
0002298: 9b                                        ; f64.ceil
0002299: 1a                                        ; drop
000229a: 0b                                        ; end
000228d: 0d                                        ; FIXUP func body size
; function body 133
000229b: 00                                        ; func body size (guess)
000229c: 00                                        ; local decl count
000229d: 44                                        ; f64.const
000229e: 0000 0000 0000 f03f                       ; f64 literal
00022a6: 9c                                        ; f64.floor
00022a7: 1a                                        ; drop
00022a8: 0b                                        ; end
000229b: 0d                                        ; FIXUP func body size
; function body 134
00022a9: 00                                        ; func body size (guess)
00022aa: 00                                        ; local decl count
00022ab: 44                                        ; f64.const
00022ac: 0000 0000 0000 f03f                       ; f64 literal
00022b4: 9d                                        ; f64.trunc
00022b5: 1a                                        ; drop
00022b6: 0b                                        ; end
00022a9: 0d                                        ; FIXUP func body size
; function body 135
00022b7: 00                                        ; func body size (guess)
00022b8: 00                                        ; local decl count
00022b9: 44                                        ; f64.const
00022ba: 0000 0000 0000 f03f                       ; f64 literal
00022c2: 9e                                        ; f64.nearest
00022c3: 1a                                        ; drop
00022c4: 0b                                        ; end
00022b7: 0d                                        ; FIXUP func body size
; function body 136
00022c5: 00                                        ; func body size (guess)
00022c6: 00                                        ; local decl count
00022c7: 44                                        ; f64.const
00022c8: 0000 0000 0000 f03f                       ; f64 literal
00022d0: 9f                                        ; f64.sqrt
00022d1: 1a                                        ; drop
00022d2: 0b                                        ; end
00022c5: 0d                                        ; FIXUP func body size
; function body 137
00022d3: 00                                        ; func body size (guess)
00022d4: 00                                        ; local decl count
00022d5: 44                                        ; f64.const
00022d6: 0000 0000 0000 f03f                       ; f64 literal
00022de: 44                                        ; f64.const
00022df: 0000 0000 0000 0040                       ; f64 literal
00022e7: a0                                        ; f64.add
00022e8: 1a                                        ; drop
00022e9: 0b                                        ; end
00022d3: 16                                        ; FIXUP func body size
; function body 138
00022ea: 00                                        ; func body size (guess)
00022eb: 00                                        ; local decl count
00022ec: 44                                        ; f64.const
00022ed: 0000 0000 0000 f03f                       ; f64 literal
00022f5: 44                                        ; f64.const
00022f6: 0000 0000 0000 0040                       ; f64 literal
00022fe: a1                                        ; f64.sub
00022ff: 1a                                        ; drop
0002300: 0b                                        ; end
00022ea: 16                                        ; FIXUP func body size
; function body 139
0002301: 00                                        ; func body size (guess)
0002302: 00                                        ; local decl count
0002303: 44                                        ; f64.const
0002304: 0000 0000 0000 f03f                       ; f64 literal
000230c: 44                                        ; f64.const
000230d: 0000 0000 0000 0040                       ; f64 literal
0002315: a2                                        ; f64.mul
0002316: 1a                                        ; drop
0002317: 0b                                        ; end
0002301: 16                                        ; FIXUP func body size
; function body 140
0002318: 00                                        ; func body size (guess)
0002319: 00                                        ; local decl count
000231a: 44                                        ; f64.const
000231b: 0000 0000 0000 f03f                       ; f64 literal
0002323: 44                                        ; f64.const
0002324: 0000 0000 0000 0040                       ; f64 literal
000232c: a3                                        ; f64.div
000232d: 1a                                        ; drop
000232e: 0b                                        ; end
0002318: 16                                        ; FIXUP func body size
; function body 141
000232f: 00                                        ; func body size (guess)
0002330: 00                                        ; local decl count
0002331: 44                                        ; f64.const
0002332: 0000 0000 0000 f03f                       ; f64 literal
000233a: 44                                        ; f64.const
000233b: 0000 0000 0000 0040                       ; f64 literal
0002343: a4                                        ; f64.min
0002344: 1a                                        ; drop
0002345: 0b                                        ; end
000232f: 16                                        ; FIXUP func body size
; function body 142
0002346: 00                                        ; func body size (guess)
0002347: 00                                        ; local decl count
0002348: 44                                        ; f64.const
0002349: 0000 0000 0000 f03f                       ; f64 literal
0002351: 44                                        ; f64.const
0002352: 0000 0000 0000 0040                       ; f64 literal
000235a: a5                                        ; f64.max
000235b: 1a                                        ; drop
000235c: 0b                                        ; end
0002346: 16                                        ; FIXUP func body size
; function body 143
000235d: 00                                        ; func body size (guess)
000235e: 00                                        ; local decl count
000235f: 44                                        ; f64.const
0002360: 0000 0000 0000 f03f                       ; f64 literal
0002368: 44                                        ; f64.const
0002369: 0000 0000 0000 0040                       ; f64 literal
0002371: a6                                        ; f64.copysign
0002372: 1a                                        ; drop
0002373: 0b                                        ; end
000235d: 16                                        ; FIXUP func body size
; function body 144
0002374: 00                                        ; func body size (guess)
0002375: 00                                        ; local decl count
0002376: 42                                        ; i64.const
0002377: 01                                        ; i64 literal
0002378: a7                                        ; i32.wrap_i64
0002379: 1a                                        ; drop
000237a: 0b                                        ; end
0002374: 06                                        ; FIXUP func body size
; function body 145
000237b: 00                                        ; func body size (guess)
000237c: 00                                        ; local decl count
000237d: 43                                        ; f32.const
000237e: 0000 803f                                 ; f32 literal
0002382: a8                                        ; i32.trunc_f32_s
0002383: 1a                                        ; drop
0002384: 0b                                        ; end
000237b: 09                                        ; FIXUP func body size
; function body 146
0002385: 00                                        ; func body size (guess)
0002386: 00                                        ; local decl count
0002387: 43                                        ; f32.const
0002388: 0000 803f                                 ; f32 literal
000238c: a9                                        ; i32.trunc_f32_u
000238d: 1a                                        ; drop
000238e: 0b                                        ; end
0002385: 09                                        ; FIXUP func body size
; function body 147
000238f: 00                                        ; func body size (guess)
0002390: 00                                        ; local decl count
0002391: 44                                        ; f64.const
0002392: 0000 0000 0000 f03f                       ; f64 literal
000239a: aa                                        ; i32.trunc_f64_s
000239b: 1a                                        ; drop
000239c: 0b                                        ; end
000238f: 0d                                        ; FIXUP func body size
; function body 148
000239d: 00                                        ; func body size (guess)
000239e: 00                                        ; local decl count
000239f: 44                                        ; f64.const
00023a0: 0000 0000 0000 f03f                       ; f64 literal
00023a8: ab                                        ; i32.trunc_f64_u
00023a9: 1a                                        ; drop
00023aa: 0b                                        ; end
000239d: 0d                                        ; FIXUP func body size
; function body 149
00023ab: 00                                        ; func body size (guess)
00023ac: 00                                        ; local decl count
00023ad: 41                                        ; i32.const
00023ae: 01                                        ; i32 literal
00023af: ac                                        ; i64.extend_i32_s
00023b0: 1a                                        ; drop
00023b1: 0b                                        ; end
00023ab: 06                                        ; FIXUP func body size
; function body 150
00023b2: 00                                        ; func body size (guess)
00023b3: 00                                        ; local decl count
00023b4: 41                                        ; i32.const
00023b5: 01                                        ; i32 literal
00023b6: ad                                        ; i64.extend_i32_u
00023b7: 1a                                        ; drop
00023b8: 0b                                        ; end
00023b2: 06                                        ; FIXUP func body size
; function body 151
00023b9: 00                                        ; func body size (guess)
00023ba: 00                                        ; local decl count
00023bb: 43                                        ; f32.const
00023bc: 0000 803f                                 ; f32 literal
00023c0: ae                                        ; i64.trunc_f32_s
00023c1: 1a                                        ; drop
00023c2: 0b                                        ; end
00023b9: 09                                        ; FIXUP func body size
; function body 152
00023c3: 00                                        ; func body size (guess)
00023c4: 00                                        ; local decl count
00023c5: 43                                        ; f32.const
00023c6: 0000 803f                                 ; f32 literal
00023ca: af                                        ; i64.trunc_f32_u
00023cb: 1a                                        ; drop
00023cc: 0b                                        ; end
00023c3: 09                                        ; FIXUP func body size
; function body 153
00023cd: 00                                        ; func body size (guess)
00023ce: 00                                        ; local decl count
00023cf: 44                                        ; f64.const
00023d0: 0000 0000 0000 f03f                       ; f64 literal
00023d8: b0                                        ; i64.trunc_f64_s
00023d9: 1a                                        ; drop
00023da: 0b                                        ; end
00023cd: 0d                                        ; FIXUP func body size
; function body 154
00023db: 00                                        ; func body size (guess)
00023dc: 00                                        ; local decl count
00023dd: 44                                        ; f64.const
00023de: 0000 0000 0000 f03f                       ; f64 literal
00023e6: b1                                        ; i64.trunc_f64_u
00023e7: 1a                                        ; drop
00023e8: 0b                                        ; end
00023db: 0d                                        ; FIXUP func body size
; function body 155
00023e9: 00                                        ; func body size (guess)
00023ea: 00                                        ; local decl count
00023eb: 41                                        ; i32.const
00023ec: 01                                        ; i32 literal
00023ed: b2                                        ; f32.convert_i32_s
00023ee: 1a                                        ; drop
00023ef: 0b                                        ; end
00023e9: 06                                        ; FIXUP func body size
; function body 156
00023f0: 00                                        ; func body size (guess)
00023f1: 00                                        ; local decl count
00023f2: 41                                        ; i32.const
00023f3: 01                                        ; i32 literal
00023f4: b3                                        ; f32.convert_i32_u
00023f5: 1a                                        ; drop
00023f6: 0b                                        ; end
00023f0: 06                                        ; FIXUP func body size
; function body 157
00023f7: 00                                        ; func body size (guess)
00023f8: 00                                        ; local decl count
00023f9: 42                                        ; i64.const
00023fa: 01                                        ; i64 literal
00023fb: b4                                        ; f32.convert_i64_s
00023fc: 1a                                        ; drop
00023fd: 0b                                        ; end
00023f7: 06                                        ; FIXUP func body size
; function body 158
00023fe: 00                                        ; func body size (guess)
00023ff: 00                                        ; local decl count
0002400: 42                                        ; i64.const
0002401: 01                                        ; i64 literal
0002402: b5                                        ; f32.convert_i64_u
0002403: 1a                                        ; drop
0002404: 0b                                        ; end
00023fe: 06                                        ; FIXUP func body size
; function body 159
0002405: 00                                        ; func body size (guess)
0002406: 00                                        ; local decl count
0002407: 44                                        ; f64.const
0002408: 0000 0000 0000 f03f                       ; f64 literal
0002410: b6                                        ; f32.demote_f64
0002411: 1a                                        ; drop
0002412: 0b                                        ; end
0002405: 0d                                        ; FIXUP func body size
; function body 160
0002413: 00                                        ; func body size (guess)
0002414: 00                                        ; local decl count
0002415: 41                                        ; i32.const
0002416: 01                                        ; i32 literal
0002417: b7                                        ; f64.convert_i32_s
0002418: 1a                                        ; drop
0002419: 0b                                        ; end
0002413: 06                                        ; FIXUP func body size
; function body 161
000241a: 00                                        ; func body size (guess)
000241b: 00                                        ; local decl count
000241c: 41                                        ; i32.const
000241d: 01                                        ; i32 literal
000241e: b8                                        ; f64.convert_i32_u
000241f: 1a                                        ; drop
0002420: 0b                                        ; end
000241a: 06                                        ; FIXUP func body size
; function body 162
0002421: 00                                        ; func body size (guess)
0002422: 00                                        ; local decl count
0002423: 42                                        ; i64.const
0002424: 01                                        ; i64 literal
0002425: b9                                        ; f64.convert_i64_s
0002426: 1a                                        ; drop
0002427: 0b                                        ; end
0002421: 06                                        ; FIXUP func body size
; function body 163
0002428: 00                                        ; func body size (guess)
0002429: 00                                        ; local decl count
000242a: 42                                        ; i64.const
000242b: 01                                        ; i64 literal
000242c: ba                                        ; f64.convert_i64_u
000242d: 1a                                        ; drop
000242e: 0b                                        ; end
0002428: 06                                        ; FIXUP func body size
; function body 164
000242f: 00                                        ; func body size (guess)
0002430: 00                                        ; local decl count
0002431: 43                                        ; f32.const
0002432: 0000 803f                                 ; f32 literal
0002436: bb                                        ; f64.promote_f32
0002437: 1a                                        ; drop
0002438: 0b                                        ; end
000242f: 09                                        ; FIXUP func body size
; function body 165
0002439: 00                                        ; func body size (guess)
000243a: 00                                        ; local decl count
000243b: 41                                        ; i32.const
000243c: 01                                        ; i32 literal
000243d: be                                        ; f32.reinterpret_i32
000243e: 1a                                        ; drop
000243f: 0b                                        ; end
0002439: 06                                        ; FIXUP func body size
; function body 166
0002440: 00                                        ; func body size (guess)
0002441: 00                                        ; local decl count
0002442: 43                                        ; f32.const
0002443: 0000 803f                                 ; f32 literal
0002447: bc                                        ; i32.reinterpret_f32
0002448: 1a                                        ; drop
0002449: 0b                                        ; end
0002440: 09                                        ; FIXUP func body size
; function body 167
000244a: 00                                        ; func body size (guess)
000244b: 00                                        ; local decl count
000244c: 42                                        ; i64.const
000244d: 01                                        ; i64 literal
000244e: bf                                        ; f64.reinterpret_i64
000244f: 1a                                        ; drop
0002450: 0b                                        ; end
000244a: 06                                        ; FIXUP func body size
; function body 168
0002451: 00                                        ; func body size (guess)
0002452: 00                                        ; local decl count
0002453: 44                                        ; f64.const
0002454: 0000 0000 0000 f03f                       ; f64 literal
000245c: bd                                        ; i64.reinterpret_f64
000245d: 1a                                        ; drop
000245e: 0b                                        ; end
0002451: 0d                                        ; FIXUP func body size
; function body 169
000245f: 00                                        ; func body size (guess)
0002460: 00                                        ; local decl count
0002461: 41                                        ; i32.const
0002462: 01                                        ; i32 literal
0002463: c0                                        ; i32.extend8_s
0002464: 1a                                        ; drop
0002465: 0b                                        ; end
000245f: 06                                        ; FIXUP func body size
; function body 170
0002466: 00                                        ; func body size (guess)
0002467: 00                                        ; local decl count
0002468: 41                                        ; i32.const
0002469: 01                                        ; i32 literal
000246a: c1                                        ; i32.extend16_s
000246b: 1a                                        ; drop
000246c: 0b                                        ; end
0002466: 06                                        ; FIXUP func body size
; function body 171
000246d: 00                                        ; func body size (guess)
000246e: 00                                        ; local decl count
000246f: 42                                        ; i64.const
0002470: 01                                        ; i64 literal
0002471: c2                                        ; i64.extend8_s
0002472: 1a                                        ; drop
0002473: 0b                                        ; end
000246d: 06                                        ; FIXUP func body size
; function body 172
0002474: 00                                        ; func body size (guess)
0002475: 00                                        ; local decl count
0002476: 42                                        ; i64.const
0002477: 01                                        ; i64 literal
0002478: c3                                        ; i64.extend16_s
0002479: 1a                                        ; drop
000247a: 0b                                        ; end
0002474: 06                                        ; FIXUP func body size
; function body 173
000247b: 00                                        ; func body size (guess)
000247c: 00                                        ; local decl count
000247d: 42                                        ; i64.const
000247e: 01                                        ; i64 literal
000247f: c4                                        ; i64.extend32_s
0002480: 1a                                        ; drop
0002481: 0b                                        ; end
000247b: 06                                        ; FIXUP func body size
; function body 174
0002482: 00                                        ; func body size (guess)
0002483: 01                                        ; local decl count
0002484: 01                                        ; local type count
0002485: 7f                                        ; i32
0002486: 0b                                        ; end
0002482: 04                                        ; FIXUP func body size
; function body 175
0002487: 00                                        ; func body size (guess)
0002488: 00                                        ; local decl count
0002489: 41                                        ; i32.const
000248a: 01                                        ; i32 literal
000248b: 0d                                        ; br_if
000248c: 00                                        ; break depth
000248d: 0b                                        ; end
0002487: 06                                        ; FIXUP func body size
; function body 176
000248e: 00                                        ; func body size (guess)
000248f: 00                                        ; local decl count
0002490: 41                                        ; i32.const
0002491: 01                                        ; i32 literal
0002492: 10                                        ; call
0002493: 00                                        ; function index
0002494: 0b                                        ; end
000248e: 06                                        ; FIXUP func body size
; function body 177
0002495: 00                                        ; func body size (guess)
0002496: 00                                        ; local decl count
0002497: 41                                        ; i32.const
0002498: 01                                        ; i32 literal
0002499: 0e                                        ; br_table
000249a: 00                                        ; num targets
000249b: 00                                        ; break depth for default
000249c: 0b                                        ; end
0002495: 07                                        ; FIXUP func body size
; function body 178
000249d: 00                                        ; func body size (guess)
000249e: 00                                        ; local decl count
000249f: 02                                        ; block
00024a0: 7f                                        ; i32
00024a1: 41                                        ; i32.const
00024a2: 01                                        ; i32 literal
00024a3: 41                                        ; i32.const
00024a4: 02                                        ; i32 literal
00024a5: 0c                                        ; br
00024a6: 00                                        ; break depth
00024a7: 0b                                        ; end
00024a8: 1a                                        ; drop
00024a9: 0b                                        ; end
000249d: 0c                                        ; FIXUP func body size
; function body 179
00024aa: 00                                        ; func body size (guess)
00024ab: 00                                        ; local decl count
00024ac: 43                                        ; f32.const
00024ad: 0000 803f                                 ; f32 literal
00024b1: fc                                        ; prefix
00024b2: 00                                        ; i32.trunc_sat_f32_s
00024b3: 1a                                        ; drop
00024b4: 0b                                        ; end
00024aa: 0a                                        ; FIXUP func body size
; function body 180
00024b5: 00                                        ; func body size (guess)
00024b6: 00                                        ; local decl count
00024b7: 43                                        ; f32.const
00024b8: 0000 803f                                 ; f32 literal
00024bc: fc                                        ; prefix
00024bd: 01                                        ; i32.trunc_sat_f32_u
00024be: 1a                                        ; drop
00024bf: 0b                                        ; end
00024b5: 0a                                        ; FIXUP func body size
; function body 181
00024c0: 00                                        ; func body size (guess)
00024c1: 00                                        ; local decl count
00024c2: 44                                        ; f64.const
00024c3: 0000 0000 0000 f03f                       ; f64 literal
00024cb: fc                                        ; prefix
00024cc: 02                                        ; i32.trunc_sat_f64_s
00024cd: 1a                                        ; drop
00024ce: 0b                                        ; end
00024c0: 0e                                        ; FIXUP func body size
; function body 182
00024cf: 00                                        ; func body size (guess)
00024d0: 00                                        ; local decl count
00024d1: 44                                        ; f64.const
00024d2: 0000 0000 0000 f03f                       ; f64 literal
00024da: fc                                        ; prefix
00024db: 03                                        ; i32.trunc_sat_f64_u
00024dc: 1a                                        ; drop
00024dd: 0b                                        ; end
00024cf: 0e                                        ; FIXUP func body size
; function body 183
00024de: 00                                        ; func body size (guess)
00024df: 00                                        ; local decl count
00024e0: 43                                        ; f32.const
00024e1: 0000 803f                                 ; f32 literal
00024e5: fc                                        ; prefix
00024e6: 04                                        ; i64.trunc_sat_f32_s
00024e7: 1a                                        ; drop
00024e8: 0b                                        ; end
00024de: 0a                                        ; FIXUP func body size
; function body 184
00024e9: 00                                        ; func body size (guess)
00024ea: 00                                        ; local decl count
00024eb: 43                                        ; f32.const
00024ec: 0000 803f                                 ; f32 literal
00024f0: fc                                        ; prefix
00024f1: 05                                        ; i64.trunc_sat_f32_u
00024f2: 1a                                        ; drop
00024f3: 0b                                        ; end
00024e9: 0a                                        ; FIXUP func body size
; function body 185
00024f4: 00                                        ; func body size (guess)
00024f5: 00                                        ; local decl count
00024f6: 44                                        ; f64.const
00024f7: 0000 0000 0000 f03f                       ; f64 literal
00024ff: fc                                        ; prefix
0002500: 06                                        ; i64.trunc_sat_f64_s
0002501: 1a                                        ; drop
0002502: 0b                                        ; end
00024f4: 0e                                        ; FIXUP func body size
; function body 186
0002503: 00                                        ; func body size (guess)
0002504: 00                                        ; local decl count
0002505: 44                                        ; f64.const
0002506: 0000 0000 0000 f03f                       ; f64 literal
000250e: fc                                        ; prefix
000250f: 07                                        ; i64.trunc_sat_f64_u
0002510: 1a                                        ; drop
0002511: 0b                                        ; end
0002503: 0e                                        ; FIXUP func body size
; function body 187
0002512: 00                                        ; func body size (guess)
0002513: 00                                        ; local decl count
0002514: 41                                        ; i32.const
0002515: 01                                        ; i32 literal
0002516: 41                                        ; i32.const
0002517: 02                                        ; i32 literal
0002518: 41                                        ; i32.const
0002519: 03                                        ; i32 literal
000251a: fc                                        ; prefix
000251b: 08                                        ; memory.init
000251c: 00                                        ; memory.init segment
000251d: 00                                        ; memory.init reserved
000251e: 0b                                        ; end
0002512: 0c                                        ; FIXUP func body size
; function body 188
000251f: 00                                        ; func body size (guess)
0002520: 00                                        ; local decl count
0002521: fc                                        ; prefix
0002522: 09                                        ; data.drop
0002523: 00                                        ; data.drop segment
0002524: 0b                                        ; end
000251f: 05                                        ; FIXUP func body size
; function body 189
0002525: 00                                        ; func body size (guess)
0002526: 00                                        ; local decl count
0002527: 41                                        ; i32.const
0002528: 01                                        ; i32 literal
0002529: 41                                        ; i32.const
000252a: 02                                        ; i32 literal
000252b: 41                                        ; i32.const
000252c: 03                                        ; i32 literal
000252d: fc                                        ; prefix
000252e: 0a                                        ; memory.copy
000252f: 00                                        ; memory.copy reserved
0002530: 00                                        ; memory.copy reserved
0002531: 0b                                        ; end
0002525: 0c                                        ; FIXUP func body size
; function body 190
0002532: 00                                        ; func body size (guess)
0002533: 00                                        ; local decl count
0002534: 41                                        ; i32.const
0002535: 01                                        ; i32 literal
0002536: 41                                        ; i32.const
0002537: 02                                        ; i32 literal
0002538: 41                                        ; i32.const
0002539: 03                                        ; i32 literal
000253a: fc                                        ; prefix
000253b: 0b                                        ; memory.fill
000253c: 00                                        ; memory.fill reserved
000253d: 0b                                        ; end
0002532: 0b                                        ; FIXUP func body size
; function body 191
000253e: 00                                        ; func body size (guess)
000253f: 00                                        ; local decl count
0002540: 41                                        ; i32.const
0002541: 01                                        ; i32 literal
0002542: 41                                        ; i32.const
0002543: 02                                        ; i32 literal
0002544: 41                                        ; i32.const
0002545: 03                                        ; i32 literal
0002546: fc                                        ; prefix
0002547: 0c                                        ; table.init
0002548: 00                                        ; table.init segment
0002549: 00                                        ; table.init table
000254a: 0b                                        ; end
000253e: 0c                                        ; FIXUP func body size
; function body 192
000254b: 00                                        ; func body size (guess)
000254c: 00                                        ; local decl count
000254d: fc                                        ; prefix
000254e: 0d                                        ; elem.drop
000254f: 00                                        ; elem.drop segment
0002550: 0b                                        ; end
000254b: 05                                        ; FIXUP func body size
; function body 193
0002551: 00                                        ; func body size (guess)
0002552: 00                                        ; local decl count
0002553: 41                                        ; i32.const
0002554: 01                                        ; i32 literal
0002555: 41                                        ; i32.const
0002556: 02                                        ; i32 literal
0002557: 41                                        ; i32.const
0002558: 03                                        ; i32 literal
0002559: fc                                        ; prefix
000255a: 0e                                        ; table.copy
000255b: 00                                        ; table.copy dst_table
000255c: 00                                        ; table.copy src_table
000255d: 0b                                        ; end
0002551: 0c                                        ; FIXUP func body size
; function body 194
000255e: 00                                        ; func body size (guess)
000255f: 00                                        ; local decl count
0002560: 41                                        ; i32.const
0002561: 01                                        ; i32 literal
0002562: fd                                        ; prefix
0002563: 00                                        ; v128.load
0002564: 04                                        ; alignment
0002565: 03                                        ; load offset
0002566: 1a                                        ; drop
0002567: 0b                                        ; end
000255e: 09                                        ; FIXUP func body size
; function body 195
0002568: 00                                        ; func body size (guess)
0002569: 00                                        ; local decl count
000256a: 41                                        ; i32.const
000256b: 01                                        ; i32 literal
000256c: fd                                        ; prefix
000256d: 02                                        ; v128.const
000256e: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000257e: fd                                        ; prefix
000257f: 01                                        ; v128.store
0002580: 04                                        ; alignment
0002581: 03                                        ; store offset
0002582: 0b                                        ; end
0002568: 1a                                        ; FIXUP func body size
; function body 196
0002583: 00                                        ; func body size (guess)
0002584: 00                                        ; local decl count
0002585: fd                                        ; prefix
0002586: 02                                        ; v128.const
0002587: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002597: 1a                                        ; drop
0002598: 0b                                        ; end
0002583: 15                                        ; FIXUP func body size
; function body 197
0002599: 00                                        ; func body size (guess)
000259a: 00                                        ; local decl count
000259b: 41                                        ; i32.const
000259c: 01                                        ; i32 literal
000259d: fd                                        ; prefix
000259e: 04                                        ; i8x16.splat
000259f: 1a                                        ; drop
00025a0: 0b                                        ; end
0002599: 07                                        ; FIXUP func body size
; function body 198
00025a1: 00                                        ; func body size (guess)
00025a2: 00                                        ; local decl count
00025a3: fd                                        ; prefix
00025a4: 02                                        ; v128.const
00025a5: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00025b5: fd                                        ; prefix
00025b6: 05                                        ; i8x16.extract_lane_s
00025b7: 0f                                        ; Simd Lane literal
00025b8: 1a                                        ; drop
00025b9: 0b                                        ; end
00025a1: 18                                        ; FIXUP func body size
; function body 199
00025ba: 00                                        ; func body size (guess)
00025bb: 00                                        ; local decl count
00025bc: fd                                        ; prefix
00025bd: 02                                        ; v128.const
00025be: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00025ce: fd                                        ; prefix
00025cf: 06                                        ; i8x16.extract_lane_u
00025d0: 0f                                        ; Simd Lane literal
00025d1: 1a                                        ; drop
00025d2: 0b                                        ; end
00025ba: 18                                        ; FIXUP func body size
; function body 200
00025d3: 00                                        ; func body size (guess)
00025d4: 00                                        ; local decl count
00025d5: fd                                        ; prefix
00025d6: 02                                        ; v128.const
00025d7: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00025e7: 41                                        ; i32.const
00025e8: 00                                        ; i32 literal
00025e9: fd                                        ; prefix
00025ea: 07                                        ; i8x16.replace_lane
00025eb: 0f                                        ; Simd Lane literal
00025ec: 1a                                        ; drop
00025ed: 0b                                        ; end
00025d3: 1a                                        ; FIXUP func body size
; function body 201
00025ee: 00                                        ; func body size (guess)
00025ef: 00                                        ; local decl count
00025f0: 41                                        ; i32.const
00025f1: 01                                        ; i32 literal
00025f2: fd                                        ; prefix
00025f3: 08                                        ; i16x8.splat
00025f4: 1a                                        ; drop
00025f5: 0b                                        ; end
00025ee: 07                                        ; FIXUP func body size
; function body 202
00025f6: 00                                        ; func body size (guess)
00025f7: 00                                        ; local decl count
00025f8: fd                                        ; prefix
00025f9: 02                                        ; v128.const
00025fa: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000260a: fd                                        ; prefix
000260b: 09                                        ; i16x8.extract_lane_s
000260c: 07                                        ; Simd Lane literal
000260d: 1a                                        ; drop
000260e: 0b                                        ; end
00025f6: 18                                        ; FIXUP func body size
; function body 203
000260f: 00                                        ; func body size (guess)
0002610: 00                                        ; local decl count
0002611: fd                                        ; prefix
0002612: 02                                        ; v128.const
0002613: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002623: fd                                        ; prefix
0002624: 0a                                        ; i16x8.extract_lane_u
0002625: 07                                        ; Simd Lane literal
0002626: 1a                                        ; drop
0002627: 0b                                        ; end
000260f: 18                                        ; FIXUP func body size
; function body 204
0002628: 00                                        ; func body size (guess)
0002629: 00                                        ; local decl count
000262a: fd                                        ; prefix
000262b: 02                                        ; v128.const
000262c: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000263c: 41                                        ; i32.const
000263d: 00                                        ; i32 literal
000263e: fd                                        ; prefix
000263f: 0b                                        ; i16x8.replace_lane
0002640: 07                                        ; Simd Lane literal
0002641: 1a                                        ; drop
0002642: 0b                                        ; end
0002628: 1a                                        ; FIXUP func body size
; function body 205
0002643: 00                                        ; func body size (guess)
0002644: 00                                        ; local decl count
0002645: 41                                        ; i32.const
0002646: 01                                        ; i32 literal
0002647: fd                                        ; prefix
0002648: 0c                                        ; i32x4.splat
0002649: 1a                                        ; drop
000264a: 0b                                        ; end
0002643: 07                                        ; FIXUP func body size
; function body 206
000264b: 00                                        ; func body size (guess)
000264c: 00                                        ; local decl count
000264d: fd                                        ; prefix
000264e: 02                                        ; v128.const
000264f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000265f: fd                                        ; prefix
0002660: 0d                                        ; i32x4.extract_lane
0002661: 03                                        ; Simd Lane literal
0002662: 1a                                        ; drop
0002663: 0b                                        ; end
000264b: 18                                        ; FIXUP func body size
; function body 207
0002664: 00                                        ; func body size (guess)
0002665: 00                                        ; local decl count
0002666: fd                                        ; prefix
0002667: 02                                        ; v128.const
0002668: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002678: 41                                        ; i32.const
0002679: 00                                        ; i32 literal
000267a: fd                                        ; prefix
000267b: 0e                                        ; i32x4.replace_lane
000267c: 03                                        ; Simd Lane literal
000267d: 1a                                        ; drop
000267e: 0b                                        ; end
0002664: 1a                                        ; FIXUP func body size
; function body 208
000267f: 00                                        ; func body size (guess)
0002680: 00                                        ; local decl count
0002681: 42                                        ; i64.const
0002682: 01                                        ; i64 literal
0002683: fd                                        ; prefix
0002684: 0f                                        ; i64x2.splat
0002685: 1a                                        ; drop
0002686: 0b                                        ; end
000267f: 07                                        ; FIXUP func body size
; function body 209
0002687: 00                                        ; func body size (guess)
0002688: 00                                        ; local decl count
0002689: fd                                        ; prefix
000268a: 02                                        ; v128.const
000268b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000269b: fd                                        ; prefix
000269c: 10                                        ; i64x2.extract_lane
000269d: 01                                        ; Simd Lane literal
000269e: 1a                                        ; drop
000269f: 0b                                        ; end
0002687: 18                                        ; FIXUP func body size
; function body 210
00026a0: 00                                        ; func body size (guess)
00026a1: 00                                        ; local decl count
00026a2: fd                                        ; prefix
00026a3: 02                                        ; v128.const
00026a4: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00026b4: 42                                        ; i64.const
00026b5: 00                                        ; i64 literal
00026b6: fd                                        ; prefix
00026b7: 11                                        ; i64x2.replace_lane
00026b8: 01                                        ; Simd Lane literal
00026b9: 1a                                        ; drop
00026ba: 0b                                        ; end
00026a0: 1a                                        ; FIXUP func body size
; function body 211
00026bb: 00                                        ; func body size (guess)
00026bc: 00                                        ; local decl count
00026bd: 43                                        ; f32.const
00026be: 0000 803f                                 ; f32 literal
00026c2: fd                                        ; prefix
00026c3: 12                                        ; f32x4.splat
00026c4: 1a                                        ; drop
00026c5: 0b                                        ; end
00026bb: 0a                                        ; FIXUP func body size
; function body 212
00026c6: 00                                        ; func body size (guess)
00026c7: 00                                        ; local decl count
00026c8: fd                                        ; prefix
00026c9: 02                                        ; v128.const
00026ca: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00026da: fd                                        ; prefix
00026db: 13                                        ; f32x4.extract_lane
00026dc: 03                                        ; Simd Lane literal
00026dd: 1a                                        ; drop
00026de: 0b                                        ; end
00026c6: 18                                        ; FIXUP func body size
; function body 213
00026df: 00                                        ; func body size (guess)
00026e0: 00                                        ; local decl count
00026e1: fd                                        ; prefix
00026e2: 02                                        ; v128.const
00026e3: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00026f3: 43                                        ; f32.const
00026f4: 0000 0000                                 ; f32 literal
00026f8: fd                                        ; prefix
00026f9: 14                                        ; f32x4.replace_lane
00026fa: 03                                        ; Simd Lane literal
00026fb: 1a                                        ; drop
00026fc: 0b                                        ; end
00026df: 1d                                        ; FIXUP func body size
; function body 214
00026fd: 00                                        ; func body size (guess)
00026fe: 00                                        ; local decl count
00026ff: 44                                        ; f64.const
0002700: 0000 0000 0000 f03f                       ; f64 literal
0002708: fd                                        ; prefix
0002709: 15                                        ; f64x2.splat
000270a: 1a                                        ; drop
000270b: 0b                                        ; end
00026fd: 0e                                        ; FIXUP func body size
; function body 215
000270c: 00                                        ; func body size (guess)
000270d: 00                                        ; local decl count
000270e: fd                                        ; prefix
000270f: 02                                        ; v128.const
0002710: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002720: fd                                        ; prefix
0002721: 16                                        ; f64x2.extract_lane
0002722: 01                                        ; Simd Lane literal
0002723: 1a                                        ; drop
0002724: 0b                                        ; end
000270c: 18                                        ; FIXUP func body size
; function body 216
0002725: 00                                        ; func body size (guess)
0002726: 00                                        ; local decl count
0002727: fd                                        ; prefix
0002728: 02                                        ; v128.const
0002729: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002739: 44                                        ; f64.const
000273a: 0000 0000 0000 0000                       ; f64 literal
0002742: fd                                        ; prefix
0002743: 17                                        ; f64x2.replace_lane
0002744: 01                                        ; Simd Lane literal
0002745: 1a                                        ; drop
0002746: 0b                                        ; end
0002725: 21                                        ; FIXUP func body size
; function body 217
0002747: 00                                        ; func body size (guess)
0002748: 00                                        ; local decl count
0002749: fd                                        ; prefix
000274a: 02                                        ; v128.const
000274b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000275b: fd                                        ; prefix
000275c: 02                                        ; v128.const
000275d: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000276d: fd                                        ; prefix
000276e: 18                                        ; i8x16.eq
000276f: 1a                                        ; drop
0002770: 0b                                        ; end
0002747: 29                                        ; FIXUP func body size
; function body 218
0002771: 00                                        ; func body size (guess)
0002772: 00                                        ; local decl count
0002773: fd                                        ; prefix
0002774: 02                                        ; v128.const
0002775: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002785: fd                                        ; prefix
0002786: 02                                        ; v128.const
0002787: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002797: fd                                        ; prefix
0002798: 19                                        ; i8x16.ne
0002799: 1a                                        ; drop
000279a: 0b                                        ; end
0002771: 29                                        ; FIXUP func body size
; function body 219
000279b: 00                                        ; func body size (guess)
000279c: 00                                        ; local decl count
000279d: fd                                        ; prefix
000279e: 02                                        ; v128.const
000279f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00027af: fd                                        ; prefix
00027b0: 02                                        ; v128.const
00027b1: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00027c1: fd                                        ; prefix
00027c2: 1a                                        ; i8x16.lt_s
00027c3: 1a                                        ; drop
00027c4: 0b                                        ; end
000279b: 29                                        ; FIXUP func body size
; function body 220
00027c5: 00                                        ; func body size (guess)
00027c6: 00                                        ; local decl count
00027c7: fd                                        ; prefix
00027c8: 02                                        ; v128.const
00027c9: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00027d9: fd                                        ; prefix
00027da: 02                                        ; v128.const
00027db: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00027eb: fd                                        ; prefix
00027ec: 1b                                        ; i8x16.lt_u
00027ed: 1a                                        ; drop
00027ee: 0b                                        ; end
00027c5: 29                                        ; FIXUP func body size
; function body 221
00027ef: 00                                        ; func body size (guess)
00027f0: 00                                        ; local decl count
00027f1: fd                                        ; prefix
00027f2: 02                                        ; v128.const
00027f3: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002803: fd                                        ; prefix
0002804: 02                                        ; v128.const
0002805: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002815: fd                                        ; prefix
0002816: 1c                                        ; i8x16.gt_s
0002817: 1a                                        ; drop
0002818: 0b                                        ; end
00027ef: 29                                        ; FIXUP func body size
; function body 222
0002819: 00                                        ; func body size (guess)
000281a: 00                                        ; local decl count
000281b: fd                                        ; prefix
000281c: 02                                        ; v128.const
000281d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000282d: fd                                        ; prefix
000282e: 02                                        ; v128.const
000282f: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000283f: fd                                        ; prefix
0002840: 1d                                        ; i8x16.gt_u
0002841: 1a                                        ; drop
0002842: 0b                                        ; end
0002819: 29                                        ; FIXUP func body size
; function body 223
0002843: 00                                        ; func body size (guess)
0002844: 00                                        ; local decl count
0002845: fd                                        ; prefix
0002846: 02                                        ; v128.const
0002847: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002857: fd                                        ; prefix
0002858: 02                                        ; v128.const
0002859: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002869: fd                                        ; prefix
000286a: 1e                                        ; i8x16.le_s
000286b: 1a                                        ; drop
000286c: 0b                                        ; end
0002843: 29                                        ; FIXUP func body size
; function body 224
000286d: 00                                        ; func body size (guess)
000286e: 00                                        ; local decl count
000286f: fd                                        ; prefix
0002870: 02                                        ; v128.const
0002871: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002881: fd                                        ; prefix
0002882: 02                                        ; v128.const
0002883: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002893: fd                                        ; prefix
0002894: 1f                                        ; i8x16.le_u
0002895: 1a                                        ; drop
0002896: 0b                                        ; end
000286d: 29                                        ; FIXUP func body size
; function body 225
0002897: 00                                        ; func body size (guess)
0002898: 00                                        ; local decl count
0002899: fd                                        ; prefix
000289a: 02                                        ; v128.const
000289b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00028ab: fd                                        ; prefix
00028ac: 02                                        ; v128.const
00028ad: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00028bd: fd                                        ; prefix
00028be: 20                                        ; i8x16.ge_s
00028bf: 1a                                        ; drop
00028c0: 0b                                        ; end
0002897: 29                                        ; FIXUP func body size
; function body 226
00028c1: 00                                        ; func body size (guess)
00028c2: 00                                        ; local decl count
00028c3: fd                                        ; prefix
00028c4: 02                                        ; v128.const
00028c5: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00028d5: fd                                        ; prefix
00028d6: 02                                        ; v128.const
00028d7: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00028e7: fd                                        ; prefix
00028e8: 21                                        ; i8x16.ge_u
00028e9: 1a                                        ; drop
00028ea: 0b                                        ; end
00028c1: 29                                        ; FIXUP func body size
; function body 227
00028eb: 00                                        ; func body size (guess)
00028ec: 00                                        ; local decl count
00028ed: fd                                        ; prefix
00028ee: 02                                        ; v128.const
00028ef: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00028ff: fd                                        ; prefix
0002900: 02                                        ; v128.const
0002901: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002911: fd                                        ; prefix
0002912: 22                                        ; i16x8.eq
0002913: 1a                                        ; drop
0002914: 0b                                        ; end
00028eb: 29                                        ; FIXUP func body size
; function body 228
0002915: 00                                        ; func body size (guess)
0002916: 00                                        ; local decl count
0002917: fd                                        ; prefix
0002918: 02                                        ; v128.const
0002919: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002929: fd                                        ; prefix
000292a: 02                                        ; v128.const
000292b: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000293b: fd                                        ; prefix
000293c: 23                                        ; i16x8.ne
000293d: 1a                                        ; drop
000293e: 0b                                        ; end
0002915: 29                                        ; FIXUP func body size
; function body 229
000293f: 00                                        ; func body size (guess)
0002940: 00                                        ; local decl count
0002941: fd                                        ; prefix
0002942: 02                                        ; v128.const
0002943: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002953: fd                                        ; prefix
0002954: 02                                        ; v128.const
0002955: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002965: fd                                        ; prefix
0002966: 24                                        ; i16x8.lt_s
0002967: 1a                                        ; drop
0002968: 0b                                        ; end
000293f: 29                                        ; FIXUP func body size
; function body 230
0002969: 00                                        ; func body size (guess)
000296a: 00                                        ; local decl count
000296b: fd                                        ; prefix
000296c: 02                                        ; v128.const
000296d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000297d: fd                                        ; prefix
000297e: 02                                        ; v128.const
000297f: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000298f: fd                                        ; prefix
0002990: 25                                        ; i16x8.lt_u
0002991: 1a                                        ; drop
0002992: 0b                                        ; end
0002969: 29                                        ; FIXUP func body size
; function body 231
0002993: 00                                        ; func body size (guess)
0002994: 00                                        ; local decl count
0002995: fd                                        ; prefix
0002996: 02                                        ; v128.const
0002997: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00029a7: fd                                        ; prefix
00029a8: 02                                        ; v128.const
00029a9: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00029b9: fd                                        ; prefix
00029ba: 26                                        ; i16x8.gt_s
00029bb: 1a                                        ; drop
00029bc: 0b                                        ; end
0002993: 29                                        ; FIXUP func body size
; function body 232
00029bd: 00                                        ; func body size (guess)
00029be: 00                                        ; local decl count
00029bf: fd                                        ; prefix
00029c0: 02                                        ; v128.const
00029c1: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00029d1: fd                                        ; prefix
00029d2: 02                                        ; v128.const
00029d3: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00029e3: fd                                        ; prefix
00029e4: 27                                        ; i16x8.gt_u
00029e5: 1a                                        ; drop
00029e6: 0b                                        ; end
00029bd: 29                                        ; FIXUP func body size
; function body 233
00029e7: 00                                        ; func body size (guess)
00029e8: 00                                        ; local decl count
00029e9: fd                                        ; prefix
00029ea: 02                                        ; v128.const
00029eb: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00029fb: fd                                        ; prefix
00029fc: 02                                        ; v128.const
00029fd: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002a0d: fd                                        ; prefix
0002a0e: 28                                        ; i16x8.le_s
0002a0f: 1a                                        ; drop
0002a10: 0b                                        ; end
00029e7: 29                                        ; FIXUP func body size
; function body 234
0002a11: 00                                        ; func body size (guess)
0002a12: 00                                        ; local decl count
0002a13: fd                                        ; prefix
0002a14: 02                                        ; v128.const
0002a15: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002a25: fd                                        ; prefix
0002a26: 02                                        ; v128.const
0002a27: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002a37: fd                                        ; prefix
0002a38: 29                                        ; i16x8.le_u
0002a39: 1a                                        ; drop
0002a3a: 0b                                        ; end
0002a11: 29                                        ; FIXUP func body size
; function body 235
0002a3b: 00                                        ; func body size (guess)
0002a3c: 00                                        ; local decl count
0002a3d: fd                                        ; prefix
0002a3e: 02                                        ; v128.const
0002a3f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002a4f: fd                                        ; prefix
0002a50: 02                                        ; v128.const
0002a51: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002a61: fd                                        ; prefix
0002a62: 2a                                        ; i16x8.ge_s
0002a63: 1a                                        ; drop
0002a64: 0b                                        ; end
0002a3b: 29                                        ; FIXUP func body size
; function body 236
0002a65: 00                                        ; func body size (guess)
0002a66: 00                                        ; local decl count
0002a67: fd                                        ; prefix
0002a68: 02                                        ; v128.const
0002a69: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002a79: fd                                        ; prefix
0002a7a: 02                                        ; v128.const
0002a7b: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002a8b: fd                                        ; prefix
0002a8c: 2b                                        ; i16x8.ge_u
0002a8d: 1a                                        ; drop
0002a8e: 0b                                        ; end
0002a65: 29                                        ; FIXUP func body size
; function body 237
0002a8f: 00                                        ; func body size (guess)
0002a90: 00                                        ; local decl count
0002a91: fd                                        ; prefix
0002a92: 02                                        ; v128.const
0002a93: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002aa3: fd                                        ; prefix
0002aa4: 02                                        ; v128.const
0002aa5: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002ab5: fd                                        ; prefix
0002ab6: 2c                                        ; i32x4.eq
0002ab7: 1a                                        ; drop
0002ab8: 0b                                        ; end
0002a8f: 29                                        ; FIXUP func body size
; function body 238
0002ab9: 00                                        ; func body size (guess)
0002aba: 00                                        ; local decl count
0002abb: fd                                        ; prefix
0002abc: 02                                        ; v128.const
0002abd: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002acd: fd                                        ; prefix
0002ace: 02                                        ; v128.const
0002acf: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002adf: fd                                        ; prefix
0002ae0: 2d                                        ; i32x4.ne
0002ae1: 1a                                        ; drop
0002ae2: 0b                                        ; end
0002ab9: 29                                        ; FIXUP func body size
; function body 239
0002ae3: 00                                        ; func body size (guess)
0002ae4: 00                                        ; local decl count
0002ae5: fd                                        ; prefix
0002ae6: 02                                        ; v128.const
0002ae7: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002af7: fd                                        ; prefix
0002af8: 02                                        ; v128.const
0002af9: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002b09: fd                                        ; prefix
0002b0a: 2e                                        ; i32x4.lt_s
0002b0b: 1a                                        ; drop
0002b0c: 0b                                        ; end
0002ae3: 29                                        ; FIXUP func body size
; function body 240
0002b0d: 00                                        ; func body size (guess)
0002b0e: 00                                        ; local decl count
0002b0f: fd                                        ; prefix
0002b10: 02                                        ; v128.const
0002b11: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002b21: fd                                        ; prefix
0002b22: 02                                        ; v128.const
0002b23: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002b33: fd                                        ; prefix
0002b34: 2f                                        ; i32x4.lt_u
0002b35: 1a                                        ; drop
0002b36: 0b                                        ; end
0002b0d: 29                                        ; FIXUP func body size
; function body 241
0002b37: 00                                        ; func body size (guess)
0002b38: 00                                        ; local decl count
0002b39: fd                                        ; prefix
0002b3a: 02                                        ; v128.const
0002b3b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002b4b: fd                                        ; prefix
0002b4c: 02                                        ; v128.const
0002b4d: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002b5d: fd                                        ; prefix
0002b5e: 30                                        ; i32x4.gt_s
0002b5f: 1a                                        ; drop
0002b60: 0b                                        ; end
0002b37: 29                                        ; FIXUP func body size
; function body 242
0002b61: 00                                        ; func body size (guess)
0002b62: 00                                        ; local decl count
0002b63: fd                                        ; prefix
0002b64: 02                                        ; v128.const
0002b65: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002b75: fd                                        ; prefix
0002b76: 02                                        ; v128.const
0002b77: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002b87: fd                                        ; prefix
0002b88: 31                                        ; i32x4.gt_u
0002b89: 1a                                        ; drop
0002b8a: 0b                                        ; end
0002b61: 29                                        ; FIXUP func body size
; function body 243
0002b8b: 00                                        ; func body size (guess)
0002b8c: 00                                        ; local decl count
0002b8d: fd                                        ; prefix
0002b8e: 02                                        ; v128.const
0002b8f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002b9f: fd                                        ; prefix
0002ba0: 02                                        ; v128.const
0002ba1: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002bb1: fd                                        ; prefix
0002bb2: 32                                        ; i32x4.le_s
0002bb3: 1a                                        ; drop
0002bb4: 0b                                        ; end
0002b8b: 29                                        ; FIXUP func body size
; function body 244
0002bb5: 00                                        ; func body size (guess)
0002bb6: 00                                        ; local decl count
0002bb7: fd                                        ; prefix
0002bb8: 02                                        ; v128.const
0002bb9: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002bc9: fd                                        ; prefix
0002bca: 02                                        ; v128.const
0002bcb: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002bdb: fd                                        ; prefix
0002bdc: 33                                        ; i32x4.le_u
0002bdd: 1a                                        ; drop
0002bde: 0b                                        ; end
0002bb5: 29                                        ; FIXUP func body size
; function body 245
0002bdf: 00                                        ; func body size (guess)
0002be0: 00                                        ; local decl count
0002be1: fd                                        ; prefix
0002be2: 02                                        ; v128.const
0002be3: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002bf3: fd                                        ; prefix
0002bf4: 02                                        ; v128.const
0002bf5: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002c05: fd                                        ; prefix
0002c06: 34                                        ; i32x4.ge_s
0002c07: 1a                                        ; drop
0002c08: 0b                                        ; end
0002bdf: 29                                        ; FIXUP func body size
; function body 246
0002c09: 00                                        ; func body size (guess)
0002c0a: 00                                        ; local decl count
0002c0b: fd                                        ; prefix
0002c0c: 02                                        ; v128.const
0002c0d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002c1d: fd                                        ; prefix
0002c1e: 02                                        ; v128.const
0002c1f: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002c2f: fd                                        ; prefix
0002c30: 35                                        ; i32x4.ge_u
0002c31: 1a                                        ; drop
0002c32: 0b                                        ; end
0002c09: 29                                        ; FIXUP func body size
; function body 247
0002c33: 00                                        ; func body size (guess)
0002c34: 00                                        ; local decl count
0002c35: fd                                        ; prefix
0002c36: 02                                        ; v128.const
0002c37: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002c47: fd                                        ; prefix
0002c48: 02                                        ; v128.const
0002c49: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002c59: fd                                        ; prefix
0002c5a: 40                                        ; f32x4.eq
0002c5b: 1a                                        ; drop
0002c5c: 0b                                        ; end
0002c33: 29                                        ; FIXUP func body size
; function body 248
0002c5d: 00                                        ; func body size (guess)
0002c5e: 00                                        ; local decl count
0002c5f: fd                                        ; prefix
0002c60: 02                                        ; v128.const
0002c61: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002c71: fd                                        ; prefix
0002c72: 02                                        ; v128.const
0002c73: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002c83: fd                                        ; prefix
0002c84: 41                                        ; f32x4.ne
0002c85: 1a                                        ; drop
0002c86: 0b                                        ; end
0002c5d: 29                                        ; FIXUP func body size
; function body 249
0002c87: 00                                        ; func body size (guess)
0002c88: 00                                        ; local decl count
0002c89: fd                                        ; prefix
0002c8a: 02                                        ; v128.const
0002c8b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002c9b: fd                                        ; prefix
0002c9c: 02                                        ; v128.const
0002c9d: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002cad: fd                                        ; prefix
0002cae: 42                                        ; f32x4.lt
0002caf: 1a                                        ; drop
0002cb0: 0b                                        ; end
0002c87: 29                                        ; FIXUP func body size
; function body 250
0002cb1: 00                                        ; func body size (guess)
0002cb2: 00                                        ; local decl count
0002cb3: fd                                        ; prefix
0002cb4: 02                                        ; v128.const
0002cb5: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002cc5: fd                                        ; prefix
0002cc6: 02                                        ; v128.const
0002cc7: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002cd7: fd                                        ; prefix
0002cd8: 43                                        ; f32x4.gt
0002cd9: 1a                                        ; drop
0002cda: 0b                                        ; end
0002cb1: 29                                        ; FIXUP func body size
; function body 251
0002cdb: 00                                        ; func body size (guess)
0002cdc: 00                                        ; local decl count
0002cdd: fd                                        ; prefix
0002cde: 02                                        ; v128.const
0002cdf: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002cef: fd                                        ; prefix
0002cf0: 02                                        ; v128.const
0002cf1: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002d01: fd                                        ; prefix
0002d02: 44                                        ; f32x4.le
0002d03: 1a                                        ; drop
0002d04: 0b                                        ; end
0002cdb: 29                                        ; FIXUP func body size
; function body 252
0002d05: 00                                        ; func body size (guess)
0002d06: 00                                        ; local decl count
0002d07: fd                                        ; prefix
0002d08: 02                                        ; v128.const
0002d09: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002d19: fd                                        ; prefix
0002d1a: 02                                        ; v128.const
0002d1b: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002d2b: fd                                        ; prefix
0002d2c: 45                                        ; f32x4.ge
0002d2d: 1a                                        ; drop
0002d2e: 0b                                        ; end
0002d05: 29                                        ; FIXUP func body size
; function body 253
0002d2f: 00                                        ; func body size (guess)
0002d30: 00                                        ; local decl count
0002d31: fd                                        ; prefix
0002d32: 02                                        ; v128.const
0002d33: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002d43: fd                                        ; prefix
0002d44: 02                                        ; v128.const
0002d45: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002d55: fd                                        ; prefix
0002d56: 46                                        ; f64x2.eq
0002d57: 1a                                        ; drop
0002d58: 0b                                        ; end
0002d2f: 29                                        ; FIXUP func body size
; function body 254
0002d59: 00                                        ; func body size (guess)
0002d5a: 00                                        ; local decl count
0002d5b: fd                                        ; prefix
0002d5c: 02                                        ; v128.const
0002d5d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002d6d: fd                                        ; prefix
0002d6e: 02                                        ; v128.const
0002d6f: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002d7f: fd                                        ; prefix
0002d80: 47                                        ; f64x2.ne
0002d81: 1a                                        ; drop
0002d82: 0b                                        ; end
0002d59: 29                                        ; FIXUP func body size
; function body 255
0002d83: 00                                        ; func body size (guess)
0002d84: 00                                        ; local decl count
0002d85: fd                                        ; prefix
0002d86: 02                                        ; v128.const
0002d87: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002d97: fd                                        ; prefix
0002d98: 02                                        ; v128.const
0002d99: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002da9: fd                                        ; prefix
0002daa: 48                                        ; f64x2.lt
0002dab: 1a                                        ; drop
0002dac: 0b                                        ; end
0002d83: 29                                        ; FIXUP func body size
; function body 256
0002dad: 00                                        ; func body size (guess)
0002dae: 00                                        ; local decl count
0002daf: fd                                        ; prefix
0002db0: 02                                        ; v128.const
0002db1: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002dc1: fd                                        ; prefix
0002dc2: 02                                        ; v128.const
0002dc3: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002dd3: fd                                        ; prefix
0002dd4: 49                                        ; f64x2.gt
0002dd5: 1a                                        ; drop
0002dd6: 0b                                        ; end
0002dad: 29                                        ; FIXUP func body size
; function body 257
0002dd7: 00                                        ; func body size (guess)
0002dd8: 00                                        ; local decl count
0002dd9: fd                                        ; prefix
0002dda: 02                                        ; v128.const
0002ddb: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002deb: fd                                        ; prefix
0002dec: 02                                        ; v128.const
0002ded: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002dfd: fd                                        ; prefix
0002dfe: 4a                                        ; f64x2.le
0002dff: 1a                                        ; drop
0002e00: 0b                                        ; end
0002dd7: 29                                        ; FIXUP func body size
; function body 258
0002e01: 00                                        ; func body size (guess)
0002e02: 00                                        ; local decl count
0002e03: fd                                        ; prefix
0002e04: 02                                        ; v128.const
0002e05: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002e15: fd                                        ; prefix
0002e16: 02                                        ; v128.const
0002e17: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002e27: fd                                        ; prefix
0002e28: 4b                                        ; f64x2.ge
0002e29: 1a                                        ; drop
0002e2a: 0b                                        ; end
0002e01: 29                                        ; FIXUP func body size
; function body 259
0002e2b: 00                                        ; func body size (guess)
0002e2c: 00                                        ; local decl count
0002e2d: fd                                        ; prefix
0002e2e: 02                                        ; v128.const
0002e2f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002e3f: fd                                        ; prefix
0002e40: 4c                                        ; v128.not
0002e41: 1a                                        ; drop
0002e42: 0b                                        ; end
0002e2b: 17                                        ; FIXUP func body size
; function body 260
0002e43: 00                                        ; func body size (guess)
0002e44: 00                                        ; local decl count
0002e45: fd                                        ; prefix
0002e46: 02                                        ; v128.const
0002e47: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002e57: fd                                        ; prefix
0002e58: 02                                        ; v128.const
0002e59: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002e69: fd                                        ; prefix
0002e6a: 4d                                        ; v128.and
0002e6b: 1a                                        ; drop
0002e6c: 0b                                        ; end
0002e43: 29                                        ; FIXUP func body size
; function body 261
0002e6d: 00                                        ; func body size (guess)
0002e6e: 00                                        ; local decl count
0002e6f: fd                                        ; prefix
0002e70: 02                                        ; v128.const
0002e71: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002e81: fd                                        ; prefix
0002e82: 02                                        ; v128.const
0002e83: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002e93: fd                                        ; prefix
0002e94: 4e                                        ; v128.or
0002e95: 1a                                        ; drop
0002e96: 0b                                        ; end
0002e6d: 29                                        ; FIXUP func body size
; function body 262
0002e97: 00                                        ; func body size (guess)
0002e98: 00                                        ; local decl count
0002e99: fd                                        ; prefix
0002e9a: 02                                        ; v128.const
0002e9b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002eab: fd                                        ; prefix
0002eac: 02                                        ; v128.const
0002ead: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002ebd: fd                                        ; prefix
0002ebe: 4f                                        ; v128.xor
0002ebf: 1a                                        ; drop
0002ec0: 0b                                        ; end
0002e97: 29                                        ; FIXUP func body size
; function body 263
0002ec1: 00                                        ; func body size (guess)
0002ec2: 00                                        ; local decl count
0002ec3: fd                                        ; prefix
0002ec4: 02                                        ; v128.const
0002ec5: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002ed5: fd                                        ; prefix
0002ed6: 02                                        ; v128.const
0002ed7: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002ee7: fd                                        ; prefix
0002ee8: 02                                        ; v128.const
0002ee9: 0300 0000 0300 0000 0300 0000 0300 0000   ; v128 literal
0002ef9: fd                                        ; prefix
0002efa: 50                                        ; v128.bitselect
0002efb: 1a                                        ; drop
0002efc: 0b                                        ; end
0002ec1: 3b                                        ; FIXUP func body size
; function body 264
0002efd: 00                                        ; func body size (guess)
0002efe: 00                                        ; local decl count
0002eff: fd                                        ; prefix
0002f00: 02                                        ; v128.const
0002f01: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002f11: fd                                        ; prefix
0002f12: 51                                        ; i8x16.neg
0002f13: 1a                                        ; drop
0002f14: 0b                                        ; end
0002efd: 17                                        ; FIXUP func body size
; function body 265
0002f15: 00                                        ; func body size (guess)
0002f16: 00                                        ; local decl count
0002f17: fd                                        ; prefix
0002f18: 02                                        ; v128.const
0002f19: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002f29: fd                                        ; prefix
0002f2a: 52                                        ; i8x16.any_true
0002f2b: 1a                                        ; drop
0002f2c: 0b                                        ; end
0002f15: 17                                        ; FIXUP func body size
; function body 266
0002f2d: 00                                        ; func body size (guess)
0002f2e: 00                                        ; local decl count
0002f2f: fd                                        ; prefix
0002f30: 02                                        ; v128.const
0002f31: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002f41: fd                                        ; prefix
0002f42: 53                                        ; i8x16.all_true
0002f43: 1a                                        ; drop
0002f44: 0b                                        ; end
0002f2d: 17                                        ; FIXUP func body size
; function body 267
0002f45: 00                                        ; func body size (guess)
0002f46: 00                                        ; local decl count
0002f47: fd                                        ; prefix
0002f48: 02                                        ; v128.const
0002f49: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002f59: 41                                        ; i32.const
0002f5a: 00                                        ; i32 literal
0002f5b: fd                                        ; prefix
0002f5c: 54                                        ; i8x16.shl
0002f5d: 1a                                        ; drop
0002f5e: 0b                                        ; end
0002f45: 19                                        ; FIXUP func body size
; function body 268
0002f5f: 00                                        ; func body size (guess)
0002f60: 00                                        ; local decl count
0002f61: fd                                        ; prefix
0002f62: 02                                        ; v128.const
0002f63: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002f73: 41                                        ; i32.const
0002f74: 00                                        ; i32 literal
0002f75: fd                                        ; prefix
0002f76: 55                                        ; i8x16.shr_s
0002f77: 1a                                        ; drop
0002f78: 0b                                        ; end
0002f5f: 19                                        ; FIXUP func body size
; function body 269
0002f79: 00                                        ; func body size (guess)
0002f7a: 00                                        ; local decl count
0002f7b: fd                                        ; prefix
0002f7c: 02                                        ; v128.const
0002f7d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002f8d: 41                                        ; i32.const
0002f8e: 00                                        ; i32 literal
0002f8f: fd                                        ; prefix
0002f90: 56                                        ; i8x16.shr_u
0002f91: 1a                                        ; drop
0002f92: 0b                                        ; end
0002f79: 19                                        ; FIXUP func body size
; function body 270
0002f93: 00                                        ; func body size (guess)
0002f94: 00                                        ; local decl count
0002f95: fd                                        ; prefix
0002f96: 02                                        ; v128.const
0002f97: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002fa7: fd                                        ; prefix
0002fa8: 02                                        ; v128.const
0002fa9: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002fb9: fd                                        ; prefix
0002fba: 57                                        ; i8x16.add
0002fbb: 1a                                        ; drop
0002fbc: 0b                                        ; end
0002f93: 29                                        ; FIXUP func body size
; function body 271
0002fbd: 00                                        ; func body size (guess)
0002fbe: 00                                        ; local decl count
0002fbf: fd                                        ; prefix
0002fc0: 02                                        ; v128.const
0002fc1: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002fd1: fd                                        ; prefix
0002fd2: 02                                        ; v128.const
0002fd3: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002fe3: fd                                        ; prefix
0002fe4: 58                                        ; i8x16.add_saturate_s
0002fe5: 1a                                        ; drop
0002fe6: 0b                                        ; end
0002fbd: 29                                        ; FIXUP func body size
; function body 272
0002fe7: 00                                        ; func body size (guess)
0002fe8: 00                                        ; local decl count
0002fe9: fd                                        ; prefix
0002fea: 02                                        ; v128.const
0002feb: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002ffb: fd                                        ; prefix
0002ffc: 02                                        ; v128.const
0002ffd: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000300d: fd                                        ; prefix
000300e: 59                                        ; i8x16.add_saturate_u
000300f: 1a                                        ; drop
0003010: 0b                                        ; end
0002fe7: 29                                        ; FIXUP func body size
; function body 273
0003011: 00                                        ; func body size (guess)
0003012: 00                                        ; local decl count
0003013: fd                                        ; prefix
0003014: 02                                        ; v128.const
0003015: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003025: fd                                        ; prefix
0003026: 02                                        ; v128.const
0003027: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003037: fd                                        ; prefix
0003038: 5a                                        ; i8x16.sub
0003039: 1a                                        ; drop
000303a: 0b                                        ; end
0003011: 29                                        ; FIXUP func body size
; function body 274
000303b: 00                                        ; func body size (guess)
000303c: 00                                        ; local decl count
000303d: fd                                        ; prefix
000303e: 02                                        ; v128.const
000303f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000304f: fd                                        ; prefix
0003050: 02                                        ; v128.const
0003051: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003061: fd                                        ; prefix
0003062: 5b                                        ; i8x16.sub_saturate_s
0003063: 1a                                        ; drop
0003064: 0b                                        ; end
000303b: 29                                        ; FIXUP func body size
; function body 275
0003065: 00                                        ; func body size (guess)
0003066: 00                                        ; local decl count
0003067: fd                                        ; prefix
0003068: 02                                        ; v128.const
0003069: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003079: fd                                        ; prefix
000307a: 02                                        ; v128.const
000307b: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000308b: fd                                        ; prefix
000308c: 5c                                        ; i8x16.sub_saturate_u
000308d: 1a                                        ; drop
000308e: 0b                                        ; end
0003065: 29                                        ; FIXUP func body size
; function body 276
000308f: 00                                        ; func body size (guess)
0003090: 00                                        ; local decl count
0003091: fd                                        ; prefix
0003092: 02                                        ; v128.const
0003093: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00030a3: fd                                        ; prefix
00030a4: 02                                        ; v128.const
00030a5: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00030b5: fd                                        ; prefix
00030b6: 5e                                        ; i8x16.min_s
00030b7: 1a                                        ; drop
00030b8: 0b                                        ; end
000308f: 29                                        ; FIXUP func body size
; function body 277
00030b9: 00                                        ; func body size (guess)
00030ba: 00                                        ; local decl count
00030bb: fd                                        ; prefix
00030bc: 02                                        ; v128.const
00030bd: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00030cd: fd                                        ; prefix
00030ce: 02                                        ; v128.const
00030cf: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00030df: fd                                        ; prefix
00030e0: 5f                                        ; i8x16.min_u
00030e1: 1a                                        ; drop
00030e2: 0b                                        ; end
00030b9: 29                                        ; FIXUP func body size
; function body 278
00030e3: 00                                        ; func body size (guess)
00030e4: 00                                        ; local decl count
00030e5: fd                                        ; prefix
00030e6: 02                                        ; v128.const
00030e7: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00030f7: fd                                        ; prefix
00030f8: 02                                        ; v128.const
00030f9: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003109: fd                                        ; prefix
000310a: 60                                        ; i8x16.max_s
000310b: 1a                                        ; drop
000310c: 0b                                        ; end
00030e3: 29                                        ; FIXUP func body size
; function body 279
000310d: 00                                        ; func body size (guess)
000310e: 00                                        ; local decl count
000310f: fd                                        ; prefix
0003110: 02                                        ; v128.const
0003111: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003121: fd                                        ; prefix
0003122: 02                                        ; v128.const
0003123: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003133: fd                                        ; prefix
0003134: 61                                        ; i8x16.max_u
0003135: 1a                                        ; drop
0003136: 0b                                        ; end
000310d: 29                                        ; FIXUP func body size
; function body 280
0003137: 00                                        ; func body size (guess)
0003138: 00                                        ; local decl count
0003139: fd                                        ; prefix
000313a: 02                                        ; v128.const
000313b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000314b: fd                                        ; prefix
000314c: 62                                        ; i16x8.neg
000314d: 1a                                        ; drop
000314e: 0b                                        ; end
0003137: 17                                        ; FIXUP func body size
; function body 281
000314f: 00                                        ; func body size (guess)
0003150: 00                                        ; local decl count
0003151: fd                                        ; prefix
0003152: 02                                        ; v128.const
0003153: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003163: fd                                        ; prefix
0003164: 63                                        ; i16x8.any_true
0003165: 1a                                        ; drop
0003166: 0b                                        ; end
000314f: 17                                        ; FIXUP func body size
; function body 282
0003167: 00                                        ; func body size (guess)
0003168: 00                                        ; local decl count
0003169: fd                                        ; prefix
000316a: 02                                        ; v128.const
000316b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000317b: fd                                        ; prefix
000317c: 64                                        ; i16x8.all_true
000317d: 1a                                        ; drop
000317e: 0b                                        ; end
0003167: 17                                        ; FIXUP func body size
; function body 283
000317f: 00                                        ; func body size (guess)
0003180: 00                                        ; local decl count
0003181: fd                                        ; prefix
0003182: 02                                        ; v128.const
0003183: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003193: 41                                        ; i32.const
0003194: 00                                        ; i32 literal
0003195: fd                                        ; prefix
0003196: 65                                        ; i16x8.shl
0003197: 1a                                        ; drop
0003198: 0b                                        ; end
000317f: 19                                        ; FIXUP func body size
; function body 284
0003199: 00                                        ; func body size (guess)
000319a: 00                                        ; local decl count
000319b: fd                                        ; prefix
000319c: 02                                        ; v128.const
000319d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00031ad: 41                                        ; i32.const
00031ae: 00                                        ; i32 literal
00031af: fd                                        ; prefix
00031b0: 66                                        ; i16x8.shr_s
00031b1: 1a                                        ; drop
00031b2: 0b                                        ; end
0003199: 19                                        ; FIXUP func body size
; function body 285
00031b3: 00                                        ; func body size (guess)
00031b4: 00                                        ; local decl count
00031b5: fd                                        ; prefix
00031b6: 02                                        ; v128.const
00031b7: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00031c7: 41                                        ; i32.const
00031c8: 00                                        ; i32 literal
00031c9: fd                                        ; prefix
00031ca: 67                                        ; i16x8.shr_u
00031cb: 1a                                        ; drop
00031cc: 0b                                        ; end
00031b3: 19                                        ; FIXUP func body size
; function body 286
00031cd: 00                                        ; func body size (guess)
00031ce: 00                                        ; local decl count
00031cf: fd                                        ; prefix
00031d0: 02                                        ; v128.const
00031d1: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00031e1: fd                                        ; prefix
00031e2: 02                                        ; v128.const
00031e3: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00031f3: fd                                        ; prefix
00031f4: 68                                        ; i16x8.add
00031f5: 1a                                        ; drop
00031f6: 0b                                        ; end
00031cd: 29                                        ; FIXUP func body size
; function body 287
00031f7: 00                                        ; func body size (guess)
00031f8: 00                                        ; local decl count
00031f9: fd                                        ; prefix
00031fa: 02                                        ; v128.const
00031fb: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000320b: fd                                        ; prefix
000320c: 02                                        ; v128.const
000320d: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000321d: fd                                        ; prefix
000321e: 69                                        ; i16x8.add_saturate_s
000321f: 1a                                        ; drop
0003220: 0b                                        ; end
00031f7: 29                                        ; FIXUP func body size
; function body 288
0003221: 00                                        ; func body size (guess)
0003222: 00                                        ; local decl count
0003223: fd                                        ; prefix
0003224: 02                                        ; v128.const
0003225: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003235: fd                                        ; prefix
0003236: 02                                        ; v128.const
0003237: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003247: fd                                        ; prefix
0003248: 6a                                        ; i16x8.add_saturate_u
0003249: 1a                                        ; drop
000324a: 0b                                        ; end
0003221: 29                                        ; FIXUP func body size
; function body 289
000324b: 00                                        ; func body size (guess)
000324c: 00                                        ; local decl count
000324d: fd                                        ; prefix
000324e: 02                                        ; v128.const
000324f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000325f: fd                                        ; prefix
0003260: 02                                        ; v128.const
0003261: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003271: fd                                        ; prefix
0003272: 6b                                        ; i16x8.sub
0003273: 1a                                        ; drop
0003274: 0b                                        ; end
000324b: 29                                        ; FIXUP func body size
; function body 290
0003275: 00                                        ; func body size (guess)
0003276: 00                                        ; local decl count
0003277: fd                                        ; prefix
0003278: 02                                        ; v128.const
0003279: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003289: fd                                        ; prefix
000328a: 02                                        ; v128.const
000328b: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000329b: fd                                        ; prefix
000329c: 6c                                        ; i16x8.sub_saturate_s
000329d: 1a                                        ; drop
000329e: 0b                                        ; end
0003275: 29                                        ; FIXUP func body size
; function body 291
000329f: 00                                        ; func body size (guess)
00032a0: 00                                        ; local decl count
00032a1: fd                                        ; prefix
00032a2: 02                                        ; v128.const
00032a3: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00032b3: fd                                        ; prefix
00032b4: 02                                        ; v128.const
00032b5: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00032c5: fd                                        ; prefix
00032c6: 6d                                        ; i16x8.sub_saturate_u
00032c7: 1a                                        ; drop
00032c8: 0b                                        ; end
000329f: 29                                        ; FIXUP func body size
; function body 292
00032c9: 00                                        ; func body size (guess)
00032ca: 00                                        ; local decl count
00032cb: fd                                        ; prefix
00032cc: 02                                        ; v128.const
00032cd: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00032dd: fd                                        ; prefix
00032de: 02                                        ; v128.const
00032df: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00032ef: fd                                        ; prefix
00032f0: 6e                                        ; i16x8.mul
00032f1: 1a                                        ; drop
00032f2: 0b                                        ; end
00032c9: 29                                        ; FIXUP func body size
; function body 293
00032f3: 00                                        ; func body size (guess)
00032f4: 00                                        ; local decl count
00032f5: fd                                        ; prefix
00032f6: 02                                        ; v128.const
00032f7: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003307: fd                                        ; prefix
0003308: 02                                        ; v128.const
0003309: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003319: fd                                        ; prefix
000331a: 6f                                        ; i16x8.min_s
000331b: 1a                                        ; drop
000331c: 0b                                        ; end
00032f3: 29                                        ; FIXUP func body size
; function body 294
000331d: 00                                        ; func body size (guess)
000331e: 00                                        ; local decl count
000331f: fd                                        ; prefix
0003320: 02                                        ; v128.const
0003321: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003331: fd                                        ; prefix
0003332: 02                                        ; v128.const
0003333: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003343: fd                                        ; prefix
0003344: 70                                        ; i16x8.min_u
0003345: 1a                                        ; drop
0003346: 0b                                        ; end
000331d: 29                                        ; FIXUP func body size
; function body 295
0003347: 00                                        ; func body size (guess)
0003348: 00                                        ; local decl count
0003349: fd                                        ; prefix
000334a: 02                                        ; v128.const
000334b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000335b: fd                                        ; prefix
000335c: 02                                        ; v128.const
000335d: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000336d: fd                                        ; prefix
000336e: 71                                        ; i16x8.max_s
000336f: 1a                                        ; drop
0003370: 0b                                        ; end
0003347: 29                                        ; FIXUP func body size
; function body 296
0003371: 00                                        ; func body size (guess)
0003372: 00                                        ; local decl count
0003373: fd                                        ; prefix
0003374: 02                                        ; v128.const
0003375: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003385: fd                                        ; prefix
0003386: 02                                        ; v128.const
0003387: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003397: fd                                        ; prefix
0003398: 72                                        ; i16x8.max_u
0003399: 1a                                        ; drop
000339a: 0b                                        ; end
0003371: 29                                        ; FIXUP func body size
; function body 297
000339b: 00                                        ; func body size (guess)
000339c: 00                                        ; local decl count
000339d: fd                                        ; prefix
000339e: 02                                        ; v128.const
000339f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00033af: fd                                        ; prefix
00033b0: 73                                        ; i32x4.neg
00033b1: 1a                                        ; drop
00033b2: 0b                                        ; end
000339b: 17                                        ; FIXUP func body size
; function body 298
00033b3: 00                                        ; func body size (guess)
00033b4: 00                                        ; local decl count
00033b5: fd                                        ; prefix
00033b6: 02                                        ; v128.const
00033b7: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00033c7: fd                                        ; prefix
00033c8: 74                                        ; i32x4.any_true
00033c9: 1a                                        ; drop
00033ca: 0b                                        ; end
00033b3: 17                                        ; FIXUP func body size
; function body 299
00033cb: 00                                        ; func body size (guess)
00033cc: 00                                        ; local decl count
00033cd: fd                                        ; prefix
00033ce: 02                                        ; v128.const
00033cf: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00033df: fd                                        ; prefix
00033e0: 75                                        ; i32x4.all_true
00033e1: 1a                                        ; drop
00033e2: 0b                                        ; end
00033cb: 17                                        ; FIXUP func body size
; function body 300
00033e3: 00                                        ; func body size (guess)
00033e4: 00                                        ; local decl count
00033e5: fd                                        ; prefix
00033e6: 02                                        ; v128.const
00033e7: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00033f7: 41                                        ; i32.const
00033f8: 00                                        ; i32 literal
00033f9: fd                                        ; prefix
00033fa: 76                                        ; i32x4.shl
00033fb: 1a                                        ; drop
00033fc: 0b                                        ; end
00033e3: 19                                        ; FIXUP func body size
; function body 301
00033fd: 00                                        ; func body size (guess)
00033fe: 00                                        ; local decl count
00033ff: fd                                        ; prefix
0003400: 02                                        ; v128.const
0003401: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003411: 41                                        ; i32.const
0003412: 00                                        ; i32 literal
0003413: fd                                        ; prefix
0003414: 77                                        ; i32x4.shr_s
0003415: 1a                                        ; drop
0003416: 0b                                        ; end
00033fd: 19                                        ; FIXUP func body size
; function body 302
0003417: 00                                        ; func body size (guess)
0003418: 00                                        ; local decl count
0003419: fd                                        ; prefix
000341a: 02                                        ; v128.const
000341b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000342b: 41                                        ; i32.const
000342c: 00                                        ; i32 literal
000342d: fd                                        ; prefix
000342e: 78                                        ; i32x4.shr_u
000342f: 1a                                        ; drop
0003430: 0b                                        ; end
0003417: 19                                        ; FIXUP func body size
; function body 303
0003431: 00                                        ; func body size (guess)
0003432: 00                                        ; local decl count
0003433: fd                                        ; prefix
0003434: 02                                        ; v128.const
0003435: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003445: fd                                        ; prefix
0003446: 02                                        ; v128.const
0003447: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003457: fd                                        ; prefix
0003458: 79                                        ; i32x4.add
0003459: 1a                                        ; drop
000345a: 0b                                        ; end
0003431: 29                                        ; FIXUP func body size
; function body 304
000345b: 00                                        ; func body size (guess)
000345c: 00                                        ; local decl count
000345d: fd                                        ; prefix
000345e: 02                                        ; v128.const
000345f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000346f: fd                                        ; prefix
0003470: 02                                        ; v128.const
0003471: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003481: fd                                        ; prefix
0003482: 7c                                        ; i32x4.sub
0003483: 1a                                        ; drop
0003484: 0b                                        ; end
000345b: 29                                        ; FIXUP func body size
; function body 305
0003485: 00                                        ; func body size (guess)
0003486: 00                                        ; local decl count
0003487: fd                                        ; prefix
0003488: 02                                        ; v128.const
0003489: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003499: fd                                        ; prefix
000349a: 02                                        ; v128.const
000349b: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00034ab: fd                                        ; prefix
00034ac: 7f                                        ; i32x4.mul
00034ad: 1a                                        ; drop
00034ae: 0b                                        ; end
0003485: 29                                        ; FIXUP func body size
; function body 306
00034af: 00                                        ; func body size (guess)
00034b0: 00                                        ; local decl count
00034b1: fd                                        ; prefix
00034b2: 02                                        ; v128.const
00034b3: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00034c3: fd                                        ; prefix
00034c4: 02                                        ; v128.const
00034c5: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00034d5: fd                                        ; prefix
00034d6: 8001                                      ; i32x4.min_s
00034d8: 1a                                        ; drop
00034d9: 0b                                        ; end
00034af: 2a                                        ; FIXUP func body size
; function body 307
00034da: 00                                        ; func body size (guess)
00034db: 00                                        ; local decl count
00034dc: fd                                        ; prefix
00034dd: 02                                        ; v128.const
00034de: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00034ee: fd                                        ; prefix
00034ef: 02                                        ; v128.const
00034f0: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003500: fd                                        ; prefix
0003501: 8101                                      ; i32x4.min_u
0003503: 1a                                        ; drop
0003504: 0b                                        ; end
00034da: 2a                                        ; FIXUP func body size
; function body 308
0003505: 00                                        ; func body size (guess)
0003506: 00                                        ; local decl count
0003507: fd                                        ; prefix
0003508: 02                                        ; v128.const
0003509: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003519: fd                                        ; prefix
000351a: 02                                        ; v128.const
000351b: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000352b: fd                                        ; prefix
000352c: 8201                                      ; i32x4.max_s
000352e: 1a                                        ; drop
000352f: 0b                                        ; end
0003505: 2a                                        ; FIXUP func body size
; function body 309
0003530: 00                                        ; func body size (guess)
0003531: 00                                        ; local decl count
0003532: fd                                        ; prefix
0003533: 02                                        ; v128.const
0003534: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003544: fd                                        ; prefix
0003545: 02                                        ; v128.const
0003546: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003556: fd                                        ; prefix
0003557: 8301                                      ; i32x4.max_u
0003559: 1a                                        ; drop
000355a: 0b                                        ; end
0003530: 2a                                        ; FIXUP func body size
; function body 310
000355b: 00                                        ; func body size (guess)
000355c: 00                                        ; local decl count
000355d: fd                                        ; prefix
000355e: 02                                        ; v128.const
000355f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000356f: fd                                        ; prefix
0003570: 8401                                      ; i64x2.neg
0003572: 1a                                        ; drop
0003573: 0b                                        ; end
000355b: 18                                        ; FIXUP func body size
; function body 311
0003574: 00                                        ; func body size (guess)
0003575: 00                                        ; local decl count
0003576: fd                                        ; prefix
0003577: 02                                        ; v128.const
0003578: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003588: 41                                        ; i32.const
0003589: 00                                        ; i32 literal
000358a: fd                                        ; prefix
000358b: 8701                                      ; i64x2.shl
000358d: 1a                                        ; drop
000358e: 0b                                        ; end
0003574: 1a                                        ; FIXUP func body size
; function body 312
000358f: 00                                        ; func body size (guess)
0003590: 00                                        ; local decl count
0003591: fd                                        ; prefix
0003592: 02                                        ; v128.const
0003593: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00035a3: 41                                        ; i32.const
00035a4: 00                                        ; i32 literal
00035a5: fd                                        ; prefix
00035a6: 8801                                      ; i64x2.shr_s
00035a8: 1a                                        ; drop
00035a9: 0b                                        ; end
000358f: 1a                                        ; FIXUP func body size
; function body 313
00035aa: 00                                        ; func body size (guess)
00035ab: 00                                        ; local decl count
00035ac: fd                                        ; prefix
00035ad: 02                                        ; v128.const
00035ae: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00035be: 41                                        ; i32.const
00035bf: 00                                        ; i32 literal
00035c0: fd                                        ; prefix
00035c1: 8901                                      ; i64x2.shr_u
00035c3: 1a                                        ; drop
00035c4: 0b                                        ; end
00035aa: 1a                                        ; FIXUP func body size
; function body 314
00035c5: 00                                        ; func body size (guess)
00035c6: 00                                        ; local decl count
00035c7: fd                                        ; prefix
00035c8: 02                                        ; v128.const
00035c9: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00035d9: fd                                        ; prefix
00035da: 02                                        ; v128.const
00035db: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00035eb: fd                                        ; prefix
00035ec: 8a01                                      ; i64x2.add
00035ee: 1a                                        ; drop
00035ef: 0b                                        ; end
00035c5: 2a                                        ; FIXUP func body size
; function body 315
00035f0: 00                                        ; func body size (guess)
00035f1: 00                                        ; local decl count
00035f2: fd                                        ; prefix
00035f3: 02                                        ; v128.const
00035f4: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003604: fd                                        ; prefix
0003605: 02                                        ; v128.const
0003606: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003616: fd                                        ; prefix
0003617: 8d01                                      ; i64x2.sub
0003619: 1a                                        ; drop
000361a: 0b                                        ; end
00035f0: 2a                                        ; FIXUP func body size
; function body 316
000361b: 00                                        ; func body size (guess)
000361c: 00                                        ; local decl count
000361d: fd                                        ; prefix
000361e: 02                                        ; v128.const
000361f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000362f: fd                                        ; prefix
0003630: 02                                        ; v128.const
0003631: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003641: fd                                        ; prefix
0003642: 9001                                      ; i64x2.mul
0003644: 1a                                        ; drop
0003645: 0b                                        ; end
000361b: 2a                                        ; FIXUP func body size
; function body 317
0003646: 00                                        ; func body size (guess)
0003647: 00                                        ; local decl count
0003648: fd                                        ; prefix
0003649: 02                                        ; v128.const
000364a: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000365a: fd                                        ; prefix
000365b: 9501                                      ; f32x4.abs
000365d: 1a                                        ; drop
000365e: 0b                                        ; end
0003646: 18                                        ; FIXUP func body size
; function body 318
000365f: 00                                        ; func body size (guess)
0003660: 00                                        ; local decl count
0003661: fd                                        ; prefix
0003662: 02                                        ; v128.const
0003663: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003673: fd                                        ; prefix
0003674: 9601                                      ; f32x4.neg
0003676: 1a                                        ; drop
0003677: 0b                                        ; end
000365f: 18                                        ; FIXUP func body size
; function body 319
0003678: 00                                        ; func body size (guess)
0003679: 00                                        ; local decl count
000367a: fd                                        ; prefix
000367b: 02                                        ; v128.const
000367c: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000368c: fd                                        ; prefix
000368d: 9701                                      ; f32x4.sqrt
000368f: 1a                                        ; drop
0003690: 0b                                        ; end
0003678: 18                                        ; FIXUP func body size
; function body 320
0003691: 00                                        ; func body size (guess)
0003692: 00                                        ; local decl count
0003693: fd                                        ; prefix
0003694: 02                                        ; v128.const
0003695: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00036a5: fd                                        ; prefix
00036a6: 02                                        ; v128.const
00036a7: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00036b7: fd                                        ; prefix
00036b8: 9a01                                      ; f32x4.add
00036ba: 1a                                        ; drop
00036bb: 0b                                        ; end
0003691: 2a                                        ; FIXUP func body size
; function body 321
00036bc: 00                                        ; func body size (guess)
00036bd: 00                                        ; local decl count
00036be: fd                                        ; prefix
00036bf: 02                                        ; v128.const
00036c0: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00036d0: fd                                        ; prefix
00036d1: 02                                        ; v128.const
00036d2: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00036e2: fd                                        ; prefix
00036e3: 9b01                                      ; f32x4.sub
00036e5: 1a                                        ; drop
00036e6: 0b                                        ; end
00036bc: 2a                                        ; FIXUP func body size
; function body 322
00036e7: 00                                        ; func body size (guess)
00036e8: 00                                        ; local decl count
00036e9: fd                                        ; prefix
00036ea: 02                                        ; v128.const
00036eb: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00036fb: fd                                        ; prefix
00036fc: 02                                        ; v128.const
00036fd: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000370d: fd                                        ; prefix
000370e: 9c01                                      ; f32x4.mul
0003710: 1a                                        ; drop
0003711: 0b                                        ; end
00036e7: 2a                                        ; FIXUP func body size
; function body 323
0003712: 00                                        ; func body size (guess)
0003713: 00                                        ; local decl count
0003714: fd                                        ; prefix
0003715: 02                                        ; v128.const
0003716: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003726: fd                                        ; prefix
0003727: 02                                        ; v128.const
0003728: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003738: fd                                        ; prefix
0003739: 9d01                                      ; f32x4.div
000373b: 1a                                        ; drop
000373c: 0b                                        ; end
0003712: 2a                                        ; FIXUP func body size
; function body 324
000373d: 00                                        ; func body size (guess)
000373e: 00                                        ; local decl count
000373f: fd                                        ; prefix
0003740: 02                                        ; v128.const
0003741: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003751: fd                                        ; prefix
0003752: 02                                        ; v128.const
0003753: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003763: fd                                        ; prefix
0003764: 9e01                                      ; f32x4.min
0003766: 1a                                        ; drop
0003767: 0b                                        ; end
000373d: 2a                                        ; FIXUP func body size
; function body 325
0003768: 00                                        ; func body size (guess)
0003769: 00                                        ; local decl count
000376a: fd                                        ; prefix
000376b: 02                                        ; v128.const
000376c: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000377c: fd                                        ; prefix
000377d: 02                                        ; v128.const
000377e: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000378e: fd                                        ; prefix
000378f: 9f01                                      ; f32x4.max
0003791: 1a                                        ; drop
0003792: 0b                                        ; end
0003768: 2a                                        ; FIXUP func body size
; function body 326
0003793: 00                                        ; func body size (guess)
0003794: 00                                        ; local decl count
0003795: fd                                        ; prefix
0003796: 02                                        ; v128.const
0003797: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00037a7: fd                                        ; prefix
00037a8: a001                                      ; f64x2.abs
00037aa: 1a                                        ; drop
00037ab: 0b                                        ; end
0003793: 18                                        ; FIXUP func body size
; function body 327
00037ac: 00                                        ; func body size (guess)
00037ad: 00                                        ; local decl count
00037ae: fd                                        ; prefix
00037af: 02                                        ; v128.const
00037b0: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00037c0: fd                                        ; prefix
00037c1: a101                                      ; f64x2.neg
00037c3: 1a                                        ; drop
00037c4: 0b                                        ; end
00037ac: 18                                        ; FIXUP func body size
; function body 328
00037c5: 00                                        ; func body size (guess)
00037c6: 00                                        ; local decl count
00037c7: fd                                        ; prefix
00037c8: 02                                        ; v128.const
00037c9: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00037d9: fd                                        ; prefix
00037da: a201                                      ; f64x2.sqrt
00037dc: 1a                                        ; drop
00037dd: 0b                                        ; end
00037c5: 18                                        ; FIXUP func body size
; function body 329
00037de: 00                                        ; func body size (guess)
00037df: 00                                        ; local decl count
00037e0: fd                                        ; prefix
00037e1: 02                                        ; v128.const
00037e2: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00037f2: fd                                        ; prefix
00037f3: 02                                        ; v128.const
00037f4: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003804: fd                                        ; prefix
0003805: a501                                      ; f64x2.add
0003807: 1a                                        ; drop
0003808: 0b                                        ; end
00037de: 2a                                        ; FIXUP func body size
; function body 330
0003809: 00                                        ; func body size (guess)
000380a: 00                                        ; local decl count
000380b: fd                                        ; prefix
000380c: 02                                        ; v128.const
000380d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000381d: fd                                        ; prefix
000381e: 02                                        ; v128.const
000381f: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000382f: fd                                        ; prefix
0003830: a601                                      ; f64x2.sub
0003832: 1a                                        ; drop
0003833: 0b                                        ; end
0003809: 2a                                        ; FIXUP func body size
; function body 331
0003834: 00                                        ; func body size (guess)
0003835: 00                                        ; local decl count
0003836: fd                                        ; prefix
0003837: 02                                        ; v128.const
0003838: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003848: fd                                        ; prefix
0003849: 02                                        ; v128.const
000384a: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000385a: fd                                        ; prefix
000385b: a701                                      ; f64x2.mul
000385d: 1a                                        ; drop
000385e: 0b                                        ; end
0003834: 2a                                        ; FIXUP func body size
; function body 332
000385f: 00                                        ; func body size (guess)
0003860: 00                                        ; local decl count
0003861: fd                                        ; prefix
0003862: 02                                        ; v128.const
0003863: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003873: fd                                        ; prefix
0003874: 02                                        ; v128.const
0003875: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003885: fd                                        ; prefix
0003886: a801                                      ; f64x2.div
0003888: 1a                                        ; drop
0003889: 0b                                        ; end
000385f: 2a                                        ; FIXUP func body size
; function body 333
000388a: 00                                        ; func body size (guess)
000388b: 00                                        ; local decl count
000388c: fd                                        ; prefix
000388d: 02                                        ; v128.const
000388e: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000389e: fd                                        ; prefix
000389f: 02                                        ; v128.const
00038a0: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00038b0: fd                                        ; prefix
00038b1: a901                                      ; f64x2.min
00038b3: 1a                                        ; drop
00038b4: 0b                                        ; end
000388a: 2a                                        ; FIXUP func body size
; function body 334
00038b5: 00                                        ; func body size (guess)
00038b6: 00                                        ; local decl count
00038b7: fd                                        ; prefix
00038b8: 02                                        ; v128.const
00038b9: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00038c9: fd                                        ; prefix
00038ca: 02                                        ; v128.const
00038cb: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00038db: fd                                        ; prefix
00038dc: aa01                                      ; f64x2.max
00038de: 1a                                        ; drop
00038df: 0b                                        ; end
00038b5: 2a                                        ; FIXUP func body size
; function body 335
00038e0: 00                                        ; func body size (guess)
00038e1: 00                                        ; local decl count
00038e2: fd                                        ; prefix
00038e3: 02                                        ; v128.const
00038e4: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00038f4: fd                                        ; prefix
00038f5: ab01                                      ; i32x4.trunc_sat_f32x4_s
00038f7: 1a                                        ; drop
00038f8: 0b                                        ; end
00038e0: 18                                        ; FIXUP func body size
; function body 336
00038f9: 00                                        ; func body size (guess)
00038fa: 00                                        ; local decl count
00038fb: fd                                        ; prefix
00038fc: 02                                        ; v128.const
00038fd: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000390d: fd                                        ; prefix
000390e: ac01                                      ; i32x4.trunc_sat_f32x4_u
0003910: 1a                                        ; drop
0003911: 0b                                        ; end
00038f9: 18                                        ; FIXUP func body size
; function body 337
0003912: 00                                        ; func body size (guess)
0003913: 00                                        ; local decl count
0003914: fd                                        ; prefix
0003915: 02                                        ; v128.const
0003916: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003926: fd                                        ; prefix
0003927: af01                                      ; f32x4.convert_i32x4_s
0003929: 1a                                        ; drop
000392a: 0b                                        ; end
0003912: 18                                        ; FIXUP func body size
; function body 338
000392b: 00                                        ; func body size (guess)
000392c: 00                                        ; local decl count
000392d: fd                                        ; prefix
000392e: 02                                        ; v128.const
000392f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000393f: fd                                        ; prefix
0003940: b001                                      ; f32x4.convert_i32x4_u
0003942: 1a                                        ; drop
0003943: 0b                                        ; end
000392b: 18                                        ; FIXUP func body size
; function body 339
0003944: 00                                        ; func body size (guess)
0003945: 00                                        ; local decl count
0003946: fd                                        ; prefix
0003947: 02                                        ; v128.const
0003948: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003958: fd                                        ; prefix
0003959: 02                                        ; v128.const
000395a: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000396a: fd                                        ; prefix
000396b: c001                                      ; v8x16.swizzle
000396d: 1a                                        ; drop
000396e: 0b                                        ; end
0003944: 2a                                        ; FIXUP func body size
; function body 340
000396f: 00                                        ; func body size (guess)
0003970: 00                                        ; local decl count
0003971: fd                                        ; prefix
0003972: 02                                        ; v128.const
0003973: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003983: fd                                        ; prefix
0003984: 02                                        ; v128.const
0003985: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003995: fd                                        ; prefix
0003996: c101                                      ; v8x16.shuffle
0003998: 0101 0101 0101 0101 0101 0101 0101 0101   ; Simd Lane[16] literal
00039a8: 1a                                        ; drop
00039a9: 0b                                        ; end
000396f: 3a                                        ; FIXUP func body size
; function body 341
00039aa: 00                                        ; func body size (guess)
00039ab: 00                                        ; local decl count
00039ac: 41                                        ; i32.const
00039ad: 01                                        ; i32 literal
00039ae: fd                                        ; prefix
00039af: c201                                      ; v8x16.load_splat
00039b1: 00                                        ; alignment
00039b2: 00                                        ; load offset
00039b3: 1a                                        ; drop
00039b4: 0b                                        ; end
00039aa: 0a                                        ; FIXUP func body size
; function body 342
00039b5: 00                                        ; func body size (guess)
00039b6: 00                                        ; local decl count
00039b7: 41                                        ; i32.const
00039b8: 01                                        ; i32 literal
00039b9: fd                                        ; prefix
00039ba: c301                                      ; v16x8.load_splat
00039bc: 01                                        ; alignment
00039bd: 00                                        ; load offset
00039be: 1a                                        ; drop
00039bf: 0b                                        ; end
00039b5: 0a                                        ; FIXUP func body size
; function body 343
00039c0: 00                                        ; func body size (guess)
00039c1: 00                                        ; local decl count
00039c2: 41                                        ; i32.const
00039c3: 01                                        ; i32 literal
00039c4: fd                                        ; prefix
00039c5: c401                                      ; v32x4.load_splat
00039c7: 02                                        ; alignment
00039c8: 00                                        ; load offset
00039c9: 1a                                        ; drop
00039ca: 0b                                        ; end
00039c0: 0a                                        ; FIXUP func body size
; function body 344
00039cb: 00                                        ; func body size (guess)
00039cc: 00                                        ; local decl count
00039cd: 41                                        ; i32.const
00039ce: 01                                        ; i32 literal
00039cf: fd                                        ; prefix
00039d0: c501                                      ; v64x2.load_splat
00039d2: 03                                        ; alignment
00039d3: 00                                        ; load offset
00039d4: 1a                                        ; drop
00039d5: 0b                                        ; end
00039cb: 0a                                        ; FIXUP func body size
; function body 345
00039d6: 00                                        ; func body size (guess)
00039d7: 00                                        ; local decl count
00039d8: fd                                        ; prefix
00039d9: 02                                        ; v128.const
00039da: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00039ea: fd                                        ; prefix
00039eb: 02                                        ; v128.const
00039ec: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00039fc: fd                                        ; prefix
00039fd: c601                                      ; i8x16.narrow_i16x8_s
00039ff: 1a                                        ; drop
0003a00: 0b                                        ; end
00039d6: 2a                                        ; FIXUP func body size
; function body 346
0003a01: 00                                        ; func body size (guess)
0003a02: 00                                        ; local decl count
0003a03: fd                                        ; prefix
0003a04: 02                                        ; v128.const
0003a05: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003a15: fd                                        ; prefix
0003a16: 02                                        ; v128.const
0003a17: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003a27: fd                                        ; prefix
0003a28: c701                                      ; i8x16.narrow_i16x8_u
0003a2a: 1a                                        ; drop
0003a2b: 0b                                        ; end
0003a01: 2a                                        ; FIXUP func body size
; function body 347
0003a2c: 00                                        ; func body size (guess)
0003a2d: 00                                        ; local decl count
0003a2e: fd                                        ; prefix
0003a2f: 02                                        ; v128.const
0003a30: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003a40: fd                                        ; prefix
0003a41: 02                                        ; v128.const
0003a42: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003a52: fd                                        ; prefix
0003a53: c801                                      ; i16x8.narrow_i32x4_s
0003a55: 1a                                        ; drop
0003a56: 0b                                        ; end
0003a2c: 2a                                        ; FIXUP func body size
; function body 348
0003a57: 00                                        ; func body size (guess)
0003a58: 00                                        ; local decl count
0003a59: fd                                        ; prefix
0003a5a: 02                                        ; v128.const
0003a5b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003a6b: fd                                        ; prefix
0003a6c: 02                                        ; v128.const
0003a6d: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003a7d: fd                                        ; prefix
0003a7e: c901                                      ; i16x8.narrow_i32x4_u
0003a80: 1a                                        ; drop
0003a81: 0b                                        ; end
0003a57: 2a                                        ; FIXUP func body size
; function body 349
0003a82: 00                                        ; func body size (guess)
0003a83: 00                                        ; local decl count
0003a84: fd                                        ; prefix
0003a85: 02                                        ; v128.const
0003a86: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003a96: fd                                        ; prefix
0003a97: ca01                                      ; i16x8.widen_low_i8x16_s
0003a99: 1a                                        ; drop
0003a9a: 0b                                        ; end
0003a82: 18                                        ; FIXUP func body size
; function body 350
0003a9b: 00                                        ; func body size (guess)
0003a9c: 00                                        ; local decl count
0003a9d: fd                                        ; prefix
0003a9e: 02                                        ; v128.const
0003a9f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003aaf: fd                                        ; prefix
0003ab0: cb01                                      ; i16x8.widen_high_i8x16_s
0003ab2: 1a                                        ; drop
0003ab3: 0b                                        ; end
0003a9b: 18                                        ; FIXUP func body size
; function body 351
0003ab4: 00                                        ; func body size (guess)
0003ab5: 00                                        ; local decl count
0003ab6: fd                                        ; prefix
0003ab7: 02                                        ; v128.const
0003ab8: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003ac8: fd                                        ; prefix
0003ac9: cc01                                      ; i16x8.widen_low_i8x16_u
0003acb: 1a                                        ; drop
0003acc: 0b                                        ; end
0003ab4: 18                                        ; FIXUP func body size
; function body 352
0003acd: 00                                        ; func body size (guess)
0003ace: 00                                        ; local decl count
0003acf: fd                                        ; prefix
0003ad0: 02                                        ; v128.const
0003ad1: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003ae1: fd                                        ; prefix
0003ae2: cd01                                      ; i16x8.widen_high_i8x16_u
0003ae4: 1a                                        ; drop
0003ae5: 0b                                        ; end
0003acd: 18                                        ; FIXUP func body size
; function body 353
0003ae6: 00                                        ; func body size (guess)
0003ae7: 00                                        ; local decl count
0003ae8: fd                                        ; prefix
0003ae9: 02                                        ; v128.const
0003aea: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003afa: fd                                        ; prefix
0003afb: ce01                                      ; i32x4.widen_low_i16x8_s
0003afd: 1a                                        ; drop
0003afe: 0b                                        ; end
0003ae6: 18                                        ; FIXUP func body size
; function body 354
0003aff: 00                                        ; func body size (guess)
0003b00: 00                                        ; local decl count
0003b01: fd                                        ; prefix
0003b02: 02                                        ; v128.const
0003b03: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003b13: fd                                        ; prefix
0003b14: cf01                                      ; i32x4.widen_high_i16x8_s
0003b16: 1a                                        ; drop
0003b17: 0b                                        ; end
0003aff: 18                                        ; FIXUP func body size
; function body 355
0003b18: 00                                        ; func body size (guess)
0003b19: 00                                        ; local decl count
0003b1a: fd                                        ; prefix
0003b1b: 02                                        ; v128.const
0003b1c: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003b2c: fd                                        ; prefix
0003b2d: d001                                      ; i32x4.widen_low_i16x8_u
0003b2f: 1a                                        ; drop
0003b30: 0b                                        ; end
0003b18: 18                                        ; FIXUP func body size
; function body 356
0003b31: 00                                        ; func body size (guess)
0003b32: 00                                        ; local decl count
0003b33: fd                                        ; prefix
0003b34: 02                                        ; v128.const
0003b35: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003b45: fd                                        ; prefix
0003b46: d101                                      ; i32x4.widen_high_i16x8_u
0003b48: 1a                                        ; drop
0003b49: 0b                                        ; end
0003b31: 18                                        ; FIXUP func body size
; function body 357
0003b4a: 00                                        ; func body size (guess)
0003b4b: 00                                        ; local decl count
0003b4c: 41                                        ; i32.const
0003b4d: 00                                        ; i32 literal
0003b4e: fd                                        ; prefix
0003b4f: d201                                      ; i16x8.load8x8_s
0003b51: 03                                        ; alignment
0003b52: 00                                        ; load offset
0003b53: 1a                                        ; drop
0003b54: 0b                                        ; end
0003b4a: 0a                                        ; FIXUP func body size
; function body 358
0003b55: 00                                        ; func body size (guess)
0003b56: 00                                        ; local decl count
0003b57: 41                                        ; i32.const
0003b58: 00                                        ; i32 literal
0003b59: fd                                        ; prefix
0003b5a: d301                                      ; i16x8.load8x8_u
0003b5c: 03                                        ; alignment
0003b5d: 00                                        ; load offset
0003b5e: 1a                                        ; drop
0003b5f: 0b                                        ; end
0003b55: 0a                                        ; FIXUP func body size
; function body 359
0003b60: 00                                        ; func body size (guess)
0003b61: 00                                        ; local decl count
0003b62: 41                                        ; i32.const
0003b63: 00                                        ; i32 literal
0003b64: fd                                        ; prefix
0003b65: d401                                      ; i32x4.load16x4_s
0003b67: 03                                        ; alignment
0003b68: 00                                        ; load offset
0003b69: 1a                                        ; drop
0003b6a: 0b                                        ; end
0003b60: 0a                                        ; FIXUP func body size
; function body 360
0003b6b: 00                                        ; func body size (guess)
0003b6c: 00                                        ; local decl count
0003b6d: 41                                        ; i32.const
0003b6e: 00                                        ; i32 literal
0003b6f: fd                                        ; prefix
0003b70: d501                                      ; i32x4.load16x4_u
0003b72: 03                                        ; alignment
0003b73: 00                                        ; load offset
0003b74: 1a                                        ; drop
0003b75: 0b                                        ; end
0003b6b: 0a                                        ; FIXUP func body size
; function body 361
0003b76: 00                                        ; func body size (guess)
0003b77: 00                                        ; local decl count
0003b78: 41                                        ; i32.const
0003b79: 00                                        ; i32 literal
0003b7a: fd                                        ; prefix
0003b7b: d601                                      ; i64x2.load32x2_s
0003b7d: 03                                        ; alignment
0003b7e: 00                                        ; load offset
0003b7f: 1a                                        ; drop
0003b80: 0b                                        ; end
0003b76: 0a                                        ; FIXUP func body size
; function body 362
0003b81: 00                                        ; func body size (guess)
0003b82: 00                                        ; local decl count
0003b83: 41                                        ; i32.const
0003b84: 00                                        ; i32 literal
0003b85: fd                                        ; prefix
0003b86: d701                                      ; i64x2.load32x2_u
0003b88: 03                                        ; alignment
0003b89: 00                                        ; load offset
0003b8a: 1a                                        ; drop
0003b8b: 0b                                        ; end
0003b81: 0a                                        ; FIXUP func body size
; function body 363
0003b8c: 00                                        ; func body size (guess)
0003b8d: 00                                        ; local decl count
0003b8e: fd                                        ; prefix
0003b8f: 02                                        ; v128.const
0003b90: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003ba0: fd                                        ; prefix
0003ba1: 02                                        ; v128.const
0003ba2: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003bb2: fd                                        ; prefix
0003bb3: d801                                      ; v128.andnot
0003bb5: 1a                                        ; drop
0003bb6: 0b                                        ; end
0003b8c: 2a                                        ; FIXUP func body size
; function body 364
0003bb7: 00                                        ; func body size (guess)
0003bb8: 00                                        ; local decl count
0003bb9: fd                                        ; prefix
0003bba: 02                                        ; v128.const
0003bbb: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003bcb: fd                                        ; prefix
0003bcc: 02                                        ; v128.const
0003bcd: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003bdd: fd                                        ; prefix
0003bde: d901                                      ; i8x16.avgr_u
0003be0: 1a                                        ; drop
0003be1: 0b                                        ; end
0003bb7: 2a                                        ; FIXUP func body size
; function body 365
0003be2: 00                                        ; func body size (guess)
0003be3: 00                                        ; local decl count
0003be4: fd                                        ; prefix
0003be5: 02                                        ; v128.const
0003be6: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003bf6: fd                                        ; prefix
0003bf7: 02                                        ; v128.const
0003bf8: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003c08: fd                                        ; prefix
0003c09: da01                                      ; i16x8.avgr_u
0003c0b: 1a                                        ; drop
0003c0c: 0b                                        ; end
0003be2: 2a                                        ; FIXUP func body size
; function body 366
0003c0d: 00                                        ; func body size (guess)
0003c0e: 00                                        ; local decl count
0003c0f: 41                                        ; i32.const
0003c10: 01                                        ; i32 literal
0003c11: 41                                        ; i32.const
0003c12: 02                                        ; i32 literal
0003c13: fe                                        ; prefix
0003c14: 00                                        ; atomic.notify
0003c15: 02                                        ; alignment
0003c16: 03                                        ; memory offset
0003c17: 1a                                        ; drop
0003c18: 0b                                        ; end
0003c0d: 0b                                        ; FIXUP func body size
; function body 367
0003c19: 00                                        ; func body size (guess)
0003c1a: 00                                        ; local decl count
0003c1b: 41                                        ; i32.const
0003c1c: 01                                        ; i32 literal
0003c1d: 41                                        ; i32.const
0003c1e: 02                                        ; i32 literal
0003c1f: 42                                        ; i64.const
0003c20: 03                                        ; i64 literal
0003c21: fe                                        ; prefix
0003c22: 01                                        ; i32.atomic.wait
0003c23: 02                                        ; alignment
0003c24: 03                                        ; memory offset
0003c25: 1a                                        ; drop
0003c26: 0b                                        ; end
0003c19: 0d                                        ; FIXUP func body size
; function body 368
0003c27: 00                                        ; func body size (guess)
0003c28: 00                                        ; local decl count
0003c29: 41                                        ; i32.const
0003c2a: 01                                        ; i32 literal
0003c2b: 42                                        ; i64.const
0003c2c: 02                                        ; i64 literal
0003c2d: 42                                        ; i64.const
0003c2e: 03                                        ; i64 literal
0003c2f: fe                                        ; prefix
0003c30: 02                                        ; i64.atomic.wait
0003c31: 03                                        ; alignment
0003c32: 03                                        ; memory offset
0003c33: 1a                                        ; drop
0003c34: 0b                                        ; end
0003c27: 0d                                        ; FIXUP func body size
; function body 369
0003c35: 00                                        ; func body size (guess)
0003c36: 00                                        ; local decl count
0003c37: 41                                        ; i32.const
0003c38: 01                                        ; i32 literal
0003c39: fe                                        ; prefix
0003c3a: 10                                        ; i32.atomic.load
0003c3b: 02                                        ; alignment
0003c3c: 03                                        ; memory offset
0003c3d: 1a                                        ; drop
0003c3e: 0b                                        ; end
0003c35: 09                                        ; FIXUP func body size
; function body 370
0003c3f: 00                                        ; func body size (guess)
0003c40: 00                                        ; local decl count
0003c41: 41                                        ; i32.const
0003c42: 01                                        ; i32 literal
0003c43: fe                                        ; prefix
0003c44: 11                                        ; i64.atomic.load
0003c45: 03                                        ; alignment
0003c46: 07                                        ; memory offset
0003c47: 1a                                        ; drop
0003c48: 0b                                        ; end
0003c3f: 09                                        ; FIXUP func body size
; function body 371
0003c49: 00                                        ; func body size (guess)
0003c4a: 00                                        ; local decl count
0003c4b: 41                                        ; i32.const
0003c4c: 01                                        ; i32 literal
0003c4d: fe                                        ; prefix
0003c4e: 12                                        ; i32.atomic.load8_u
0003c4f: 00                                        ; alignment
0003c50: 03                                        ; memory offset
0003c51: 1a                                        ; drop
0003c52: 0b                                        ; end
0003c49: 09                                        ; FIXUP func body size
; function body 372
0003c53: 00                                        ; func body size (guess)
0003c54: 00                                        ; local decl count
0003c55: 41                                        ; i32.const
0003c56: 01                                        ; i32 literal
0003c57: fe                                        ; prefix
0003c58: 13                                        ; i32.atomic.load16_u
0003c59: 01                                        ; alignment
0003c5a: 03                                        ; memory offset
0003c5b: 1a                                        ; drop
0003c5c: 0b                                        ; end
0003c53: 09                                        ; FIXUP func body size
; function body 373
0003c5d: 00                                        ; func body size (guess)
0003c5e: 00                                        ; local decl count
0003c5f: 41                                        ; i32.const
0003c60: 01                                        ; i32 literal
0003c61: fe                                        ; prefix
0003c62: 14                                        ; i64.atomic.load8_u
0003c63: 00                                        ; alignment
0003c64: 03                                        ; memory offset
0003c65: 1a                                        ; drop
0003c66: 0b                                        ; end
0003c5d: 09                                        ; FIXUP func body size
; function body 374
0003c67: 00                                        ; func body size (guess)
0003c68: 00                                        ; local decl count
0003c69: 41                                        ; i32.const
0003c6a: 01                                        ; i32 literal
0003c6b: fe                                        ; prefix
0003c6c: 15                                        ; i64.atomic.load16_u
0003c6d: 01                                        ; alignment
0003c6e: 03                                        ; memory offset
0003c6f: 1a                                        ; drop
0003c70: 0b                                        ; end
0003c67: 09                                        ; FIXUP func body size
; function body 375
0003c71: 00                                        ; func body size (guess)
0003c72: 00                                        ; local decl count
0003c73: 41                                        ; i32.const
0003c74: 01                                        ; i32 literal
0003c75: fe                                        ; prefix
0003c76: 16                                        ; i64.atomic.load32_u
0003c77: 02                                        ; alignment
0003c78: 03                                        ; memory offset
0003c79: 1a                                        ; drop
0003c7a: 0b                                        ; end
0003c71: 09                                        ; FIXUP func body size
; function body 376
0003c7b: 00                                        ; func body size (guess)
0003c7c: 00                                        ; local decl count
0003c7d: 41                                        ; i32.const
0003c7e: 01                                        ; i32 literal
0003c7f: 41                                        ; i32.const
0003c80: 02                                        ; i32 literal
0003c81: fe                                        ; prefix
0003c82: 17                                        ; i32.atomic.store
0003c83: 02                                        ; alignment
0003c84: 03                                        ; memory offset
0003c85: 0b                                        ; end
0003c7b: 0a                                        ; FIXUP func body size
; function body 377
0003c86: 00                                        ; func body size (guess)
0003c87: 00                                        ; local decl count
0003c88: 41                                        ; i32.const
0003c89: 01                                        ; i32 literal
0003c8a: 42                                        ; i64.const
0003c8b: 02                                        ; i64 literal
0003c8c: fe                                        ; prefix
0003c8d: 18                                        ; i64.atomic.store
0003c8e: 03                                        ; alignment
0003c8f: 07                                        ; memory offset
0003c90: 0b                                        ; end
0003c86: 0a                                        ; FIXUP func body size
; function body 378
0003c91: 00                                        ; func body size (guess)
0003c92: 00                                        ; local decl count
0003c93: 41                                        ; i32.const
0003c94: 01                                        ; i32 literal
0003c95: 41                                        ; i32.const
0003c96: 02                                        ; i32 literal
0003c97: fe                                        ; prefix
0003c98: 19                                        ; i32.atomic.store8
0003c99: 00                                        ; alignment
0003c9a: 03                                        ; memory offset
0003c9b: 0b                                        ; end
0003c91: 0a                                        ; FIXUP func body size
; function body 379
0003c9c: 00                                        ; func body size (guess)
0003c9d: 00                                        ; local decl count
0003c9e: 41                                        ; i32.const
0003c9f: 01                                        ; i32 literal
0003ca0: 41                                        ; i32.const
0003ca1: 02                                        ; i32 literal
0003ca2: fe                                        ; prefix
0003ca3: 1a                                        ; i32.atomic.store16
0003ca4: 01                                        ; alignment
0003ca5: 03                                        ; memory offset
0003ca6: 0b                                        ; end
0003c9c: 0a                                        ; FIXUP func body size
; function body 380
0003ca7: 00                                        ; func body size (guess)
0003ca8: 00                                        ; local decl count
0003ca9: 41                                        ; i32.const
0003caa: 01                                        ; i32 literal
0003cab: 42                                        ; i64.const
0003cac: 02                                        ; i64 literal
0003cad: fe                                        ; prefix
0003cae: 1b                                        ; i64.atomic.store8
0003caf: 00                                        ; alignment
0003cb0: 03                                        ; memory offset
0003cb1: 0b                                        ; end
0003ca7: 0a                                        ; FIXUP func body size
; function body 381
0003cb2: 00                                        ; func body size (guess)
0003cb3: 00                                        ; local decl count
0003cb4: 41                                        ; i32.const
0003cb5: 01                                        ; i32 literal
0003cb6: 42                                        ; i64.const
0003cb7: 02                                        ; i64 literal
0003cb8: fe                                        ; prefix
0003cb9: 1c                                        ; i64.atomic.store16
0003cba: 01                                        ; alignment
0003cbb: 03                                        ; memory offset
0003cbc: 0b                                        ; end
0003cb2: 0a                                        ; FIXUP func body size
; function body 382
0003cbd: 00                                        ; func body size (guess)
0003cbe: 00                                        ; local decl count
0003cbf: 41                                        ; i32.const
0003cc0: 01                                        ; i32 literal
0003cc1: 42                                        ; i64.const
0003cc2: 02                                        ; i64 literal
0003cc3: fe                                        ; prefix
0003cc4: 1d                                        ; i64.atomic.store32
0003cc5: 02                                        ; alignment
0003cc6: 03                                        ; memory offset
0003cc7: 0b                                        ; end
0003cbd: 0a                                        ; FIXUP func body size
; function body 383
0003cc8: 00                                        ; func body size (guess)
0003cc9: 00                                        ; local decl count
0003cca: 41                                        ; i32.const
0003ccb: 01                                        ; i32 literal
0003ccc: 41                                        ; i32.const
0003ccd: 02                                        ; i32 literal
0003cce: fe                                        ; prefix
0003ccf: 1e                                        ; i32.atomic.rmw.add
0003cd0: 02                                        ; alignment
0003cd1: 03                                        ; memory offset
0003cd2: 1a                                        ; drop
0003cd3: 0b                                        ; end
0003cc8: 0b                                        ; FIXUP func body size
; function body 384
0003cd4: 00                                        ; func body size (guess)
0003cd5: 00                                        ; local decl count
0003cd6: 41                                        ; i32.const
0003cd7: 01                                        ; i32 literal
0003cd8: 42                                        ; i64.const
0003cd9: 02                                        ; i64 literal
0003cda: fe                                        ; prefix
0003cdb: 1f                                        ; i64.atomic.rmw.add
0003cdc: 03                                        ; alignment
0003cdd: 07                                        ; memory offset
0003cde: 1a                                        ; drop
0003cdf: 0b                                        ; end
0003cd4: 0b                                        ; FIXUP func body size
; function body 385
0003ce0: 00                                        ; func body size (guess)
0003ce1: 00                                        ; local decl count
0003ce2: 41                                        ; i32.const
0003ce3: 01                                        ; i32 literal
0003ce4: 41                                        ; i32.const
0003ce5: 02                                        ; i32 literal
0003ce6: fe                                        ; prefix
0003ce7: 20                                        ; i32.atomic.rmw8.add_u
0003ce8: 00                                        ; alignment
0003ce9: 03                                        ; memory offset
0003cea: 1a                                        ; drop
0003ceb: 0b                                        ; end
0003ce0: 0b                                        ; FIXUP func body size
; function body 386
0003cec: 00                                        ; func body size (guess)
0003ced: 00                                        ; local decl count
0003cee: 41                                        ; i32.const
0003cef: 01                                        ; i32 literal
0003cf0: 41                                        ; i32.const
0003cf1: 02                                        ; i32 literal
0003cf2: fe                                        ; prefix
0003cf3: 21                                        ; i32.atomic.rmw16.add_u
0003cf4: 01                                        ; alignment
0003cf5: 03                                        ; memory offset
0003cf6: 1a                                        ; drop
0003cf7: 0b                                        ; end
0003cec: 0b                                        ; FIXUP func body size
; function body 387
0003cf8: 00                                        ; func body size (guess)
0003cf9: 00                                        ; local decl count
0003cfa: 41                                        ; i32.const
0003cfb: 01                                        ; i32 literal
0003cfc: 42                                        ; i64.const
0003cfd: 02                                        ; i64 literal
0003cfe: fe                                        ; prefix
0003cff: 22                                        ; i64.atomic.rmw8.add_u
0003d00: 00                                        ; alignment
0003d01: 03                                        ; memory offset
0003d02: 1a                                        ; drop
0003d03: 0b                                        ; end
0003cf8: 0b                                        ; FIXUP func body size
; function body 388
0003d04: 00                                        ; func body size (guess)
0003d05: 00                                        ; local decl count
0003d06: 41                                        ; i32.const
0003d07: 01                                        ; i32 literal
0003d08: 42                                        ; i64.const
0003d09: 02                                        ; i64 literal
0003d0a: fe                                        ; prefix
0003d0b: 23                                        ; i64.atomic.rmw16.add_u
0003d0c: 01                                        ; alignment
0003d0d: 03                                        ; memory offset
0003d0e: 1a                                        ; drop
0003d0f: 0b                                        ; end
0003d04: 0b                                        ; FIXUP func body size
; function body 389
0003d10: 00                                        ; func body size (guess)
0003d11: 00                                        ; local decl count
0003d12: 41                                        ; i32.const
0003d13: 01                                        ; i32 literal
0003d14: 42                                        ; i64.const
0003d15: 02                                        ; i64 literal
0003d16: fe                                        ; prefix
0003d17: 24                                        ; i64.atomic.rmw32.add_u
0003d18: 02                                        ; alignment
0003d19: 03                                        ; memory offset
0003d1a: 1a                                        ; drop
0003d1b: 0b                                        ; end
0003d10: 0b                                        ; FIXUP func body size
; function body 390
0003d1c: 00                                        ; func body size (guess)
0003d1d: 00                                        ; local decl count
0003d1e: 41                                        ; i32.const
0003d1f: 01                                        ; i32 literal
0003d20: 41                                        ; i32.const
0003d21: 02                                        ; i32 literal
0003d22: fe                                        ; prefix
0003d23: 25                                        ; i32.atomic.rmw.sub
0003d24: 02                                        ; alignment
0003d25: 03                                        ; memory offset
0003d26: 1a                                        ; drop
0003d27: 0b                                        ; end
0003d1c: 0b                                        ; FIXUP func body size
; function body 391
0003d28: 00                                        ; func body size (guess)
0003d29: 00                                        ; local decl count
0003d2a: 41                                        ; i32.const
0003d2b: 01                                        ; i32 literal
0003d2c: 42                                        ; i64.const
0003d2d: 02                                        ; i64 literal
0003d2e: fe                                        ; prefix
0003d2f: 26                                        ; i64.atomic.rmw.sub
0003d30: 03                                        ; alignment
0003d31: 07                                        ; memory offset
0003d32: 1a                                        ; drop
0003d33: 0b                                        ; end
0003d28: 0b                                        ; FIXUP func body size
; function body 392
0003d34: 00                                        ; func body size (guess)
0003d35: 00                                        ; local decl count
0003d36: 41                                        ; i32.const
0003d37: 01                                        ; i32 literal
0003d38: 41                                        ; i32.const
0003d39: 02                                        ; i32 literal
0003d3a: fe                                        ; prefix
0003d3b: 27                                        ; i32.atomic.rmw8.sub_u
0003d3c: 00                                        ; alignment
0003d3d: 03                                        ; memory offset
0003d3e: 1a                                        ; drop
0003d3f: 0b                                        ; end
0003d34: 0b                                        ; FIXUP func body size
; function body 393
0003d40: 00                                        ; func body size (guess)
0003d41: 00                                        ; local decl count
0003d42: 41                                        ; i32.const
0003d43: 01                                        ; i32 literal
0003d44: 41                                        ; i32.const
0003d45: 02                                        ; i32 literal
0003d46: fe                                        ; prefix
0003d47: 28                                        ; i32.atomic.rmw16.sub_u
0003d48: 01                                        ; alignment
0003d49: 03                                        ; memory offset
0003d4a: 1a                                        ; drop
0003d4b: 0b                                        ; end
0003d40: 0b                                        ; FIXUP func body size
; function body 394
0003d4c: 00                                        ; func body size (guess)
0003d4d: 00                                        ; local decl count
0003d4e: 41                                        ; i32.const
0003d4f: 01                                        ; i32 literal
0003d50: 42                                        ; i64.const
0003d51: 02                                        ; i64 literal
0003d52: fe                                        ; prefix
0003d53: 29                                        ; i64.atomic.rmw8.sub_u
0003d54: 00                                        ; alignment
0003d55: 03                                        ; memory offset
0003d56: 1a                                        ; drop
0003d57: 0b                                        ; end
0003d4c: 0b                                        ; FIXUP func body size
; function body 395
0003d58: 00                                        ; func body size (guess)
0003d59: 00                                        ; local decl count
0003d5a: 41                                        ; i32.const
0003d5b: 01                                        ; i32 literal
0003d5c: 42                                        ; i64.const
0003d5d: 02                                        ; i64 literal
0003d5e: fe                                        ; prefix
0003d5f: 2a                                        ; i64.atomic.rmw16.sub_u
0003d60: 01                                        ; alignment
0003d61: 03                                        ; memory offset
0003d62: 1a                                        ; drop
0003d63: 0b                                        ; end
0003d58: 0b                                        ; FIXUP func body size
; function body 396
0003d64: 00                                        ; func body size (guess)
0003d65: 00                                        ; local decl count
0003d66: 41                                        ; i32.const
0003d67: 01                                        ; i32 literal
0003d68: 42                                        ; i64.const
0003d69: 02                                        ; i64 literal
0003d6a: fe                                        ; prefix
0003d6b: 2b                                        ; i64.atomic.rmw32.sub_u
0003d6c: 02                                        ; alignment
0003d6d: 03                                        ; memory offset
0003d6e: 1a                                        ; drop
0003d6f: 0b                                        ; end
0003d64: 0b                                        ; FIXUP func body size
; function body 397
0003d70: 00                                        ; func body size (guess)
0003d71: 00                                        ; local decl count
0003d72: 41                                        ; i32.const
0003d73: 01                                        ; i32 literal
0003d74: 41                                        ; i32.const
0003d75: 02                                        ; i32 literal
0003d76: fe                                        ; prefix
0003d77: 2c                                        ; i32.atomic.rmw.and
0003d78: 02                                        ; alignment
0003d79: 03                                        ; memory offset
0003d7a: 1a                                        ; drop
0003d7b: 0b                                        ; end
0003d70: 0b                                        ; FIXUP func body size
; function body 398
0003d7c: 00                                        ; func body size (guess)
0003d7d: 00                                        ; local decl count
0003d7e: 41                                        ; i32.const
0003d7f: 01                                        ; i32 literal
0003d80: 42                                        ; i64.const
0003d81: 02                                        ; i64 literal
0003d82: fe                                        ; prefix
0003d83: 2d                                        ; i64.atomic.rmw.and
0003d84: 03                                        ; alignment
0003d85: 07                                        ; memory offset
0003d86: 1a                                        ; drop
0003d87: 0b                                        ; end
0003d7c: 0b                                        ; FIXUP func body size
; function body 399
0003d88: 00                                        ; func body size (guess)
0003d89: 00                                        ; local decl count
0003d8a: 41                                        ; i32.const
0003d8b: 01                                        ; i32 literal
0003d8c: 41                                        ; i32.const
0003d8d: 02                                        ; i32 literal
0003d8e: fe                                        ; prefix
0003d8f: 2e                                        ; i32.atomic.rmw8.and_u
0003d90: 00                                        ; alignment
0003d91: 03                                        ; memory offset
0003d92: 1a                                        ; drop
0003d93: 0b                                        ; end
0003d88: 0b                                        ; FIXUP func body size
; function body 400
0003d94: 00                                        ; func body size (guess)
0003d95: 00                                        ; local decl count
0003d96: 41                                        ; i32.const
0003d97: 01                                        ; i32 literal
0003d98: 41                                        ; i32.const
0003d99: 02                                        ; i32 literal
0003d9a: fe                                        ; prefix
0003d9b: 2f                                        ; i32.atomic.rmw16.and_u
0003d9c: 01                                        ; alignment
0003d9d: 03                                        ; memory offset
0003d9e: 1a                                        ; drop
0003d9f: 0b                                        ; end
0003d94: 0b                                        ; FIXUP func body size
; function body 401
0003da0: 00                                        ; func body size (guess)
0003da1: 00                                        ; local decl count
0003da2: 41                                        ; i32.const
0003da3: 01                                        ; i32 literal
0003da4: 42                                        ; i64.const
0003da5: 02                                        ; i64 literal
0003da6: fe                                        ; prefix
0003da7: 30                                        ; i64.atomic.rmw8.and_u
0003da8: 00                                        ; alignment
0003da9: 03                                        ; memory offset
0003daa: 1a                                        ; drop
0003dab: 0b                                        ; end
0003da0: 0b                                        ; FIXUP func body size
; function body 402
0003dac: 00                                        ; func body size (guess)
0003dad: 00                                        ; local decl count
0003dae: 41                                        ; i32.const
0003daf: 01                                        ; i32 literal
0003db0: 42                                        ; i64.const
0003db1: 02                                        ; i64 literal
0003db2: fe                                        ; prefix
0003db3: 31                                        ; i64.atomic.rmw16.and_u
0003db4: 01                                        ; alignment
0003db5: 03                                        ; memory offset
0003db6: 1a                                        ; drop
0003db7: 0b                                        ; end
0003dac: 0b                                        ; FIXUP func body size
; function body 403
0003db8: 00                                        ; func body size (guess)
0003db9: 00                                        ; local decl count
0003dba: 41                                        ; i32.const
0003dbb: 01                                        ; i32 literal
0003dbc: 42                                        ; i64.const
0003dbd: 02                                        ; i64 literal
0003dbe: fe                                        ; prefix
0003dbf: 32                                        ; i64.atomic.rmw32.and_u
0003dc0: 02                                        ; alignment
0003dc1: 03                                        ; memory offset
0003dc2: 1a                                        ; drop
0003dc3: 0b                                        ; end
0003db8: 0b                                        ; FIXUP func body size
; function body 404
0003dc4: 00                                        ; func body size (guess)
0003dc5: 00                                        ; local decl count
0003dc6: 41                                        ; i32.const
0003dc7: 01                                        ; i32 literal
0003dc8: 41                                        ; i32.const
0003dc9: 02                                        ; i32 literal
0003dca: fe                                        ; prefix
0003dcb: 33                                        ; i32.atomic.rmw.or
0003dcc: 02                                        ; alignment
0003dcd: 03                                        ; memory offset
0003dce: 1a                                        ; drop
0003dcf: 0b                                        ; end
0003dc4: 0b                                        ; FIXUP func body size
; function body 405
0003dd0: 00                                        ; func body size (guess)
0003dd1: 00                                        ; local decl count
0003dd2: 41                                        ; i32.const
0003dd3: 01                                        ; i32 literal
0003dd4: 42                                        ; i64.const
0003dd5: 02                                        ; i64 literal
0003dd6: fe                                        ; prefix
0003dd7: 34                                        ; i64.atomic.rmw.or
0003dd8: 03                                        ; alignment
0003dd9: 07                                        ; memory offset
0003dda: 1a                                        ; drop
0003ddb: 0b                                        ; end
0003dd0: 0b                                        ; FIXUP func body size
; function body 406
0003ddc: 00                                        ; func body size (guess)
0003ddd: 00                                        ; local decl count
0003dde: 41                                        ; i32.const
0003ddf: 01                                        ; i32 literal
0003de0: 41                                        ; i32.const
0003de1: 02                                        ; i32 literal
0003de2: fe                                        ; prefix
0003de3: 35                                        ; i32.atomic.rmw8.or_u
0003de4: 00                                        ; alignment
0003de5: 03                                        ; memory offset
0003de6: 1a                                        ; drop
0003de7: 0b                                        ; end
0003ddc: 0b                                        ; FIXUP func body size
; function body 407
0003de8: 00                                        ; func body size (guess)
0003de9: 00                                        ; local decl count
0003dea: 41                                        ; i32.const
0003deb: 01                                        ; i32 literal
0003dec: 41                                        ; i32.const
0003ded: 02                                        ; i32 literal
0003dee: fe                                        ; prefix
0003def: 36                                        ; i32.atomic.rmw16.or_u
0003df0: 01                                        ; alignment
0003df1: 03                                        ; memory offset
0003df2: 1a                                        ; drop
0003df3: 0b                                        ; end
0003de8: 0b                                        ; FIXUP func body size
; function body 408
0003df4: 00                                        ; func body size (guess)
0003df5: 00                                        ; local decl count
0003df6: 41                                        ; i32.const
0003df7: 01                                        ; i32 literal
0003df8: 42                                        ; i64.const
0003df9: 02                                        ; i64 literal
0003dfa: fe                                        ; prefix
0003dfb: 37                                        ; i64.atomic.rmw8.or_u
0003dfc: 00                                        ; alignment
0003dfd: 03                                        ; memory offset
0003dfe: 1a                                        ; drop
0003dff: 0b                                        ; end
0003df4: 0b                                        ; FIXUP func body size
; function body 409
0003e00: 00                                        ; func body size (guess)
0003e01: 00                                        ; local decl count
0003e02: 41                                        ; i32.const
0003e03: 01                                        ; i32 literal
0003e04: 42                                        ; i64.const
0003e05: 02                                        ; i64 literal
0003e06: fe                                        ; prefix
0003e07: 38                                        ; i64.atomic.rmw16.or_u
0003e08: 01                                        ; alignment
0003e09: 03                                        ; memory offset
0003e0a: 1a                                        ; drop
0003e0b: 0b                                        ; end
0003e00: 0b                                        ; FIXUP func body size
; function body 410
0003e0c: 00                                        ; func body size (guess)
0003e0d: 00                                        ; local decl count
0003e0e: 41                                        ; i32.const
0003e0f: 01                                        ; i32 literal
0003e10: 42                                        ; i64.const
0003e11: 02                                        ; i64 literal
0003e12: fe                                        ; prefix
0003e13: 39                                        ; i64.atomic.rmw32.or_u
0003e14: 02                                        ; alignment
0003e15: 03                                        ; memory offset
0003e16: 1a                                        ; drop
0003e17: 0b                                        ; end
0003e0c: 0b                                        ; FIXUP func body size
; function body 411
0003e18: 00                                        ; func body size (guess)
0003e19: 00                                        ; local decl count
0003e1a: 41                                        ; i32.const
0003e1b: 01                                        ; i32 literal
0003e1c: 41                                        ; i32.const
0003e1d: 02                                        ; i32 literal
0003e1e: fe                                        ; prefix
0003e1f: 3a                                        ; i32.atomic.rmw.xor
0003e20: 02                                        ; alignment
0003e21: 03                                        ; memory offset
0003e22: 1a                                        ; drop
0003e23: 0b                                        ; end
0003e18: 0b                                        ; FIXUP func body size
; function body 412
0003e24: 00                                        ; func body size (guess)
0003e25: 00                                        ; local decl count
0003e26: 41                                        ; i32.const
0003e27: 01                                        ; i32 literal
0003e28: 42                                        ; i64.const
0003e29: 02                                        ; i64 literal
0003e2a: fe                                        ; prefix
0003e2b: 3b                                        ; i64.atomic.rmw.xor
0003e2c: 03                                        ; alignment
0003e2d: 07                                        ; memory offset
0003e2e: 1a                                        ; drop
0003e2f: 0b                                        ; end
0003e24: 0b                                        ; FIXUP func body size
; function body 413
0003e30: 00                                        ; func body size (guess)
0003e31: 00                                        ; local decl count
0003e32: 41                                        ; i32.const
0003e33: 01                                        ; i32 literal
0003e34: 41                                        ; i32.const
0003e35: 02                                        ; i32 literal
0003e36: fe                                        ; prefix
0003e37: 3c                                        ; i32.atomic.rmw8.xor_u
0003e38: 00                                        ; alignment
0003e39: 03                                        ; memory offset
0003e3a: 1a                                        ; drop
0003e3b: 0b                                        ; end
0003e30: 0b                                        ; FIXUP func body size
; function body 414
0003e3c: 00                                        ; func body size (guess)
0003e3d: 00                                        ; local decl count
0003e3e: 41                                        ; i32.const
0003e3f: 01                                        ; i32 literal
0003e40: 41                                        ; i32.const
0003e41: 02                                        ; i32 literal
0003e42: fe                                        ; prefix
0003e43: 3d                                        ; i32.atomic.rmw16.xor_u
0003e44: 01                                        ; alignment
0003e45: 03                                        ; memory offset
0003e46: 1a                                        ; drop
0003e47: 0b                                        ; end
0003e3c: 0b                                        ; FIXUP func body size
; function body 415
0003e48: 00                                        ; func body size (guess)
0003e49: 00                                        ; local decl count
0003e4a: 41                                        ; i32.const
0003e4b: 01                                        ; i32 literal
0003e4c: 42                                        ; i64.const
0003e4d: 02                                        ; i64 literal
0003e4e: fe                                        ; prefix
0003e4f: 3e                                        ; i64.atomic.rmw8.xor_u
0003e50: 00                                        ; alignment
0003e51: 03                                        ; memory offset
0003e52: 1a                                        ; drop
0003e53: 0b                                        ; end
0003e48: 0b                                        ; FIXUP func body size
; function body 416
0003e54: 00                                        ; func body size (guess)
0003e55: 00                                        ; local decl count
0003e56: 41                                        ; i32.const
0003e57: 01                                        ; i32 literal
0003e58: 42                                        ; i64.const
0003e59: 02                                        ; i64 literal
0003e5a: fe                                        ; prefix
0003e5b: 3f                                        ; i64.atomic.rmw16.xor_u
0003e5c: 01                                        ; alignment
0003e5d: 03                                        ; memory offset
0003e5e: 1a                                        ; drop
0003e5f: 0b                                        ; end
0003e54: 0b                                        ; FIXUP func body size
; function body 417
0003e60: 00                                        ; func body size (guess)
0003e61: 00                                        ; local decl count
0003e62: 41                                        ; i32.const
0003e63: 01                                        ; i32 literal
0003e64: 42                                        ; i64.const
0003e65: 02                                        ; i64 literal
0003e66: fe                                        ; prefix
0003e67: 40                                        ; i64.atomic.rmw32.xor_u
0003e68: 02                                        ; alignment
0003e69: 03                                        ; memory offset
0003e6a: 1a                                        ; drop
0003e6b: 0b                                        ; end
0003e60: 0b                                        ; FIXUP func body size
; function body 418
0003e6c: 00                                        ; func body size (guess)
0003e6d: 00                                        ; local decl count
0003e6e: 41                                        ; i32.const
0003e6f: 01                                        ; i32 literal
0003e70: 41                                        ; i32.const
0003e71: 02                                        ; i32 literal
0003e72: fe                                        ; prefix
0003e73: 41                                        ; i32.atomic.rmw.xchg
0003e74: 02                                        ; alignment
0003e75: 03                                        ; memory offset
0003e76: 1a                                        ; drop
0003e77: 0b                                        ; end
0003e6c: 0b                                        ; FIXUP func body size
; function body 419
0003e78: 00                                        ; func body size (guess)
0003e79: 00                                        ; local decl count
0003e7a: 41                                        ; i32.const
0003e7b: 01                                        ; i32 literal
0003e7c: 42                                        ; i64.const
0003e7d: 02                                        ; i64 literal
0003e7e: fe                                        ; prefix
0003e7f: 42                                        ; i64.atomic.rmw.xchg
0003e80: 03                                        ; alignment
0003e81: 07                                        ; memory offset
0003e82: 1a                                        ; drop
0003e83: 0b                                        ; end
0003e78: 0b                                        ; FIXUP func body size
; function body 420
0003e84: 00                                        ; func body size (guess)
0003e85: 00                                        ; local decl count
0003e86: 41                                        ; i32.const
0003e87: 01                                        ; i32 literal
0003e88: 41                                        ; i32.const
0003e89: 02                                        ; i32 literal
0003e8a: fe                                        ; prefix
0003e8b: 43                                        ; i32.atomic.rmw8.xchg_u
0003e8c: 00                                        ; alignment
0003e8d: 03                                        ; memory offset
0003e8e: 1a                                        ; drop
0003e8f: 0b                                        ; end
0003e84: 0b                                        ; FIXUP func body size
; function body 421
0003e90: 00                                        ; func body size (guess)
0003e91: 00                                        ; local decl count
0003e92: 41                                        ; i32.const
0003e93: 01                                        ; i32 literal
0003e94: 41                                        ; i32.const
0003e95: 02                                        ; i32 literal
0003e96: fe                                        ; prefix
0003e97: 44                                        ; i32.atomic.rmw16.xchg_u
0003e98: 01                                        ; alignment
0003e99: 03                                        ; memory offset
0003e9a: 1a                                        ; drop
0003e9b: 0b                                        ; end
0003e90: 0b                                        ; FIXUP func body size
; function body 422
0003e9c: 00                                        ; func body size (guess)
0003e9d: 00                                        ; local decl count
0003e9e: 41                                        ; i32.const
0003e9f: 01                                        ; i32 literal
0003ea0: 42                                        ; i64.const
0003ea1: 02                                        ; i64 literal
0003ea2: fe                                        ; prefix
0003ea3: 45                                        ; i64.atomic.rmw8.xchg_u
0003ea4: 00                                        ; alignment
0003ea5: 03                                        ; memory offset
0003ea6: 1a                                        ; drop
0003ea7: 0b                                        ; end
0003e9c: 0b                                        ; FIXUP func body size
; function body 423
0003ea8: 00                                        ; func body size (guess)
0003ea9: 00                                        ; local decl count
0003eaa: 41                                        ; i32.const
0003eab: 01                                        ; i32 literal
0003eac: 42                                        ; i64.const
0003ead: 02                                        ; i64 literal
0003eae: fe                                        ; prefix
0003eaf: 46                                        ; i64.atomic.rmw16.xchg_u
0003eb0: 01                                        ; alignment
0003eb1: 03                                        ; memory offset
0003eb2: 1a                                        ; drop
0003eb3: 0b                                        ; end
0003ea8: 0b                                        ; FIXUP func body size
; function body 424
0003eb4: 00                                        ; func body size (guess)
0003eb5: 00                                        ; local decl count
0003eb6: 41                                        ; i32.const
0003eb7: 01                                        ; i32 literal
0003eb8: 42                                        ; i64.const
0003eb9: 02                                        ; i64 literal
0003eba: fe                                        ; prefix
0003ebb: 47                                        ; i64.atomic.rmw32.xchg_u
0003ebc: 02                                        ; alignment
0003ebd: 03                                        ; memory offset
0003ebe: 1a                                        ; drop
0003ebf: 0b                                        ; end
0003eb4: 0b                                        ; FIXUP func body size
; function body 425
0003ec0: 00                                        ; func body size (guess)
0003ec1: 00                                        ; local decl count
0003ec2: 41                                        ; i32.const
0003ec3: 01                                        ; i32 literal
0003ec4: 41                                        ; i32.const
0003ec5: 02                                        ; i32 literal
0003ec6: 41                                        ; i32.const
0003ec7: 03                                        ; i32 literal
0003ec8: fe                                        ; prefix
0003ec9: 48                                        ; i32.atomic.rmw.cmpxchg
0003eca: 02                                        ; alignment
0003ecb: 03                                        ; memory offset
0003ecc: 1a                                        ; drop
0003ecd: 0b                                        ; end
0003ec0: 0d                                        ; FIXUP func body size
; function body 426
0003ece: 00                                        ; func body size (guess)
0003ecf: 00                                        ; local decl count
0003ed0: 41                                        ; i32.const
0003ed1: 01                                        ; i32 literal
0003ed2: 42                                        ; i64.const
0003ed3: 02                                        ; i64 literal
0003ed4: 42                                        ; i64.const
0003ed5: 03                                        ; i64 literal
0003ed6: fe                                        ; prefix
0003ed7: 49                                        ; i64.atomic.rmw.cmpxchg
0003ed8: 03                                        ; alignment
0003ed9: 07                                        ; memory offset
0003eda: 1a                                        ; drop
0003edb: 0b                                        ; end
0003ece: 0d                                        ; FIXUP func body size
; function body 427
0003edc: 00                                        ; func body size (guess)
0003edd: 00                                        ; local decl count
0003ede: 41                                        ; i32.const
0003edf: 01                                        ; i32 literal
0003ee0: 41                                        ; i32.const
0003ee1: 02                                        ; i32 literal
0003ee2: 41                                        ; i32.const
0003ee3: 03                                        ; i32 literal
0003ee4: fe                                        ; prefix
0003ee5: 4a                                        ; i32.atomic.rmw8.cmpxchg_u
0003ee6: 00                                        ; alignment
0003ee7: 03                                        ; memory offset
0003ee8: 1a                                        ; drop
0003ee9: 0b                                        ; end
0003edc: 0d                                        ; FIXUP func body size
; function body 428
0003eea: 00                                        ; func body size (guess)
0003eeb: 00                                        ; local decl count
0003eec: 41                                        ; i32.const
0003eed: 01                                        ; i32 literal
0003eee: 41                                        ; i32.const
0003eef: 02                                        ; i32 literal
0003ef0: 41                                        ; i32.const
0003ef1: 03                                        ; i32 literal
0003ef2: fe                                        ; prefix
0003ef3: 4b                                        ; i32.atomic.rmw16.cmpxchg_u
0003ef4: 01                                        ; alignment
0003ef5: 03                                        ; memory offset
0003ef6: 1a                                        ; drop
0003ef7: 0b                                        ; end
0003eea: 0d                                        ; FIXUP func body size
; function body 429
0003ef8: 00                                        ; func body size (guess)
0003ef9: 00                                        ; local decl count
0003efa: 41                                        ; i32.const
0003efb: 01                                        ; i32 literal
0003efc: 42                                        ; i64.const
0003efd: 02                                        ; i64 literal
0003efe: 42                                        ; i64.const
0003eff: 03                                        ; i64 literal
0003f00: fe                                        ; prefix
0003f01: 4c                                        ; i64.atomic.rmw8.cmpxchg_u
0003f02: 00                                        ; alignment
0003f03: 03                                        ; memory offset
0003f04: 1a                                        ; drop
0003f05: 0b                                        ; end
0003ef8: 0d                                        ; FIXUP func body size
; function body 430
0003f06: 00                                        ; func body size (guess)
0003f07: 00                                        ; local decl count
0003f08: 41                                        ; i32.const
0003f09: 01                                        ; i32 literal
0003f0a: 42                                        ; i64.const
0003f0b: 02                                        ; i64 literal
0003f0c: 42                                        ; i64.const
0003f0d: 03                                        ; i64 literal
0003f0e: fe                                        ; prefix
0003f0f: 4d                                        ; i64.atomic.rmw16.cmpxchg_u
0003f10: 01                                        ; alignment
0003f11: 03                                        ; memory offset
0003f12: 1a                                        ; drop
0003f13: 0b                                        ; end
0003f06: 0d                                        ; FIXUP func body size
; function body 431
0003f14: 00                                        ; func body size (guess)
0003f15: 00                                        ; local decl count
0003f16: 41                                        ; i32.const
0003f17: 01                                        ; i32 literal
0003f18: 42                                        ; i64.const
0003f19: 02                                        ; i64 literal
0003f1a: 42                                        ; i64.const
0003f1b: 03                                        ; i64 literal
0003f1c: fe                                        ; prefix
0003f1d: 4e                                        ; i64.atomic.rmw32.cmpxchg_u
0003f1e: 02                                        ; alignment
0003f1f: 03                                        ; memory offset
0003f20: 1a                                        ; drop
0003f21: 0b                                        ; end
0003f14: 0d                                        ; FIXUP func body size
; move data: [1d58, 3f22) -> [1d59, 3f23)
0001d57: ca43                                      ; FIXUP section size
; section "Data" (11)
0003f23: 0b                                        ; section code
0003f24: 00                                        ; section size (guess)
0003f25: 01                                        ; num data segments
; data segment header 0
0003f26: 01                                        ; segment flags
0003f27: 00                                        ; data segment size
; data segment data 0
0003f24: 03                                        ; FIXUP section size
BeginModule(version: 1)
  BeginTypeSection(8)
    OnTypeCount(2)
    OnType(index: 0, params: [], results: [])
    OnType(index: 1, params: [i32], results: [])
  EndTypeSection
  BeginImportSection(14)
    OnImportCount(1)
    OnImport(index: 0, kind: func, module: "host", field: "print")
    OnImportFunc(import_index: 0, func_index: 0, sig_index: 1)
  EndImportSection
  BeginFunctionSection(434)
    OnFunctionCount(432)
    OnFunction(index: 1, sig_index: 0)
    OnFunction(index: 2, sig_index: 0)
    OnFunction(index: 3, sig_index: 0)
    OnFunction(index: 4, sig_index: 0)
    OnFunction(index: 5, sig_index: 0)
    OnFunction(index: 6, sig_index: 0)
    OnFunction(index: 7, sig_index: 0)
    OnFunction(index: 8, sig_index: 0)
    OnFunction(index: 9, sig_index: 0)
    OnFunction(index: 10, sig_index: 0)
    OnFunction(index: 11, sig_index: 0)
    OnFunction(index: 12, sig_index: 0)
    OnFunction(index: 13, sig_index: 0)
    OnFunction(index: 14, sig_index: 0)
    OnFunction(index: 15, sig_index: 0)
    OnFunction(index: 16, sig_index: 0)
    OnFunction(index: 17, sig_index: 0)
    OnFunction(index: 18, sig_index: 0)
    OnFunction(index: 19, sig_index: 0)
    OnFunction(index: 20, sig_index: 0)
    OnFunction(index: 21, sig_index: 0)
    OnFunction(index: 22, sig_index: 0)
    OnFunction(index: 23, sig_index: 0)
    OnFunction(index: 24, sig_index: 0)
    OnFunction(index: 25, sig_index: 0)
    OnFunction(index: 26, sig_index: 0)
    OnFunction(index: 27, sig_index: 0)
    OnFunction(index: 28, sig_index: 0)
    OnFunction(index: 29, sig_index: 0)
    OnFunction(index: 30, sig_index: 0)
    OnFunction(index: 31, sig_index: 0)
    OnFunction(index: 32, sig_index: 0)
    OnFunction(index: 33, sig_index: 0)
    OnFunction(index: 34, sig_index: 0)
    OnFunction(index: 35, sig_index: 0)
    OnFunction(index: 36, sig_index: 0)
    OnFunction(index: 37, sig_index: 0)
    OnFunction(index: 38, sig_index: 0)
    OnFunction(index: 39, sig_index: 0)
    OnFunction(index: 40, sig_index: 0)
    OnFunction(index: 41, sig_index: 0)
    OnFunction(index: 42, sig_index: 0)
    OnFunction(index: 43, sig_index: 0)
    OnFunction(index: 44, sig_index: 0)
    OnFunction(index: 45, sig_index: 0)
    OnFunction(index: 46, sig_index: 0)
    OnFunction(index: 47, sig_index: 0)
    OnFunction(index: 48, sig_index: 0)
    OnFunction(index: 49, sig_index: 0)
    OnFunction(index: 50, sig_index: 0)
    OnFunction(index: 51, sig_index: 0)
    OnFunction(index: 52, sig_index: 0)
    OnFunction(index: 53, sig_index: 0)
    OnFunction(index: 54, sig_index: 0)
    OnFunction(index: 55, sig_index: 0)
    OnFunction(index: 56, sig_index: 0)
    OnFunction(index: 57, sig_index: 0)
    OnFunction(index: 58, sig_index: 0)
    OnFunction(index: 59, sig_index: 0)
    OnFunction(index: 60, sig_index: 0)
    OnFunction(index: 61, sig_index: 0)
    OnFunction(index: 62, sig_index: 0)
    OnFunction(index: 63, sig_index: 0)
    OnFunction(index: 64, sig_index: 0)
    OnFunction(index: 65, sig_index: 0)
    OnFunction(index: 66, sig_index: 0)
    OnFunction(index: 67, sig_index: 0)
    OnFunction(index: 68, sig_index: 0)
    OnFunction(index: 69, sig_index: 0)
    OnFunction(index: 70, sig_index: 0)
    OnFunction(index: 71, sig_index: 0)
    OnFunction(index: 72, sig_index: 0)
    OnFunction(index: 73, sig_index: 0)
    OnFunction(index: 74, sig_index: 0)
    OnFunction(index: 75, sig_index: 0)
    OnFunction(index: 76, sig_index: 0)
    OnFunction(index: 77, sig_index: 0)
    OnFunction(index: 78, sig_index: 0)
    OnFunction(index: 79, sig_index: 0)
    OnFunction(index: 80, sig_index: 0)
    OnFunction(index: 81, sig_index: 0)
    OnFunction(index: 82, sig_index: 0)
    OnFunction(index: 83, sig_index: 0)
    OnFunction(index: 84, sig_index: 0)
    OnFunction(index: 85, sig_index: 0)
    OnFunction(index: 86, sig_index: 0)
    OnFunction(index: 87, sig_index: 0)
    OnFunction(index: 88, sig_index: 0)
    OnFunction(index: 89, sig_index: 0)
    OnFunction(index: 90, sig_index: 0)
    OnFunction(index: 91, sig_index: 0)
    OnFunction(index: 92, sig_index: 0)
    OnFunction(index: 93, sig_index: 0)
    OnFunction(index: 94, sig_index: 0)
    OnFunction(index: 95, sig_index: 0)
    OnFunction(index: 96, sig_index: 0)
    OnFunction(index: 97, sig_index: 0)
    OnFunction(index: 98, sig_index: 0)
    OnFunction(index: 99, sig_index: 0)
    OnFunction(index: 100, sig_index: 0)
    OnFunction(index: 101, sig_index: 0)
    OnFunction(index: 102, sig_index: 0)
    OnFunction(index: 103, sig_index: 0)
    OnFunction(index: 104, sig_index: 0)
    OnFunction(index: 105, sig_index: 0)
    OnFunction(index: 106, sig_index: 0)
    OnFunction(index: 107, sig_index: 0)
    OnFunction(index: 108, sig_index: 0)
    OnFunction(index: 109, sig_index: 0)
    OnFunction(index: 110, sig_index: 0)
    OnFunction(index: 111, sig_index: 0)
    OnFunction(index: 112, sig_index: 0)
    OnFunction(index: 113, sig_index: 0)
    OnFunction(index: 114, sig_index: 0)
    OnFunction(index: 115, sig_index: 0)
    OnFunction(index: 116, sig_index: 0)
    OnFunction(index: 117, sig_index: 0)
    OnFunction(index: 118, sig_index: 0)
    OnFunction(index: 119, sig_index: 0)
    OnFunction(index: 120, sig_index: 0)
    OnFunction(index: 121, sig_index: 0)
    OnFunction(index: 122, sig_index: 0)
    OnFunction(index: 123, sig_index: 0)
    OnFunction(index: 124, sig_index: 0)
    OnFunction(index: 125, sig_index: 0)
    OnFunction(index: 126, sig_index: 0)
    OnFunction(index: 127, sig_index: 0)
    OnFunction(index: 128, sig_index: 0)
    OnFunction(index: 129, sig_index: 0)
    OnFunction(index: 130, sig_index: 0)
    OnFunction(index: 131, sig_index: 0)
    OnFunction(index: 132, sig_index: 0)
    OnFunction(index: 133, sig_index: 0)
    OnFunction(index: 134, sig_index: 0)
    OnFunction(index: 135, sig_index: 0)
    OnFunction(index: 136, sig_index: 0)
    OnFunction(index: 137, sig_index: 0)
    OnFunction(index: 138, sig_index: 0)
    OnFunction(index: 139, sig_index: 0)
    OnFunction(index: 140, sig_index: 0)
    OnFunction(index: 141, sig_index: 0)
    OnFunction(index: 142, sig_index: 0)
    OnFunction(index: 143, sig_index: 0)
    OnFunction(index: 144, sig_index: 0)
    OnFunction(index: 145, sig_index: 0)
    OnFunction(index: 146, sig_index: 0)
    OnFunction(index: 147, sig_index: 0)
    OnFunction(index: 148, sig_index: 0)
    OnFunction(index: 149, sig_index: 0)
    OnFunction(index: 150, sig_index: 0)
    OnFunction(index: 151, sig_index: 0)
    OnFunction(index: 152, sig_index: 0)
    OnFunction(index: 153, sig_index: 0)
    OnFunction(index: 154, sig_index: 0)
    OnFunction(index: 155, sig_index: 0)
    OnFunction(index: 156, sig_index: 0)
    OnFunction(index: 157, sig_index: 0)
    OnFunction(index: 158, sig_index: 0)
    OnFunction(index: 159, sig_index: 0)
    OnFunction(index: 160, sig_index: 0)
    OnFunction(index: 161, sig_index: 0)
    OnFunction(index: 162, sig_index: 0)
    OnFunction(index: 163, sig_index: 0)
    OnFunction(index: 164, sig_index: 0)
    OnFunction(index: 165, sig_index: 0)
    OnFunction(index: 166, sig_index: 0)
    OnFunction(index: 167, sig_index: 0)
    OnFunction(index: 168, sig_index: 0)
    OnFunction(index: 169, sig_index: 0)
    OnFunction(index: 170, sig_index: 0)
    OnFunction(index: 171, sig_index: 0)
    OnFunction(index: 172, sig_index: 0)
    OnFunction(index: 173, sig_index: 0)
    OnFunction(index: 174, sig_index: 0)
    OnFunction(index: 175, sig_index: 0)
    OnFunction(index: 176, sig_index: 0)
    OnFunction(index: 177, sig_index: 0)
    OnFunction(index: 178, sig_index: 0)
    OnFunction(index: 179, sig_index: 0)
    OnFunction(index: 180, sig_index: 0)
    OnFunction(index: 181, sig_index: 0)
    OnFunction(index: 182, sig_index: 0)
    OnFunction(index: 183, sig_index: 0)
    OnFunction(index: 184, sig_index: 0)
    OnFunction(index: 185, sig_index: 0)
    OnFunction(index: 186, sig_index: 0)
    OnFunction(index: 187, sig_index: 0)
    OnFunction(index: 188, sig_index: 0)
    OnFunction(index: 189, sig_index: 0)
    OnFunction(index: 190, sig_index: 0)
    OnFunction(index: 191, sig_index: 0)
    OnFunction(index: 192, sig_index: 0)
    OnFunction(index: 193, sig_index: 0)
    OnFunction(index: 194, sig_index: 0)
    OnFunction(index: 195, sig_index: 0)
    OnFunction(index: 196, sig_index: 0)
    OnFunction(index: 197, sig_index: 0)
    OnFunction(index: 198, sig_index: 0)
    OnFunction(index: 199, sig_index: 0)
    OnFunction(index: 200, sig_index: 0)
    OnFunction(index: 201, sig_index: 0)
    OnFunction(index: 202, sig_index: 0)
    OnFunction(index: 203, sig_index: 0)
    OnFunction(index: 204, sig_index: 0)
    OnFunction(index: 205, sig_index: 0)
    OnFunction(index: 206, sig_index: 0)
    OnFunction(index: 207, sig_index: 0)
    OnFunction(index: 208, sig_index: 0)
    OnFunction(index: 209, sig_index: 0)
    OnFunction(index: 210, sig_index: 0)
    OnFunction(index: 211, sig_index: 0)
    OnFunction(index: 212, sig_index: 0)
    OnFunction(index: 213, sig_index: 0)
    OnFunction(index: 214, sig_index: 0)
    OnFunction(index: 215, sig_index: 0)
    OnFunction(index: 216, sig_index: 0)
    OnFunction(index: 217, sig_index: 0)
    OnFunction(index: 218, sig_index: 0)
    OnFunction(index: 219, sig_index: 0)
    OnFunction(index: 220, sig_index: 0)
    OnFunction(index: 221, sig_index: 0)
    OnFunction(index: 222, sig_index: 0)
    OnFunction(index: 223, sig_index: 0)
    OnFunction(index: 224, sig_index: 0)
    OnFunction(index: 225, sig_index: 0)
    OnFunction(index: 226, sig_index: 0)
    OnFunction(index: 227, sig_index: 0)
    OnFunction(index: 228, sig_index: 0)
    OnFunction(index: 229, sig_index: 0)
    OnFunction(index: 230, sig_index: 0)
    OnFunction(index: 231, sig_index: 0)
    OnFunction(index: 232, sig_index: 0)
    OnFunction(index: 233, sig_index: 0)
    OnFunction(index: 234, sig_index: 0)
    OnFunction(index: 235, sig_index: 0)
    OnFunction(index: 236, sig_index: 0)
    OnFunction(index: 237, sig_index: 0)
    OnFunction(index: 238, sig_index: 0)
    OnFunction(index: 239, sig_index: 0)
    OnFunction(index: 240, sig_index: 0)
    OnFunction(index: 241, sig_index: 0)
    OnFunction(index: 242, sig_index: 0)
    OnFunction(index: 243, sig_index: 0)
    OnFunction(index: 244, sig_index: 0)
    OnFunction(index: 245, sig_index: 0)
    OnFunction(index: 246, sig_index: 0)
    OnFunction(index: 247, sig_index: 0)
    OnFunction(index: 248, sig_index: 0)
    OnFunction(index: 249, sig_index: 0)
    OnFunction(index: 250, sig_index: 0)
    OnFunction(index: 251, sig_index: 0)
    OnFunction(index: 252, sig_index: 0)
    OnFunction(index: 253, sig_index: 0)
    OnFunction(index: 254, sig_index: 0)
    OnFunction(index: 255, sig_index: 0)
    OnFunction(index: 256, sig_index: 0)
    OnFunction(index: 257, sig_index: 0)
    OnFunction(index: 258, sig_index: 0)
    OnFunction(index: 259, sig_index: 0)
    OnFunction(index: 260, sig_index: 0)
    OnFunction(index: 261, sig_index: 0)
    OnFunction(index: 262, sig_index: 0)
    OnFunction(index: 263, sig_index: 0)
    OnFunction(index: 264, sig_index: 0)
    OnFunction(index: 265, sig_index: 0)
    OnFunction(index: 266, sig_index: 0)
    OnFunction(index: 267, sig_index: 0)
    OnFunction(index: 268, sig_index: 0)
    OnFunction(index: 269, sig_index: 0)
    OnFunction(index: 270, sig_index: 0)
    OnFunction(index: 271, sig_index: 0)
    OnFunction(index: 272, sig_index: 0)
    OnFunction(index: 273, sig_index: 0)
    OnFunction(index: 274, sig_index: 0)
    OnFunction(index: 275, sig_index: 0)
    OnFunction(index: 276, sig_index: 0)
    OnFunction(index: 277, sig_index: 0)
    OnFunction(index: 278, sig_index: 0)
    OnFunction(index: 279, sig_index: 0)
    OnFunction(index: 280, sig_index: 0)
    OnFunction(index: 281, sig_index: 0)
    OnFunction(index: 282, sig_index: 0)
    OnFunction(index: 283, sig_index: 0)
    OnFunction(index: 284, sig_index: 0)
    OnFunction(index: 285, sig_index: 0)
    OnFunction(index: 286, sig_index: 0)
    OnFunction(index: 287, sig_index: 0)
    OnFunction(index: 288, sig_index: 0)
    OnFunction(index: 289, sig_index: 0)
    OnFunction(index: 290, sig_index: 0)
    OnFunction(index: 291, sig_index: 0)
    OnFunction(index: 292, sig_index: 0)
    OnFunction(index: 293, sig_index: 0)
    OnFunction(index: 294, sig_index: 0)
    OnFunction(index: 295, sig_index: 0)
    OnFunction(index: 296, sig_index: 0)
    OnFunction(index: 297, sig_index: 0)
    OnFunction(index: 298, sig_index: 0)
    OnFunction(index: 299, sig_index: 0)
    OnFunction(index: 300, sig_index: 0)
    OnFunction(index: 301, sig_index: 0)
    OnFunction(index: 302, sig_index: 0)
    OnFunction(index: 303, sig_index: 0)
    OnFunction(index: 304, sig_index: 0)
    OnFunction(index: 305, sig_index: 0)
    OnFunction(index: 306, sig_index: 0)
    OnFunction(index: 307, sig_index: 0)
    OnFunction(index: 308, sig_index: 0)
    OnFunction(index: 309, sig_index: 0)
    OnFunction(index: 310, sig_index: 0)
    OnFunction(index: 311, sig_index: 0)
    OnFunction(index: 312, sig_index: 0)
    OnFunction(index: 313, sig_index: 0)
    OnFunction(index: 314, sig_index: 0)
    OnFunction(index: 315, sig_index: 0)
    OnFunction(index: 316, sig_index: 0)
    OnFunction(index: 317, sig_index: 0)
    OnFunction(index: 318, sig_index: 0)
    OnFunction(index: 319, sig_index: 0)
    OnFunction(index: 320, sig_index: 0)
    OnFunction(index: 321, sig_index: 0)
    OnFunction(index: 322, sig_index: 0)
    OnFunction(index: 323, sig_index: 0)
    OnFunction(index: 324, sig_index: 0)
    OnFunction(index: 325, sig_index: 0)
    OnFunction(index: 326, sig_index: 0)
    OnFunction(index: 327, sig_index: 0)
    OnFunction(index: 328, sig_index: 0)
    OnFunction(index: 329, sig_index: 0)
    OnFunction(index: 330, sig_index: 0)
    OnFunction(index: 331, sig_index: 0)
    OnFunction(index: 332, sig_index: 0)
    OnFunction(index: 333, sig_index: 0)
    OnFunction(index: 334, sig_index: 0)
    OnFunction(index: 335, sig_index: 0)
    OnFunction(index: 336, sig_index: 0)
    OnFunction(index: 337, sig_index: 0)
    OnFunction(index: 338, sig_index: 0)
    OnFunction(index: 339, sig_index: 0)
    OnFunction(index: 340, sig_index: 0)
    OnFunction(index: 341, sig_index: 0)
    OnFunction(index: 342, sig_index: 0)
    OnFunction(index: 343, sig_index: 0)
    OnFunction(index: 344, sig_index: 0)
    OnFunction(index: 345, sig_index: 0)
    OnFunction(index: 346, sig_index: 0)
    OnFunction(index: 347, sig_index: 0)
    OnFunction(index: 348, sig_index: 0)
    OnFunction(index: 349, sig_index: 0)
    OnFunction(index: 350, sig_index: 0)
    OnFunction(index: 351, sig_index: 0)
    OnFunction(index: 352, sig_index: 0)
    OnFunction(index: 353, sig_index: 0)
    OnFunction(index: 354, sig_index: 0)
    OnFunction(index: 355, sig_index: 0)
    OnFunction(index: 356, sig_index: 0)
    OnFunction(index: 357, sig_index: 0)
    OnFunction(index: 358, sig_index: 0)
    OnFunction(index: 359, sig_index: 0)
    OnFunction(index: 360, sig_index: 0)
    OnFunction(index: 361, sig_index: 0)
    OnFunction(index: 362, sig_index: 0)
    OnFunction(index: 363, sig_index: 0)
    OnFunction(index: 364, sig_index: 0)
    OnFunction(index: 365, sig_index: 0)
    OnFunction(index: 366, sig_index: 0)
    OnFunction(index: 367, sig_index: 0)
    OnFunction(index: 368, sig_index: 0)
    OnFunction(index: 369, sig_index: 0)
    OnFunction(index: 370, sig_index: 0)
    OnFunction(index: 371, sig_index: 0)
    OnFunction(index: 372, sig_index: 0)
    OnFunction(index: 373, sig_index: 0)
    OnFunction(index: 374, sig_index: 0)
    OnFunction(index: 375, sig_index: 0)
    OnFunction(index: 376, sig_index: 0)
    OnFunction(index: 377, sig_index: 0)
    OnFunction(index: 378, sig_index: 0)
    OnFunction(index: 379, sig_index: 0)
    OnFunction(index: 380, sig_index: 0)
    OnFunction(index: 381, sig_index: 0)
    OnFunction(index: 382, sig_index: 0)
    OnFunction(index: 383, sig_index: 0)
    OnFunction(index: 384, sig_index: 0)
    OnFunction(index: 385, sig_index: 0)
    OnFunction(index: 386, sig_index: 0)
    OnFunction(index: 387, sig_index: 0)
    OnFunction(index: 388, sig_index: 0)
    OnFunction(index: 389, sig_index: 0)
    OnFunction(index: 390, sig_index: 0)
    OnFunction(index: 391, sig_index: 0)
    OnFunction(index: 392, sig_index: 0)
    OnFunction(index: 393, sig_index: 0)
    OnFunction(index: 394, sig_index: 0)
    OnFunction(index: 395, sig_index: 0)
    OnFunction(index: 396, sig_index: 0)
    OnFunction(index: 397, sig_index: 0)
    OnFunction(index: 398, sig_index: 0)
    OnFunction(index: 399, sig_index: 0)
    OnFunction(index: 400, sig_index: 0)
    OnFunction(index: 401, sig_index: 0)
    OnFunction(index: 402, sig_index: 0)
    OnFunction(index: 403, sig_index: 0)
    OnFunction(index: 404, sig_index: 0)
    OnFunction(index: 405, sig_index: 0)
    OnFunction(index: 406, sig_index: 0)
    OnFunction(index: 407, sig_index: 0)
    OnFunction(index: 408, sig_index: 0)
    OnFunction(index: 409, sig_index: 0)
    OnFunction(index: 410, sig_index: 0)
    OnFunction(index: 411, sig_index: 0)
    OnFunction(index: 412, sig_index: 0)
    OnFunction(index: 413, sig_index: 0)
    OnFunction(index: 414, sig_index: 0)
    OnFunction(index: 415, sig_index: 0)
    OnFunction(index: 416, sig_index: 0)
    OnFunction(index: 417, sig_index: 0)
    OnFunction(index: 418, sig_index: 0)
    OnFunction(index: 419, sig_index: 0)
    OnFunction(index: 420, sig_index: 0)
    OnFunction(index: 421, sig_index: 0)
    OnFunction(index: 422, sig_index: 0)
    OnFunction(index: 423, sig_index: 0)
    OnFunction(index: 424, sig_index: 0)
    OnFunction(index: 425, sig_index: 0)
    OnFunction(index: 426, sig_index: 0)
    OnFunction(index: 427, sig_index: 0)
    OnFunction(index: 428, sig_index: 0)
    OnFunction(index: 429, sig_index: 0)
    OnFunction(index: 430, sig_index: 0)
    OnFunction(index: 431, sig_index: 0)
    OnFunction(index: 432, sig_index: 0)
  EndFunctionSection
  BeginTableSection(5)
    OnTableCount(1)
    OnTable(index: 0, elem_type: funcref, initial: 2, max: 2)
  EndTableSection
  BeginMemorySection(4)
    OnMemoryCount(1)
    OnMemory(index: 0, initial: 1, max: 1)
  EndMemorySection
  BeginGlobalSection(6)
    OnGlobalCount(1)
    BeginGlobal(index: 0, type: i32, mutable: true)
    BeginGlobalInitExpr(0)
    OnInitExprI32ConstExpr(index: 0, value: 0)
    EndGlobalInitExpr(0)
    EndGlobal(0)
  EndGlobalSection
  BeginExportSection(6999)
    OnExportCount(431)
    OnExport(index: 0, kind: func, item_index: 2, name: "unreachable")
    OnExport(index: 1, kind: func, item_index: 3, name: "br")
    OnExport(index: 2, kind: func, item_index: 4, name: "br_table")
    OnExport(index: 3, kind: func, item_index: 5, name: "return")
    OnExport(index: 4, kind: func, item_index: 6, name: "call")
    OnExport(index: 5, kind: func, item_index: 7, name: "call_indirect")
    OnExport(index: 6, kind: func, item_index: 8, name: "return_call")
    OnExport(index: 7, kind: func, item_index: 9, name: "return_call_indirect")
    OnExport(index: 8, kind: func, item_index: 10, name: "drop")
    OnExport(index: 9, kind: func, item_index: 11, name: "select")
    OnExport(index: 10, kind: func, item_index: 12, name: "select_t")
    OnExport(index: 11, kind: func, item_index: 13, name: "get_local")
    OnExport(index: 12, kind: func, item_index: 14, name: "set_local")
    OnExport(index: 13, kind: func, item_index: 15, name: "tee_local")
    OnExport(index: 14, kind: func, item_index: 16, name: "get_global")
    OnExport(index: 15, kind: func, item_index: 17, name: "set_global")
    OnExport(index: 16, kind: func, item_index: 18, name: "i32.load")
    OnExport(index: 17, kind: func, item_index: 19, name: "i64.load")
    OnExport(index: 18, kind: func, item_index: 20, name: "f32.load")
    OnExport(index: 19, kind: func, item_index: 21, name: "f64.load")
    OnExport(index: 20, kind: func, item_index: 22, name: "i32.load8_s")
    OnExport(index: 21, kind: func, item_index: 23, name: "i32.load8_u")
    OnExport(index: 22, kind: func, item_index: 24, name: "i32.load16_s")
    OnExport(index: 23, kind: func, item_index: 25, name: "i32.load16_u")
    OnExport(index: 24, kind: func, item_index: 26, name: "i64.load8_s")
    OnExport(index: 25, kind: func, item_index: 27, name: "i64.load8_u")
    OnExport(index: 26, kind: func, item_index: 28, name: "i64.load16_s")
    OnExport(index: 27, kind: func, item_index: 29, name: "i64.load16_u")
    OnExport(index: 28, kind: func, item_index: 30, name: "i64.load32_s")
    OnExport(index: 29, kind: func, item_index: 31, name: "i64.load32_u")
    OnExport(index: 30, kind: func, item_index: 32, name: "i32.store")
    OnExport(index: 31, kind: func, item_index: 33, name: "i64.store")
    OnExport(index: 32, kind: func, item_index: 34, name: "f32.store")
    OnExport(index: 33, kind: func, item_index: 35, name: "f64.store")
    OnExport(index: 34, kind: func, item_index: 36, name: "i32.store8")
    OnExport(index: 35, kind: func, item_index: 37, name: "i32.store16")
    OnExport(index: 36, kind: func, item_index: 38, name: "i64.store8")
    OnExport(index: 37, kind: func, item_index: 39, name: "i64.store16")
    OnExport(index: 38, kind: func, item_index: 40, name: "i64.store32")
    OnExport(index: 39, kind: func, item_index: 41, name: "current_memory")
    OnExport(index: 40, kind: func, item_index: 42, name: "grow_memory")
    OnExport(index: 41, kind: func, item_index: 43, name: "i32.const")
    OnExport(index: 42, kind: func, item_index: 44, name: "i64.const")
    OnExport(index: 43, kind: func, item_index: 45, name: "f32.const")
    OnExport(index: 44, kind: func, item_index: 46, name: "f64.const")
    OnExport(index: 45, kind: func, item_index: 47, name: "i32.eqz")
    OnExport(index: 46, kind: func, item_index: 48, name: "i32.eq")
    OnExport(index: 47, kind: func, item_index: 49, name: "i32.ne")
    OnExport(index: 48, kind: func, item_index: 50, name: "i32.lt_s")
    OnExport(index: 49, kind: func, item_index: 51, name: "i32.lt_u")
    OnExport(index: 50, kind: func, item_index: 52, name: "i32.gt_s")
    OnExport(index: 51, kind: func, item_index: 53, name: "i32.gt_u")
    OnExport(index: 52, kind: func, item_index: 54, name: "i32.le_s")
    OnExport(index: 53, kind: func, item_index: 55, name: "i32.le_u")
    OnExport(index: 54, kind: func, item_index: 56, name: "i32.ge_s")
    OnExport(index: 55, kind: func, item_index: 57, name: "i32.ge_u")
    OnExport(index: 56, kind: func, item_index: 58, name: "i64.eqz")
    OnExport(index: 57, kind: func, item_index: 59, name: "i64.eq")
    OnExport(index: 58, kind: func, item_index: 60, name: "i64.ne")
    OnExport(index: 59, kind: func, item_index: 61, name: "i64.lt_s")
    OnExport(index: 60, kind: func, item_index: 62, name: "i64.lt_u")
    OnExport(index: 61, kind: func, item_index: 63, name: "i64.gt_s")
    OnExport(index: 62, kind: func, item_index: 64, name: "i64.gt_u")
    OnExport(index: 63, kind: func, item_index: 65, name: "i64.le_s")
    OnExport(index: 64, kind: func, item_index: 66, name: "i64.le_u")
    OnExport(index: 65, kind: func, item_index: 67, name: "i64.ge_s")
    OnExport(index: 66, kind: func, item_index: 68, name: "i64.ge_u")
    OnExport(index: 67, kind: func, item_index: 69, name: "f32.eq")
    OnExport(index: 68, kind: func, item_index: 70, name: "f32.ne")
    OnExport(index: 69, kind: func, item_index: 71, name: "f32.lt")
    OnExport(index: 70, kind: func, item_index: 72, name: "f32.gt")
    OnExport(index: 71, kind: func, item_index: 73, name: "f32.le")
    OnExport(index: 72, kind: func, item_index: 74, name: "f32.ge")
    OnExport(index: 73, kind: func, item_index: 75, name: "f64.eq")
    OnExport(index: 74, kind: func, item_index: 76, name: "f64.ne")
    OnExport(index: 75, kind: func, item_index: 77, name: "f64.lt")
    OnExport(index: 76, kind: func, item_index: 78, name: "f64.gt")
    OnExport(index: 77, kind: func, item_index: 79, name: "f64.le")
    OnExport(index: 78, kind: func, item_index: 80, name: "f64.ge")
    OnExport(index: 79, kind: func, item_index: 81, name: "i32.clz")
    OnExport(index: 80, kind: func, item_index: 82, name: "i32.ctz")
    OnExport(index: 81, kind: func, item_index: 83, name: "i32.popcnt")
    OnExport(index: 82, kind: func, item_index: 84, name: "i32.add")
    OnExport(index: 83, kind: func, item_index: 85, name: "i32.sub")
    OnExport(index: 84, kind: func, item_index: 86, name: "i32.mul")
    OnExport(index: 85, kind: func, item_index: 87, name: "i32.div_s")
    OnExport(index: 86, kind: func, item_index: 88, name: "i32.div_u")
    OnExport(index: 87, kind: func, item_index: 89, name: "i32.rem_s")
    OnExport(index: 88, kind: func, item_index: 90, name: "i32.rem_u")
    OnExport(index: 89, kind: func, item_index: 91, name: "i32.and")
    OnExport(index: 90, kind: func, item_index: 92, name: "i32.or")
    OnExport(index: 91, kind: func, item_index: 93, name: "i32.xor")
    OnExport(index: 92, kind: func, item_index: 94, name: "i32.shl")
    OnExport(index: 93, kind: func, item_index: 95, name: "i32.shr_s")
    OnExport(index: 94, kind: func, item_index: 96, name: "i32.shr_u")
    OnExport(index: 95, kind: func, item_index: 97, name: "i32.rotl")
    OnExport(index: 96, kind: func, item_index: 98, name: "i32.rotr")
    OnExport(index: 97, kind: func, item_index: 99, name: "i64.clz")
    OnExport(index: 98, kind: func, item_index: 100, name: "i64.ctz")
    OnExport(index: 99, kind: func, item_index: 101, name: "i64.popcnt")
    OnExport(index: 100, kind: func, item_index: 102, name: "i64.add")
    OnExport(index: 101, kind: func, item_index: 103, name: "i64.sub")
    OnExport(index: 102, kind: func, item_index: 104, name: "i64.mul")
    OnExport(index: 103, kind: func, item_index: 105, name: "i64.div_s")
    OnExport(index: 104, kind: func, item_index: 106, name: "i64.div_u")
    OnExport(index: 105, kind: func, item_index: 107, name: "i64.rem_s")
    OnExport(index: 106, kind: func, item_index: 108, name: "i64.rem_u")
    OnExport(index: 107, kind: func, item_index: 109, name: "i64.and")
    OnExport(index: 108, kind: func, item_index: 110, name: "i64.or")
    OnExport(index: 109, kind: func, item_index: 111, name: "i64.xor")
    OnExport(index: 110, kind: func, item_index: 112, name: "i64.shl")
    OnExport(index: 111, kind: func, item_index: 113, name: "i64.shr_s")
    OnExport(index: 112, kind: func, item_index: 114, name: "i64.shr_u")
    OnExport(index: 113, kind: func, item_index: 115, name: "i64.rotl")
    OnExport(index: 114, kind: func, item_index: 116, name: "i64.rotr")
    OnExport(index: 115, kind: func, item_index: 117, name: "f32.abs")
    OnExport(index: 116, kind: func, item_index: 118, name: "f32.neg")
    OnExport(index: 117, kind: func, item_index: 119, name: "f32.ceil")
    OnExport(index: 118, kind: func, item_index: 120, name: "f32.floor")
    OnExport(index: 119, kind: func, item_index: 121, name: "f32.trunc")
    OnExport(index: 120, kind: func, item_index: 122, name: "f32.nearest")
    OnExport(index: 121, kind: func, item_index: 123, name: "f32.sqrt")
    OnExport(index: 122, kind: func, item_index: 124, name: "f32.add")
    OnExport(index: 123, kind: func, item_index: 125, name: "f32.sub")
    OnExport(index: 124, kind: func, item_index: 126, name: "f32.mul")
    OnExport(index: 125, kind: func, item_index: 127, name: "f32.div")
    OnExport(index: 126, kind: func, item_index: 128, name: "f32.min")
    OnExport(index: 127, kind: func, item_index: 129, name: "f32.max")
    OnExport(index: 128, kind: func, item_index: 130, name: "f32.copysign")
    OnExport(index: 129, kind: func, item_index: 131, name: "f64.abs")
    OnExport(index: 130, kind: func, item_index: 132, name: "f64.neg")
    OnExport(index: 131, kind: func, item_index: 133, name: "f64.ceil")
    OnExport(index: 132, kind: func, item_index: 134, name: "f64.floor")
    OnExport(index: 133, kind: func, item_index: 135, name: "f64.trunc")
    OnExport(index: 134, kind: func, item_index: 136, name: "f64.nearest")
    OnExport(index: 135, kind: func, item_index: 137, name: "f64.sqrt")
    OnExport(index: 136, kind: func, item_index: 138, name: "f64.add")
    OnExport(index: 137, kind: func, item_index: 139, name: "f64.sub")
    OnExport(index: 138, kind: func, item_index: 140, name: "f64.mul")
    OnExport(index: 139, kind: func, item_index: 141, name: "f64.div")
    OnExport(index: 140, kind: func, item_index: 142, name: "f64.min")
    OnExport(index: 141, kind: func, item_index: 143, name: "f64.max")
    OnExport(index: 142, kind: func, item_index: 144, name: "f64.copysign")
    OnExport(index: 143, kind: func, item_index: 145, name: "i32.wrap/i64")
    OnExport(index: 144, kind: func, item_index: 146, name: "i32.trunc_s/f32")
    OnExport(index: 145, kind: func, item_index: 147, name: "i32.trunc_u/f32")
    OnExport(index: 146, kind: func, item_index: 148, name: "i32.trunc_s/f64")
    OnExport(index: 147, kind: func, item_index: 149, name: "i32.trunc_u/f64")
    OnExport(index: 148, kind: func, item_index: 150, name: "i64.extend_s/i32")
    OnExport(index: 149, kind: func, item_index: 151, name: "i64.extend_u/i32")
    OnExport(index: 150, kind: func, item_index: 152, name: "i64.trunc_s/f32")
    OnExport(index: 151, kind: func, item_index: 153, name: "i64.trunc_u/f32")
    OnExport(index: 152, kind: func, item_index: 154, name: "i64.trunc_s/f64")
    OnExport(index: 153, kind: func, item_index: 155, name: "i64.trunc_u/f64")
    OnExport(index: 154, kind: func, item_index: 156, name: "f32.convert_s/i32")
    OnExport(index: 155, kind: func, item_index: 157, name: "f32.convert_u/i32")
    OnExport(index: 156, kind: func, item_index: 158, name: "f32.convert_s/i64")
    OnExport(index: 157, kind: func, item_index: 159, name: "f32.convert_u/i64")
    OnExport(index: 158, kind: func, item_index: 160, name: "f32.demote/f64")
    OnExport(index: 159, kind: func, item_index: 161, name: "f64.convert_s/i32")
    OnExport(index: 160, kind: func, item_index: 162, name: "f64.convert_u/i32")
    OnExport(index: 161, kind: func, item_index: 163, name: "f64.convert_s/i64")
    OnExport(index: 162, kind: func, item_index: 164, name: "f64.convert_u/i64")
    OnExport(index: 163, kind: func, item_index: 165, name: "f64.promote/f32")
    OnExport(index: 164, kind: func, item_index: 166, name: "i32.reinterpret/f32")
    OnExport(index: 165, kind: func, item_index: 167, name: "f32.reinterpret/i32")
    OnExport(index: 166, kind: func, item_index: 168, name: "i64.reinterpret/f64")
    OnExport(index: 167, kind: func, item_index: 169, name: "f64.reinterpret/i64")
    OnExport(index: 168, kind: func, item_index: 170, name: "i32.extend8_s")
    OnExport(index: 169, kind: func, item_index: 171, name: "i32.extend16_s")
    OnExport(index: 170, kind: func, item_index: 172, name: "i64.extend8_s")
    OnExport(index: 171, kind: func, item_index: 173, name: "i64.extend16_s")
    OnExport(index: 172, kind: func, item_index: 174, name: "i64.extend32_s")
    OnExport(index: 173, kind: func, item_index: 175, name: "alloca")
    OnExport(index: 174, kind: func, item_index: 176, name: "br_unless")
    OnExport(index: 175, kind: func, item_index: 177, name: "call_host")
    OnExport(index: 176, kind: func, item_index: 178, name: "data")
    OnExport(index: 177, kind: func, item_index: 179, name: "drop_keep")
    OnExport(index: 178, kind: func, item_index: 180, name: "i32.trunc_s:sat/f32")
    OnExport(index: 179, kind: func, item_index: 181, name: "i32.trunc_u:sat/f32")
    OnExport(index: 180, kind: func, item_index: 182, name: "i32.trunc_s:sat/f64")
    OnExport(index: 181, kind: func, item_index: 183, name: "i32.trunc_u:sat/f64")
    OnExport(index: 182, kind: func, item_index: 184, name: "i64.trunc_s:sat/f32")
    OnExport(index: 183, kind: func, item_index: 185, name: "i64.trunc_u:sat/f32")
    OnExport(index: 184, kind: func, item_index: 186, name: "i64.trunc_s:sat/f64")
    OnExport(index: 185, kind: func, item_index: 187, name: "i64.trunc_u:sat/f64")
    OnExport(index: 186, kind: func, item_index: 188, name: "memory.init")
    OnExport(index: 187, kind: func, item_index: 189, name: "data.drop")
    OnExport(index: 188, kind: func, item_index: 190, name: "memory.copy")
    OnExport(index: 189, kind: func, item_index: 191, name: "memory.fill")
    OnExport(index: 190, kind: func, item_index: 192, name: "table.init")
    OnExport(index: 191, kind: func, item_index: 193, name: "elem.drop")
    OnExport(index: 192, kind: func, item_index: 194, name: "table.copy")
    OnExport(index: 193, kind: func, item_index: 195, name: "v128.load")
    OnExport(index: 194, kind: func, item_index: 196, name: "v128.store")
    OnExport(index: 195, kind: func, item_index: 197, name: "v128.const")
    OnExport(index: 196, kind: func, item_index: 198, name: "i8x16.splat")
    OnExport(index: 197, kind: func, item_index: 199, name: "i8x16.extract_lane_s")
    OnExport(index: 198, kind: func, item_index: 200, name: "i8x16.extract_lane_u")
    OnExport(index: 199, kind: func, item_index: 201, name: "i8x16.replace_lane")
    OnExport(index: 200, kind: func, item_index: 202, name: "i16x8.splat")
    OnExport(index: 201, kind: func, item_index: 203, name: "i16x8.extract_lane_s")
    OnExport(index: 202, kind: func, item_index: 204, name: "i16x8.extract_lane_u")
    OnExport(index: 203, kind: func, item_index: 205, name: "i16x8.replace_lane")
    OnExport(index: 204, kind: func, item_index: 206, name: "i32x4.splat")
    OnExport(index: 205, kind: func, item_index: 207, name: "i32x4.extract_lane")
    OnExport(index: 206, kind: func, item_index: 208, name: "i32x4.replace_lane")
    OnExport(index: 207, kind: func, item_index: 209, name: "i64x2.splat")
    OnExport(index: 208, kind: func, item_index: 210, name: "i64x2.extract_lane")
    OnExport(index: 209, kind: func, item_index: 211, name: "i64x2.replace_lane")
    OnExport(index: 210, kind: func, item_index: 212, name: "f32x4.splat")
    OnExport(index: 211, kind: func, item_index: 213, name: "f32x4.extract_lane")
    OnExport(index: 212, kind: func, item_index: 214, name: "f32x4.replace_lane")
    OnExport(index: 213, kind: func, item_index: 215, name: "f64x2.splat")
    OnExport(index: 214, kind: func, item_index: 216, name: "f64x2.extract_lane")
    OnExport(index: 215, kind: func, item_index: 217, name: "f64x2.replace_lane")
    OnExport(index: 216, kind: func, item_index: 218, name: "i8x16.eq")
    OnExport(index: 217, kind: func, item_index: 219, name: "i8x16.ne")
    OnExport(index: 218, kind: func, item_index: 220, name: "i8x16.lt_s")
    OnExport(index: 219, kind: func, item_index: 221, name: "i8x16.lt_u")
    OnExport(index: 220, kind: func, item_index: 222, name: "i8x16.gt_s")
    OnExport(index: 221, kind: func, item_index: 223, name: "i8x16.gt_u")
    OnExport(index: 222, kind: func, item_index: 224, name: "i8x16.le_s")
    OnExport(index: 223, kind: func, item_index: 225, name: "i8x16.le_u")
    OnExport(index: 224, kind: func, item_index: 226, name: "i8x16.ge_s")
    OnExport(index: 225, kind: func, item_index: 227, name: "i8x16.ge_u")
    OnExport(index: 226, kind: func, item_index: 228, name: "i16x8.eq")
    OnExport(index: 227, kind: func, item_index: 229, name: "i16x8.ne")
    OnExport(index: 228, kind: func, item_index: 230, name: "i16x8.lt_s")
    OnExport(index: 229, kind: func, item_index: 231, name: "i16x8.lt_u")
    OnExport(index: 230, kind: func, item_index: 232, name: "i16x8.gt_s")
    OnExport(index: 231, kind: func, item_index: 233, name: "i16x8.gt_u")
    OnExport(index: 232, kind: func, item_index: 234, name: "i16x8.le_s")
    OnExport(index: 233, kind: func, item_index: 235, name: "i16x8.le_u")
    OnExport(index: 234, kind: func, item_index: 236, name: "i16x8.ge_s")
    OnExport(index: 235, kind: func, item_index: 237, name: "i16x8.ge_u")
    OnExport(index: 236, kind: func, item_index: 238, name: "i32x4.eq")
    OnExport(index: 237, kind: func, item_index: 239, name: "i32x4.ne")
    OnExport(index: 238, kind: func, item_index: 240, name: "i32x4.lt_s")
    OnExport(index: 239, kind: func, item_index: 241, name: "i32x4.lt_u")
    OnExport(index: 240, kind: func, item_index: 242, name: "i32x4.gt_s")
    OnExport(index: 241, kind: func, item_index: 243, name: "i32x4.gt_u")
    OnExport(index: 242, kind: func, item_index: 244, name: "i32x4.le_s")
    OnExport(index: 243, kind: func, item_index: 245, name: "i32x4.le_u")
    OnExport(index: 244, kind: func, item_index: 246, name: "i32x4.ge_s")
    OnExport(index: 245, kind: func, item_index: 247, name: "i32x4.ge_u")
    OnExport(index: 246, kind: func, item_index: 248, name: "f32x4.eq")
    OnExport(index: 247, kind: func, item_index: 249, name: "f32x4.ne")
    OnExport(index: 248, kind: func, item_index: 250, name: "f32x4.lt")
    OnExport(index: 249, kind: func, item_index: 251, name: "f32x4.gt")
    OnExport(index: 250, kind: func, item_index: 252, name: "f32x4.le")
    OnExport(index: 251, kind: func, item_index: 253, name: "f32x4.ge")
    OnExport(index: 252, kind: func, item_index: 254, name: "f64x2.eq")
    OnExport(index: 253, kind: func, item_index: 255, name: "f64x2.ne")
    OnExport(index: 254, kind: func, item_index: 256, name: "f64x2.lt")
    OnExport(index: 255, kind: func, item_index: 257, name: "f64x2.gt")
    OnExport(index: 256, kind: func, item_index: 258, name: "f64x2.le")
    OnExport(index: 257, kind: func, item_index: 259, name: "f64x2.ge")
    OnExport(index: 258, kind: func, item_index: 260, name: "v128.not")
    OnExport(index: 259, kind: func, item_index: 261, name: "v128.and")
    OnExport(index: 260, kind: func, item_index: 262, name: "v128.or")
    OnExport(index: 261, kind: func, item_index: 263, name: "v128.xor")
    OnExport(index: 262, kind: func, item_index: 264, name: "v128.bitselect")
    OnExport(index: 263, kind: func, item_index: 265, name: "i8x16.neg")
    OnExport(index: 264, kind: func, item_index: 266, name: "i8x16.any_true")
    OnExport(index: 265, kind: func, item_index: 267, name: "i8x16.all_true")
    OnExport(index: 266, kind: func, item_index: 268, name: "i8x16.shl")
    OnExport(index: 267, kind: func, item_index: 269, name: "i8x16.shr_s")
    OnExport(index: 268, kind: func, item_index: 270, name: "i8x16.shr_u")
    OnExport(index: 269, kind: func, item_index: 271, name: "i8x16.add")
    OnExport(index: 270, kind: func, item_index: 272, name: "i8x16.add_saturate_s")
    OnExport(index: 271, kind: func, item_index: 273, name: "i8x16.add_saturate_u")
    OnExport(index: 272, kind: func, item_index: 274, name: "i8x16.sub")
    OnExport(index: 273, kind: func, item_index: 275, name: "i8x16.sub_saturate_s")
    OnExport(index: 274, kind: func, item_index: 276, name: "i8x16.sub_saturate_u")
    OnExport(index: 275, kind: func, item_index: 277, name: "i8x16.min_s")
    OnExport(index: 276, kind: func, item_index: 278, name: "i8x16.min_u")
    OnExport(index: 277, kind: func, item_index: 279, name: "i8x16.max_s")
    OnExport(index: 278, kind: func, item_index: 280, name: "i8x16.max_u")
    OnExport(index: 279, kind: func, item_index: 281, name: "i16x8.neg")
    OnExport(index: 280, kind: func, item_index: 282, name: "i16x8.any_true")
    OnExport(index: 281, kind: func, item_index: 283, name: "i16x8.all_true")
    OnExport(index: 282, kind: func, item_index: 284, name: "i16x8.shl")
    OnExport(index: 283, kind: func, item_index: 285, name: "i16x8.shr_s")
    OnExport(index: 284, kind: func, item_index: 286, name: "i16x8.shr_u")
    OnExport(index: 285, kind: func, item_index: 287, name: "i16x8.add")
    OnExport(index: 286, kind: func, item_index: 288, name: "i16x8.add_saturate_s")
    OnExport(index: 287, kind: func, item_index: 289, name: "i16x8.add_saturate_u")
    OnExport(index: 288, kind: func, item_index: 290, name: "i16x8.sub")
    OnExport(index: 289, kind: func, item_index: 291, name: "i16x8.sub_saturate_s")
    OnExport(index: 290, kind: func, item_index: 292, name: "i16x8.sub_saturate_u")
    OnExport(index: 291, kind: func, item_index: 293, name: "i16x8.mul")
    OnExport(index: 292, kind: func, item_index: 294, name: "i16x8.min_s")
    OnExport(index: 293, kind: func, item_index: 295, name: "i16x8.min_u")
    OnExport(index: 294, kind: func, item_index: 296, name: "i16x8.max_s")
    OnExport(index: 295, kind: func, item_index: 297, name: "i16x8.max_u")
    OnExport(index: 296, kind: func, item_index: 298, name: "i32x4.neg")
    OnExport(index: 297, kind: func, item_index: 299, name: "i32x4.any_true")
    OnExport(index: 298, kind: func, item_index: 300, name: "i32x4.all_true")
    OnExport(index: 299, kind: func, item_index: 301, name: "i32x4.shl")
    OnExport(index: 300, kind: func, item_index: 302, name: "i32x4.shr_s")
    OnExport(index: 301, kind: func, item_index: 303, name: "i32x4.shr_u")
    OnExport(index: 302, kind: func, item_index: 304, name: "i32x4.add")
    OnExport(index: 303, kind: func, item_index: 305, name: "i32x4.sub")
    OnExport(index: 304, kind: func, item_index: 306, name: "i32x4.mul")
    OnExport(index: 305, kind: func, item_index: 307, name: "i32x4.min_s")
    OnExport(index: 306, kind: func, item_index: 308, name: "i32x4.min_u")
    OnExport(index: 307, kind: func, item_index: 309, name: "i32x4.max_s")
    OnExport(index: 308, kind: func, item_index: 310, name: "i32x4.max_u")
    OnExport(index: 309, kind: func, item_index: 311, name: "i64x2.neg")
    OnExport(index: 310, kind: func, item_index: 312, name: "i64x2.shl")
    OnExport(index: 311, kind: func, item_index: 313, name: "i64x2.shr_s")
    OnExport(index: 312, kind: func, item_index: 314, name: "i64x2.shr_u")
    OnExport(index: 313, kind: func, item_index: 315, name: "i64x2.add")
    OnExport(index: 314, kind: func, item_index: 316, name: "i64x2.sub")
    OnExport(index: 315, kind: func, item_index: 317, name: "i64x2.mul")
    OnExport(index: 316, kind: func, item_index: 318, name: "f32x4.abs")
    OnExport(index: 317, kind: func, item_index: 319, name: "f32x4.neg")
    OnExport(index: 318, kind: func, item_index: 320, name: "f32x4.sqrt")
    OnExport(index: 319, kind: func, item_index: 321, name: "f32x4.add")
    OnExport(index: 320, kind: func, item_index: 322, name: "f32x4.sub")
    OnExport(index: 321, kind: func, item_index: 323, name: "f32x4.mul")
    OnExport(index: 322, kind: func, item_index: 324, name: "f32x4.div")
    OnExport(index: 323, kind: func, item_index: 325, name: "f32x4.min")
    OnExport(index: 324, kind: func, item_index: 326, name: "f32x4.max")
    OnExport(index: 325, kind: func, item_index: 327, name: "f64x2.abs")
    OnExport(index: 326, kind: func, item_index: 328, name: "f64x2.neg")
    OnExport(index: 327, kind: func, item_index: 329, name: "f64x2.sqrt")
    OnExport(index: 328, kind: func, item_index: 330, name: "f64x2.add")
    OnExport(index: 329, kind: func, item_index: 331, name: "f64x2.sub")
    OnExport(index: 330, kind: func, item_index: 332, name: "f64x2.mul")
    OnExport(index: 331, kind: func, item_index: 333, name: "f64x2.div")
    OnExport(index: 332, kind: func, item_index: 334, name: "f64x2.min")
    OnExport(index: 333, kind: func, item_index: 335, name: "f64x2.max")
    OnExport(index: 334, kind: func, item_index: 336, name: "i32x4.trunc_sat_f32x4_s")
    OnExport(index: 335, kind: func, item_index: 337, name: "i32x4.trunc_sat_f32x4_u")
    OnExport(index: 336, kind: func, item_index: 338, name: "f32x4.convert_i32x4_s")
    OnExport(index: 337, kind: func, item_index: 339, name: "f32x4.convert_i32x4_u")
    OnExport(index: 338, kind: func, item_index: 340, name: "v8x16.swizzle")
    OnExport(index: 339, kind: func, item_index: 341, name: "v8x16.shuffle")
    OnExport(index: 340, kind: func, item_index: 342, name: "v8x16.load_splat")
    OnExport(index: 341, kind: func, item_index: 343, name: "v16x8.load_splat")
    OnExport(index: 342, kind: func, item_index: 344, name: "v32x4.load_splat")
    OnExport(index: 343, kind: func, item_index: 345, name: "v64x2.load_splat")
    OnExport(index: 344, kind: func, item_index: 346, name: "i8x16.narrow_i16x8_s")
    OnExport(index: 345, kind: func, item_index: 347, name: "i8x16.narrow_i16x8_u")
    OnExport(index: 346, kind: func, item_index: 348, name: "i16x8.narrow_i32x4_s")
    OnExport(index: 347, kind: func, item_index: 349, name: "i16x8.narrow_i32x4_u")
    OnExport(index: 348, kind: func, item_index: 350, name: "i16x8.widen_low_i8x16_s")
    OnExport(index: 349, kind: func, item_index: 351, name: "i16x8.widen_high_i8x16_s")
    OnExport(index: 350, kind: func, item_index: 352, name: "i16x8.widen_low_i8x16_u")
    OnExport(index: 351, kind: func, item_index: 353, name: "i16x8.widen_high_i8x16_u")
    OnExport(index: 352, kind: func, item_index: 354, name: "i32x4.widen_low_i16x8_s")
    OnExport(index: 353, kind: func, item_index: 355, name: "i32x4.widen_high_i16x8_s")
    OnExport(index: 354, kind: func, item_index: 356, name: "i32x4.widen_low_i16x8_u")
    OnExport(index: 355, kind: func, item_index: 357, name: "i32x4.widen_high_i16x8_u")
    OnExport(index: 356, kind: func, item_index: 358, name: "i16x8.load8x8_s")
    OnExport(index: 357, kind: func, item_index: 359, name: "i16x8.load8x8_u")
    OnExport(index: 358, kind: func, item_index: 360, name: "i32x4.load16x4_s")
    OnExport(index: 359, kind: func, item_index: 361, name: "i32x4.load16x4_u")
    OnExport(index: 360, kind: func, item_index: 362, name: "i64x2.load32x2_s")
    OnExport(index: 361, kind: func, item_index: 363, name: "i64x2.load32x2_u")
    OnExport(index: 362, kind: func, item_index: 364, name: "v128.andnot")
    OnExport(index: 363, kind: func, item_index: 365, name: "i8x16.avgr_u")
    OnExport(index: 364, kind: func, item_index: 366, name: "i16x8.avgr_u")
    OnExport(index: 365, kind: func, item_index: 367, name: "atomic.notify")
    OnExport(index: 366, kind: func, item_index: 368, name: "i32.atomic.wait")
    OnExport(index: 367, kind: func, item_index: 369, name: "i64.atomic.wait")
    OnExport(index: 368, kind: func, item_index: 370, name: "i32.atomic.load")
    OnExport(index: 369, kind: func, item_index: 371, name: "i64.atomic.load")
    OnExport(index: 370, kind: func, item_index: 372, name: "i32.atomic.load8_u")
    OnExport(index: 371, kind: func, item_index: 373, name: "i32.atomic.load16_u")
    OnExport(index: 372, kind: func, item_index: 374, name: "i64.atomic.load8_u")
    OnExport(index: 373, kind: func, item_index: 375, name: "i64.atomic.load16_u")
    OnExport(index: 374, kind: func, item_index: 376, name: "i64.atomic.load32_u")
    OnExport(index: 375, kind: func, item_index: 377, name: "i32.atomic.store")
    OnExport(index: 376, kind: func, item_index: 378, name: "i64.atomic.store")
    OnExport(index: 377, kind: func, item_index: 379, name: "i32.atomic.store8")
    OnExport(index: 378, kind: func, item_index: 380, name: "i32.atomic.store16")
    OnExport(index: 379, kind: func, item_index: 381, name: "i64.atomic.store8")
    OnExport(index: 380, kind: func, item_index: 382, name: "i64.atomic.store16")
    OnExport(index: 381, kind: func, item_index: 383, name: "i64.atomic.store32")
    OnExport(index: 382, kind: func, item_index: 384, name: "i32.atomic.rmw.add")
    OnExport(index: 383, kind: func, item_index: 385, name: "i64.atomic.rmw.add")
    OnExport(index: 384, kind: func, item_index: 386, name: "i32.atomic.rmw8.add_u")
    OnExport(index: 385, kind: func, item_index: 387, name: "i32.atomic.rmw16.add_u")
    OnExport(index: 386, kind: func, item_index: 388, name: "i64.atomic.rmw8.add_u")
    OnExport(index: 387, kind: func, item_index: 389, name: "i64.atomic.rmw16.add_u")
    OnExport(index: 388, kind: func, item_index: 390, name: "i64.atomic.rmw32.add_u")
    OnExport(index: 389, kind: func, item_index: 391, name: "i32.atomic.rmw.sub")
    OnExport(index: 390, kind: func, item_index: 392, name: "i64.atomic.rmw.sub")
    OnExport(index: 391, kind: func, item_index: 393, name: "i32.atomic.rmw8.sub_u")
    OnExport(index: 392, kind: func, item_index: 394, name: "i32.atomic.rmw16.sub_u")
    OnExport(index: 393, kind: func, item_index: 395, name: "i64.atomic.rmw8.sub_u")
    OnExport(index: 394, kind: func, item_index: 396, name: "i64.atomic.rmw16.sub_u")
    OnExport(index: 395, kind: func, item_index: 397, name: "i64.atomic.rmw32.sub_u")
    OnExport(index: 396, kind: func, item_index: 398, name: "i32.atomic.rmw.and")
    OnExport(index: 397, kind: func, item_index: 399, name: "i64.atomic.rmw.and")
    OnExport(index: 398, kind: func, item_index: 400, name: "i32.atomic.rmw8.and_u")
    OnExport(index: 399, kind: func, item_index: 401, name: "i32.atomic.rmw16.and_u")
    OnExport(index: 400, kind: func, item_index: 402, name: "i64.atomic.rmw8.and_u")
    OnExport(index: 401, kind: func, item_index: 403, name: "i64.atomic.rmw16.and_u")
    OnExport(index: 402, kind: func, item_index: 404, name: "i64.atomic.rmw32.and_u")
    OnExport(index: 403, kind: func, item_index: 405, name: "i32.atomic.rmw.or")
    OnExport(index: 404, kind: func, item_index: 406, name: "i64.atomic.rmw.or")
    OnExport(index: 405, kind: func, item_index: 407, name: "i32.atomic.rmw8.or_u")
    OnExport(index: 406, kind: func, item_index: 408, name: "i32.atomic.rmw16.or_u")
    OnExport(index: 407, kind: func, item_index: 409, name: "i64.atomic.rmw8.or_u")
    OnExport(index: 408, kind: func, item_index: 410, name: "i64.atomic.rmw16.or_u")
    OnExport(index: 409, kind: func, item_index: 411, name: "i64.atomic.rmw32.or_u")
    OnExport(index: 410, kind: func, item_index: 412, name: "i32.atomic.rmw.xor")
    OnExport(index: 411, kind: func, item_index: 413, name: "i64.atomic.rmw.xor")
    OnExport(index: 412, kind: func, item_index: 414, name: "i32.atomic.rmw8.xor_u")
    OnExport(index: 413, kind: func, item_index: 415, name: "i32.atomic.rmw16.xor_u")
    OnExport(index: 414, kind: func, item_index: 416, name: "i64.atomic.rmw8.xor_u")
    OnExport(index: 415, kind: func, item_index: 417, name: "i64.atomic.rmw16.xor_u")
    OnExport(index: 416, kind: func, item_index: 418, name: "i64.atomic.rmw32.xor_u")
    OnExport(index: 417, kind: func, item_index: 419, name: "i32.atomic.rmw.xchg")
    OnExport(index: 418, kind: func, item_index: 420, name: "i64.atomic.rmw.xchg")
    OnExport(index: 419, kind: func, item_index: 421, name: "i32.atomic.rmw8.xchg_u")
    OnExport(index: 420, kind: func, item_index: 422, name: "i32.atomic.rmw16.xchg_u")
    OnExport(index: 421, kind: func, item_index: 423, name: "i64.atomic.rmw8.xchg_u")
    OnExport(index: 422, kind: func, item_index: 424, name: "i64.atomic.rmw16.xchg_u")
    OnExport(index: 423, kind: func, item_index: 425, name: "i64.atomic.rmw32.xchg_u")
    OnExport(index: 424, kind: func, item_index: 426, name: "i32.atomic.rmw.cmpxchg")
    OnExport(index: 425, kind: func, item_index: 427, name: "i64.atomic.rmw.cmpxchg")
    OnExport(index: 426, kind: func, item_index: 428, name: "i32.atomic.rmw8.cmpxchg_u")
    OnExport(index: 427, kind: func, item_index: 429, name: "i32.atomic.rmw16.cmpxchg_u")
    OnExport(index: 428, kind: func, item_index: 430, name: "i64.atomic.rmw8.cmpxchg_u")
    OnExport(index: 429, kind: func, item_index: 431, name: "i64.atomic.rmw16.cmpxchg_u")
    OnExport(index: 430, kind: func, item_index: 432, name: "i64.atomic.rmw32.cmpxchg_u")
  EndExportSection
  BeginElemSection(11)
    OnElemSegmentCount(2)
    BeginElemSegment(index: 0, table_index: 0, flags: 0, elem_type: funcref)
    BeginElemSegmentInitExpr(0)
    OnInitExprI32ConstExpr(index: 0, value: 0)
    EndElemSegmentInitExpr(0)
    OnElemSegmentElemExprCount(index: 0, count: 2)
    OnElemSegmentElemExpr_RefFunc(index: 0, func_index: 1)
    OnElemSegmentElemExpr_RefFunc(index: 0, func_index: 1)
    EndElemSegment(0)
    BeginElemSegment(index: 1, table_index: 0, flags: 1, elem_type: funcref)
    OnElemSegmentElemExprCount(index: 1, count: 0)
    EndElemSegment(1)
  EndElemSection
  BeginDataCountSection(1)
    OnDataCount(1)
  EndDataCountSection
  BeginCodeSection(8650)
    OnFunctionBodyCount(432)
    BeginFunctionBody(1, size:2)
    OnLocalDeclCount(0)
    EndFunctionBody(1)
    BeginFunctionBody(2, size:3)
    OnLocalDeclCount(0)
    OnUnreachableExpr
    EndFunctionBody(2)
    BeginFunctionBody(3, size:4)
    OnLocalDeclCount(0)
    OnBrExpr(depth: 0)
    EndFunctionBody(3)
    BeginFunctionBody(4, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnBrTableExpr(num_targets: 0, depths: [], default: 0)
    EndFunctionBody(4)
    BeginFunctionBody(5, size:3)
    OnLocalDeclCount(0)
    OnReturnExpr
    EndFunctionBody(5)
    BeginFunctionBody(6, size:4)
    OnLocalDeclCount(0)
    OnCallExpr(func_index: 1)
    EndFunctionBody(6)
    BeginFunctionBody(7, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnCallIndirectExpr(sig_index: 0, table_index: 0)
    EndFunctionBody(7)
    BeginFunctionBody(8, size:4)
    OnLocalDeclCount(0)
    OnReturnCallExpr(func_index: 1)
    EndFunctionBody(8)
    BeginFunctionBody(9, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnReturnCallIndirectExpr(sig_index: 0, table_index: 0)
    EndFunctionBody(9)
    BeginFunctionBody(10, size:5)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnDropExpr
    EndFunctionBody(10)
    BeginFunctionBody(11, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnSelectExpr(return_type: any)
    OnDropExpr
    EndFunctionBody(11)
    BeginFunctionBody(12, size:12)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnSelectExpr(return_type: i32)
    OnDropExpr
    EndFunctionBody(12)
    BeginFunctionBody(13, size:7)
    OnLocalDeclCount(1)
    OnLocalDecl(index: 0, count: 1, type: i32)
    OnLocalGetExpr(index: 0)
    OnDropExpr
    EndFunctionBody(13)
    BeginFunctionBody(14, size:8)
    OnLocalDeclCount(1)
    OnLocalDecl(index: 0, count: 1, type: i32)
    OnI32ConstExpr(1 (0x1))
    OnLocalSetExpr(index: 0)
    EndFunctionBody(14)
    BeginFunctionBody(15, size:9)
    OnLocalDeclCount(1)
    OnLocalDecl(index: 0, count: 1, type: i32)
    OnI32ConstExpr(1 (0x1))
    OnLocalTeeExpr(index: 0)
    OnDropExpr
    EndFunctionBody(15)
    BeginFunctionBody(16, size:5)
    OnLocalDeclCount(0)
    OnGlobalGetExpr(index: 0)
    OnDropExpr
    EndFunctionBody(16)
    BeginFunctionBody(17, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnGlobalSetExpr(index: 0)
    EndFunctionBody(17)
    BeginFunctionBody(18, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load" (40), align log2: 2, offset: 2)
    OnDropExpr
    EndFunctionBody(18)
    BeginFunctionBody(19, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load" (41), align log2: 3, offset: 2)
    OnDropExpr
    EndFunctionBody(19)
    BeginFunctionBody(20, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "f32.load" (42), align log2: 2, offset: 2)
    OnDropExpr
    EndFunctionBody(20)
    BeginFunctionBody(21, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "f64.load" (43), align log2: 3, offset: 2)
    OnDropExpr
    EndFunctionBody(21)
    BeginFunctionBody(22, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load8_s" (44), align log2: 0, offset: 2)
    OnDropExpr
    EndFunctionBody(22)
    BeginFunctionBody(23, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load8_u" (45), align log2: 0, offset: 2)
    OnDropExpr
    EndFunctionBody(23)
    BeginFunctionBody(24, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load16_s" (46), align log2: 1, offset: 2)
    OnDropExpr
    EndFunctionBody(24)
    BeginFunctionBody(25, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load16_u" (47), align log2: 1, offset: 2)
    OnDropExpr
    EndFunctionBody(25)
    BeginFunctionBody(26, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load8_s" (48), align log2: 0, offset: 2)
    OnDropExpr
    EndFunctionBody(26)
    BeginFunctionBody(27, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load8_u" (49), align log2: 0, offset: 2)
    OnDropExpr
    EndFunctionBody(27)
    BeginFunctionBody(28, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load16_s" (50), align log2: 1, offset: 2)
    OnDropExpr
    EndFunctionBody(28)
    BeginFunctionBody(29, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load16_u" (51), align log2: 1, offset: 2)
    OnDropExpr
    EndFunctionBody(29)
    BeginFunctionBody(30, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load32_s" (52), align log2: 2, offset: 2)
    OnDropExpr
    EndFunctionBody(30)
    BeginFunctionBody(31, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load32_u" (53), align log2: 2, offset: 2)
    OnDropExpr
    EndFunctionBody(31)
    BeginFunctionBody(32, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i32.store" (54), align log2: 2, offset: 2)
    EndFunctionBody(32)
    BeginFunctionBody(33, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i64.store" (55), align log2: 3, offset: 2)
    EndFunctionBody(33)
    BeginFunctionBody(34, size:12)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnF32ConstExpr(2 (0x0440000000))
    OnStoreExpr(opcode: "f32.store" (56), align log2: 2, offset: 2)
    EndFunctionBody(34)
    BeginFunctionBody(35, size:16)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnStoreExpr(opcode: "f64.store" (57), align log2: 3, offset: 2)
    EndFunctionBody(35)
    BeginFunctionBody(36, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i32.store8" (58), align log2: 0, offset: 2)
    EndFunctionBody(36)
    BeginFunctionBody(37, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i32.store16" (59), align log2: 1, offset: 2)
    EndFunctionBody(37)
    BeginFunctionBody(38, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i64.store8" (60), align log2: 0, offset: 2)
    EndFunctionBody(38)
    BeginFunctionBody(39, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i64.store16" (61), align log2: 1, offset: 2)
    EndFunctionBody(39)
    BeginFunctionBody(40, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i64.store32" (62), align log2: 2, offset: 2)
    EndFunctionBody(40)
    BeginFunctionBody(41, size:5)
    OnLocalDeclCount(0)
    OnMemorySizeExpr
    OnDropExpr
    EndFunctionBody(41)
    BeginFunctionBody(42, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnMemoryGrowExpr
    OnDropExpr
    EndFunctionBody(42)
    BeginFunctionBody(43, size:5)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnDropExpr
    EndFunctionBody(43)
    BeginFunctionBody(44, size:5)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnDropExpr
    EndFunctionBody(44)
    BeginFunctionBody(45, size:8)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnDropExpr
    EndFunctionBody(45)
    BeginFunctionBody(46, size:12)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnDropExpr
    EndFunctionBody(46)
    BeginFunctionBody(47, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("i32.eqz" (69))
    OnDropExpr
    EndFunctionBody(47)
    BeginFunctionBody(48, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.eq" (70))
    OnDropExpr
    EndFunctionBody(48)
    BeginFunctionBody(49, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.ne" (71))
    OnDropExpr
    EndFunctionBody(49)
    BeginFunctionBody(50, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.lt_s" (72))
    OnDropExpr
    EndFunctionBody(50)
    BeginFunctionBody(51, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.lt_u" (73))
    OnDropExpr
    EndFunctionBody(51)
    BeginFunctionBody(52, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.gt_s" (74))
    OnDropExpr
    EndFunctionBody(52)
    BeginFunctionBody(53, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.gt_u" (75))
    OnDropExpr
    EndFunctionBody(53)
    BeginFunctionBody(54, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.le_s" (76))
    OnDropExpr
    EndFunctionBody(54)
    BeginFunctionBody(55, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.le_u" (77))
    OnDropExpr
    EndFunctionBody(55)
    BeginFunctionBody(56, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.ge_s" (78))
    OnDropExpr
    EndFunctionBody(56)
    BeginFunctionBody(57, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.ge_u" (79))
    OnDropExpr
    EndFunctionBody(57)
    BeginFunctionBody(58, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("i64.eqz" (80))
    OnDropExpr
    EndFunctionBody(58)
    BeginFunctionBody(59, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.eq" (81))
    OnDropExpr
    EndFunctionBody(59)
    BeginFunctionBody(60, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.ne" (82))
    OnDropExpr
    EndFunctionBody(60)
    BeginFunctionBody(61, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.lt_s" (83))
    OnDropExpr
    EndFunctionBody(61)
    BeginFunctionBody(62, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.lt_u" (84))
    OnDropExpr
    EndFunctionBody(62)
    BeginFunctionBody(63, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.gt_s" (85))
    OnDropExpr
    EndFunctionBody(63)
    BeginFunctionBody(64, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.gt_u" (86))
    OnDropExpr
    EndFunctionBody(64)
    BeginFunctionBody(65, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.le_s" (87))
    OnDropExpr
    EndFunctionBody(65)
    BeginFunctionBody(66, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.le_u" (88))
    OnDropExpr
    EndFunctionBody(66)
    BeginFunctionBody(67, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.ge_s" (89))
    OnDropExpr
    EndFunctionBody(67)
    BeginFunctionBody(68, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.ge_u" (90))
    OnDropExpr
    EndFunctionBody(68)
    BeginFunctionBody(69, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.eq" (91))
    OnDropExpr
    EndFunctionBody(69)
    BeginFunctionBody(70, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.ne" (92))
    OnDropExpr
    EndFunctionBody(70)
    BeginFunctionBody(71, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.lt" (93))
    OnDropExpr
    EndFunctionBody(71)
    BeginFunctionBody(72, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.gt" (94))
    OnDropExpr
    EndFunctionBody(72)
    BeginFunctionBody(73, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.le" (95))
    OnDropExpr
    EndFunctionBody(73)
    BeginFunctionBody(74, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.ge" (96))
    OnDropExpr
    EndFunctionBody(74)
    BeginFunctionBody(75, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.eq" (97))
    OnDropExpr
    EndFunctionBody(75)
    BeginFunctionBody(76, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.ne" (98))
    OnDropExpr
    EndFunctionBody(76)
    BeginFunctionBody(77, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.lt" (99))
    OnDropExpr
    EndFunctionBody(77)
    BeginFunctionBody(78, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.gt" (100))
    OnDropExpr
    EndFunctionBody(78)
    BeginFunctionBody(79, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.le" (101))
    OnDropExpr
    EndFunctionBody(79)
    BeginFunctionBody(80, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.ge" (102))
    OnDropExpr
    EndFunctionBody(80)
    BeginFunctionBody(81, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.clz" (103))
    OnDropExpr
    EndFunctionBody(81)
    BeginFunctionBody(82, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.ctz" (104))
    OnDropExpr
    EndFunctionBody(82)
    BeginFunctionBody(83, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.popcnt" (105))
    OnDropExpr
    EndFunctionBody(83)
    BeginFunctionBody(84, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.add" (106))
    OnDropExpr
    EndFunctionBody(84)
    BeginFunctionBody(85, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.sub" (107))
    OnDropExpr
    EndFunctionBody(85)
    BeginFunctionBody(86, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.mul" (108))
    OnDropExpr
    EndFunctionBody(86)
    BeginFunctionBody(87, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.div_s" (109))
    OnDropExpr
    EndFunctionBody(87)
    BeginFunctionBody(88, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.div_u" (110))
    OnDropExpr
    EndFunctionBody(88)
    BeginFunctionBody(89, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.rem_s" (111))
    OnDropExpr
    EndFunctionBody(89)
    BeginFunctionBody(90, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.rem_u" (112))
    OnDropExpr
    EndFunctionBody(90)
    BeginFunctionBody(91, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.and" (113))
    OnDropExpr
    EndFunctionBody(91)
    BeginFunctionBody(92, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.or" (114))
    OnDropExpr
    EndFunctionBody(92)
    BeginFunctionBody(93, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.xor" (115))
    OnDropExpr
    EndFunctionBody(93)
    BeginFunctionBody(94, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.shl" (116))
    OnDropExpr
    EndFunctionBody(94)
    BeginFunctionBody(95, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.shr_s" (117))
    OnDropExpr
    EndFunctionBody(95)
    BeginFunctionBody(96, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.shr_u" (118))
    OnDropExpr
    EndFunctionBody(96)
    BeginFunctionBody(97, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.rotl" (119))
    OnDropExpr
    EndFunctionBody(97)
    BeginFunctionBody(98, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.rotr" (120))
    OnDropExpr
    EndFunctionBody(98)
    BeginFunctionBody(99, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.clz" (121))
    OnDropExpr
    EndFunctionBody(99)
    BeginFunctionBody(100, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.ctz" (122))
    OnDropExpr
    EndFunctionBody(100)
    BeginFunctionBody(101, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.popcnt" (123))
    OnDropExpr
    EndFunctionBody(101)
    BeginFunctionBody(102, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.add" (124))
    OnDropExpr
    EndFunctionBody(102)
    BeginFunctionBody(103, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.sub" (125))
    OnDropExpr
    EndFunctionBody(103)
    BeginFunctionBody(104, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.mul" (126))
    OnDropExpr
    EndFunctionBody(104)
    BeginFunctionBody(105, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.div_s" (127))
    OnDropExpr
    EndFunctionBody(105)
    BeginFunctionBody(106, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.div_u" (128))
    OnDropExpr
    EndFunctionBody(106)
    BeginFunctionBody(107, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.rem_s" (129))
    OnDropExpr
    EndFunctionBody(107)
    BeginFunctionBody(108, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.rem_u" (130))
    OnDropExpr
    EndFunctionBody(108)
    BeginFunctionBody(109, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.and" (131))
    OnDropExpr
    EndFunctionBody(109)
    BeginFunctionBody(110, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.or" (132))
    OnDropExpr
    EndFunctionBody(110)
    BeginFunctionBody(111, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.xor" (133))
    OnDropExpr
    EndFunctionBody(111)
    BeginFunctionBody(112, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.shl" (134))
    OnDropExpr
    EndFunctionBody(112)
    BeginFunctionBody(113, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.shr_s" (135))
    OnDropExpr
    EndFunctionBody(113)
    BeginFunctionBody(114, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.shr_u" (136))
    OnDropExpr
    EndFunctionBody(114)
    BeginFunctionBody(115, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.rotl" (137))
    OnDropExpr
    EndFunctionBody(115)
    BeginFunctionBody(116, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.rotr" (138))
    OnDropExpr
    EndFunctionBody(116)
    BeginFunctionBody(117, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.abs" (139))
    OnDropExpr
    EndFunctionBody(117)
    BeginFunctionBody(118, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.neg" (140))
    OnDropExpr
    EndFunctionBody(118)
    BeginFunctionBody(119, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.ceil" (141))
    OnDropExpr
    EndFunctionBody(119)
    BeginFunctionBody(120, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.floor" (142))
    OnDropExpr
    EndFunctionBody(120)
    BeginFunctionBody(121, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.trunc" (143))
    OnDropExpr
    EndFunctionBody(121)
    BeginFunctionBody(122, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.nearest" (144))
    OnDropExpr
    EndFunctionBody(122)
    BeginFunctionBody(123, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.sqrt" (145))
    OnDropExpr
    EndFunctionBody(123)
    BeginFunctionBody(124, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.add" (146))
    OnDropExpr
    EndFunctionBody(124)
    BeginFunctionBody(125, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.sub" (147))
    OnDropExpr
    EndFunctionBody(125)
    BeginFunctionBody(126, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.mul" (148))
    OnDropExpr
    EndFunctionBody(126)
    BeginFunctionBody(127, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.div" (149))
    OnDropExpr
    EndFunctionBody(127)
    BeginFunctionBody(128, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.min" (150))
    OnDropExpr
    EndFunctionBody(128)
    BeginFunctionBody(129, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.max" (151))
    OnDropExpr
    EndFunctionBody(129)
    BeginFunctionBody(130, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.copysign" (152))
    OnDropExpr
    EndFunctionBody(130)
    BeginFunctionBody(131, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.abs" (153))
    OnDropExpr
    EndFunctionBody(131)
    BeginFunctionBody(132, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.neg" (154))
    OnDropExpr
    EndFunctionBody(132)
    BeginFunctionBody(133, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.ceil" (155))
    OnDropExpr
    EndFunctionBody(133)
    BeginFunctionBody(134, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.floor" (156))
    OnDropExpr
    EndFunctionBody(134)
    BeginFunctionBody(135, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.trunc" (157))
    OnDropExpr
    EndFunctionBody(135)
    BeginFunctionBody(136, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.nearest" (158))
    OnDropExpr
    EndFunctionBody(136)
    BeginFunctionBody(137, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.sqrt" (159))
    OnDropExpr
    EndFunctionBody(137)
    BeginFunctionBody(138, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.add" (160))
    OnDropExpr
    EndFunctionBody(138)
    BeginFunctionBody(139, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.sub" (161))
    OnDropExpr
    EndFunctionBody(139)
    BeginFunctionBody(140, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.mul" (162))
    OnDropExpr
    EndFunctionBody(140)
    BeginFunctionBody(141, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.div" (163))
    OnDropExpr
    EndFunctionBody(141)
    BeginFunctionBody(142, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.min" (164))
    OnDropExpr
    EndFunctionBody(142)
    BeginFunctionBody(143, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.max" (165))
    OnDropExpr
    EndFunctionBody(143)
    BeginFunctionBody(144, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.copysign" (166))
    OnDropExpr
    EndFunctionBody(144)
    BeginFunctionBody(145, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("i32.wrap_i64" (167))
    OnDropExpr
    EndFunctionBody(145)
    BeginFunctionBody(146, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.trunc_f32_s" (168))
    OnDropExpr
    EndFunctionBody(146)
    BeginFunctionBody(147, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.trunc_f32_u" (169))
    OnDropExpr
    EndFunctionBody(147)
    BeginFunctionBody(148, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i32.trunc_f64_s" (170))
    OnDropExpr
    EndFunctionBody(148)
    BeginFunctionBody(149, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i32.trunc_f64_u" (171))
    OnDropExpr
    EndFunctionBody(149)
    BeginFunctionBody(150, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("i64.extend_i32_s" (172))
    OnDropExpr
    EndFunctionBody(150)
    BeginFunctionBody(151, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("i64.extend_i32_u" (173))
    OnDropExpr
    EndFunctionBody(151)
    BeginFunctionBody(152, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i64.trunc_f32_s" (174))
    OnDropExpr
    EndFunctionBody(152)
    BeginFunctionBody(153, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i64.trunc_f32_u" (175))
    OnDropExpr
    EndFunctionBody(153)
    BeginFunctionBody(154, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.trunc_f64_s" (176))
    OnDropExpr
    EndFunctionBody(154)
    BeginFunctionBody(155, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.trunc_f64_u" (177))
    OnDropExpr
    EndFunctionBody(155)
    BeginFunctionBody(156, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f32.convert_i32_s" (178))
    OnDropExpr
    EndFunctionBody(156)
    BeginFunctionBody(157, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f32.convert_i32_u" (179))
    OnDropExpr
    EndFunctionBody(157)
    BeginFunctionBody(158, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f32.convert_i64_s" (180))
    OnDropExpr
    EndFunctionBody(158)
    BeginFunctionBody(159, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f32.convert_i64_u" (181))
    OnDropExpr
    EndFunctionBody(159)
    BeginFunctionBody(160, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("f32.demote_f64" (182))
    OnDropExpr
    EndFunctionBody(160)
    BeginFunctionBody(161, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f64.convert_i32_s" (183))
    OnDropExpr
    EndFunctionBody(161)
    BeginFunctionBody(162, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f64.convert_i32_u" (184))
    OnDropExpr
    EndFunctionBody(162)
    BeginFunctionBody(163, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f64.convert_i64_s" (185))
    OnDropExpr
    EndFunctionBody(163)
    BeginFunctionBody(164, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f64.convert_i64_u" (186))
    OnDropExpr
    EndFunctionBody(164)
    BeginFunctionBody(165, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("f64.promote_f32" (187))
    OnDropExpr
    EndFunctionBody(165)
    BeginFunctionBody(166, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f32.reinterpret_i32" (190))
    OnDropExpr
    EndFunctionBody(166)
    BeginFunctionBody(167, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.reinterpret_f32" (188))
    OnDropExpr
    EndFunctionBody(167)
    BeginFunctionBody(168, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f64.reinterpret_i64" (191))
    OnDropExpr
    EndFunctionBody(168)
    BeginFunctionBody(169, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.reinterpret_f64" (189))
    OnDropExpr
    EndFunctionBody(169)
    BeginFunctionBody(170, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.extend8_s" (192))
    OnDropExpr
    EndFunctionBody(170)
    BeginFunctionBody(171, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.extend16_s" (193))
    OnDropExpr
    EndFunctionBody(171)
    BeginFunctionBody(172, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.extend8_s" (194))
    OnDropExpr
    EndFunctionBody(172)
    BeginFunctionBody(173, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.extend16_s" (195))
    OnDropExpr
    EndFunctionBody(173)
    BeginFunctionBody(174, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.extend32_s" (196))
    OnDropExpr
    EndFunctionBody(174)
    BeginFunctionBody(175, size:4)
    OnLocalDeclCount(1)
    OnLocalDecl(index: 0, count: 1, type: i32)
    EndFunctionBody(175)
    BeginFunctionBody(176, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnBrIfExpr(depth: 0)
    EndFunctionBody(176)
    BeginFunctionBody(177, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnCallExpr(func_index: 0)
    EndFunctionBody(177)
    BeginFunctionBody(178, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnBrTableExpr(num_targets: 0, depths: [], default: 0)
    EndFunctionBody(178)
    BeginFunctionBody(179, size:12)
    OnLocalDeclCount(0)
    OnBlockExpr(sig: i32)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBrExpr(depth: 0)
    OnEndExpr
    OnDropExpr
    EndFunctionBody(179)
    BeginFunctionBody(180, size:10)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.trunc_sat_f32_s" (0))
    OnDropExpr
    EndFunctionBody(180)
    BeginFunctionBody(181, size:10)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.trunc_sat_f32_u" (1))
    OnDropExpr
    EndFunctionBody(181)
    BeginFunctionBody(182, size:14)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i32.trunc_sat_f64_s" (2))
    OnDropExpr
    EndFunctionBody(182)
    BeginFunctionBody(183, size:14)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i32.trunc_sat_f64_u" (3))
    OnDropExpr
    EndFunctionBody(183)
    BeginFunctionBody(184, size:10)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i64.trunc_sat_f32_s" (4))
    OnDropExpr
    EndFunctionBody(184)
    BeginFunctionBody(185, size:10)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i64.trunc_sat_f32_u" (5))
    OnDropExpr
    EndFunctionBody(185)
    BeginFunctionBody(186, size:14)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.trunc_sat_f64_s" (6))
    OnDropExpr
    EndFunctionBody(186)
    BeginFunctionBody(187, size:14)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.trunc_sat_f64_u" (7))
    OnDropExpr
    EndFunctionBody(187)
    BeginFunctionBody(188, size:12)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnMemoryInitExpr(0)
    EndFunctionBody(188)
    BeginFunctionBody(189, size:5)
    OnLocalDeclCount(0)
    OnDataDropExpr(0)
    EndFunctionBody(189)
    BeginFunctionBody(190, size:12)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnMemoryCopyExpr
    EndFunctionBody(190)
    BeginFunctionBody(191, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnMemoryFillExpr
    EndFunctionBody(191)
    BeginFunctionBody(192, size:12)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnTableInitExpr(segment_index: 0, table_index: 0)
    EndFunctionBody(192)
    BeginFunctionBody(193, size:5)
    OnLocalDeclCount(0)
    OnElemDropExpr(0)
    EndFunctionBody(193)
    BeginFunctionBody(194, size:12)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnTableCopyExpr(dst_index: 0, src_index: 0)
    EndFunctionBody(194)
    BeginFunctionBody(195, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "v128.load" (0), align log2: 4, offset: 3)
    OnDropExpr
    EndFunctionBody(195)
    BeginFunctionBody(196, size:26)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnStoreExpr(opcode: "v128.store" (1), align log2: 4, offset: 3)
    EndFunctionBody(196)
    BeginFunctionBody(197, size:21)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnDropExpr
    EndFunctionBody(197)
    BeginFunctionBody(198, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i8x16.splat" (4))
    OnDropExpr
    EndFunctionBody(198)
    BeginFunctionBody(199, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 15)
    OnDropExpr
    EndFunctionBody(199)
    BeginFunctionBody(200, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 15)
    OnDropExpr
    EndFunctionBody(200)
    BeginFunctionBody(201, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnSimdLaneOpExpr (lane: 15)
    OnDropExpr
    EndFunctionBody(201)
    BeginFunctionBody(202, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i16x8.splat" (8))
    OnDropExpr
    EndFunctionBody(202)
    BeginFunctionBody(203, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 7)
    OnDropExpr
    EndFunctionBody(203)
    BeginFunctionBody(204, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 7)
    OnDropExpr
    EndFunctionBody(204)
    BeginFunctionBody(205, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnSimdLaneOpExpr (lane: 7)
    OnDropExpr
    EndFunctionBody(205)
    BeginFunctionBody(206, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32x4.splat" (12))
    OnDropExpr
    EndFunctionBody(206)
    BeginFunctionBody(207, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 3)
    OnDropExpr
    EndFunctionBody(207)
    BeginFunctionBody(208, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnSimdLaneOpExpr (lane: 3)
    OnDropExpr
    EndFunctionBody(208)
    BeginFunctionBody(209, size:7)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64x2.splat" (15))
    OnDropExpr
    EndFunctionBody(209)
    BeginFunctionBody(210, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 1)
    OnDropExpr
    EndFunctionBody(210)
    BeginFunctionBody(211, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI64ConstExpr(0 (0x0))
    OnSimdLaneOpExpr (lane: 1)
    OnDropExpr
    EndFunctionBody(211)
    BeginFunctionBody(212, size:10)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32x4.splat" (18))
    OnDropExpr
    EndFunctionBody(212)
    BeginFunctionBody(213, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 3)
    OnDropExpr
    EndFunctionBody(213)
    BeginFunctionBody(214, size:29)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnF32ConstExpr(0 (0x040))
    OnSimdLaneOpExpr (lane: 3)
    OnDropExpr
    EndFunctionBody(214)
    BeginFunctionBody(215, size:14)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64x2.splat" (21))
    OnDropExpr
    EndFunctionBody(215)
    BeginFunctionBody(216, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 1)
    OnDropExpr
    EndFunctionBody(216)
    BeginFunctionBody(217, size:33)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnF64ConstExpr(0 (0x080))
    OnSimdLaneOpExpr (lane: 1)
    OnDropExpr
    EndFunctionBody(217)
    BeginFunctionBody(218, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.eq" (24))
    OnDropExpr
    EndFunctionBody(218)
    BeginFunctionBody(219, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.ne" (25))
    OnDropExpr
    EndFunctionBody(219)
    BeginFunctionBody(220, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.lt_s" (26))
    OnDropExpr
    EndFunctionBody(220)
    BeginFunctionBody(221, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.lt_u" (27))
    OnDropExpr
    EndFunctionBody(221)
    BeginFunctionBody(222, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.gt_s" (28))
    OnDropExpr
    EndFunctionBody(222)
    BeginFunctionBody(223, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.gt_u" (29))
    OnDropExpr
    EndFunctionBody(223)
    BeginFunctionBody(224, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.le_s" (30))
    OnDropExpr
    EndFunctionBody(224)
    BeginFunctionBody(225, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.le_u" (31))
    OnDropExpr
    EndFunctionBody(225)
    BeginFunctionBody(226, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.ge_s" (32))
    OnDropExpr
    EndFunctionBody(226)
    BeginFunctionBody(227, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.ge_u" (33))
    OnDropExpr
    EndFunctionBody(227)
    BeginFunctionBody(228, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.eq" (34))
    OnDropExpr
    EndFunctionBody(228)
    BeginFunctionBody(229, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.ne" (35))
    OnDropExpr
    EndFunctionBody(229)
    BeginFunctionBody(230, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.lt_s" (36))
    OnDropExpr
    EndFunctionBody(230)
    BeginFunctionBody(231, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.lt_u" (37))
    OnDropExpr
    EndFunctionBody(231)
    BeginFunctionBody(232, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.gt_s" (38))
    OnDropExpr
    EndFunctionBody(232)
    BeginFunctionBody(233, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.gt_u" (39))
    OnDropExpr
    EndFunctionBody(233)
    BeginFunctionBody(234, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.le_s" (40))
    OnDropExpr
    EndFunctionBody(234)
    BeginFunctionBody(235, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.le_u" (41))
    OnDropExpr
    EndFunctionBody(235)
    BeginFunctionBody(236, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.ge_s" (42))
    OnDropExpr
    EndFunctionBody(236)
    BeginFunctionBody(237, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.ge_u" (43))
    OnDropExpr
    EndFunctionBody(237)
    BeginFunctionBody(238, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.eq" (44))
    OnDropExpr
    EndFunctionBody(238)
    BeginFunctionBody(239, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.ne" (45))
    OnDropExpr
    EndFunctionBody(239)
    BeginFunctionBody(240, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.lt_s" (46))
    OnDropExpr
    EndFunctionBody(240)
    BeginFunctionBody(241, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.lt_u" (47))
    OnDropExpr
    EndFunctionBody(241)
    BeginFunctionBody(242, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.gt_s" (48))
    OnDropExpr
    EndFunctionBody(242)
    BeginFunctionBody(243, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.gt_u" (49))
    OnDropExpr
    EndFunctionBody(243)
    BeginFunctionBody(244, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.le_s" (50))
    OnDropExpr
    EndFunctionBody(244)
    BeginFunctionBody(245, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.le_u" (51))
    OnDropExpr
    EndFunctionBody(245)
    BeginFunctionBody(246, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.ge_s" (52))
    OnDropExpr
    EndFunctionBody(246)
    BeginFunctionBody(247, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.ge_u" (53))
    OnDropExpr
    EndFunctionBody(247)
    BeginFunctionBody(248, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f32x4.eq" (64))
    OnDropExpr
    EndFunctionBody(248)
    BeginFunctionBody(249, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f32x4.ne" (65))
    OnDropExpr
    EndFunctionBody(249)
    BeginFunctionBody(250, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f32x4.lt" (66))
    OnDropExpr
    EndFunctionBody(250)
    BeginFunctionBody(251, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f32x4.gt" (67))
    OnDropExpr
    EndFunctionBody(251)
    BeginFunctionBody(252, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f32x4.le" (68))
    OnDropExpr
    EndFunctionBody(252)
    BeginFunctionBody(253, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f32x4.ge" (69))
    OnDropExpr
    EndFunctionBody(253)
    BeginFunctionBody(254, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f64x2.eq" (70))
    OnDropExpr
    EndFunctionBody(254)
    BeginFunctionBody(255, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f64x2.ne" (71))
    OnDropExpr
    EndFunctionBody(255)
    BeginFunctionBody(256, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f64x2.lt" (72))
    OnDropExpr
    EndFunctionBody(256)
    BeginFunctionBody(257, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f64x2.gt" (73))
    OnDropExpr
    EndFunctionBody(257)
    BeginFunctionBody(258, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f64x2.le" (74))
    OnDropExpr
    EndFunctionBody(258)
    BeginFunctionBody(259, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f64x2.ge" (75))
    OnDropExpr
    EndFunctionBody(259)
    BeginFunctionBody(260, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("v128.not" (76))
    OnDropExpr
    EndFunctionBody(260)
    BeginFunctionBody(261, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("v128.and" (77))
    OnDropExpr
    EndFunctionBody(261)
    BeginFunctionBody(262, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("v128.or" (78))
    OnDropExpr
    EndFunctionBody(262)
    BeginFunctionBody(263, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("v128.xor" (79))
    OnDropExpr
    EndFunctionBody(263)
    BeginFunctionBody(264, size:59)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnV128ConstExpr(0x00000003 0x00000003 0x00000003 0x00000003)
    OnTernaryExpr("v128.bitselect" (80))
    OnDropExpr
    EndFunctionBody(264)
    BeginFunctionBody(265, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i8x16.neg" (81))
    OnDropExpr
    EndFunctionBody(265)
    BeginFunctionBody(266, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i8x16.any_true" (82))
    OnDropExpr
    EndFunctionBody(266)
    BeginFunctionBody(267, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i8x16.all_true" (83))
    OnDropExpr
    EndFunctionBody(267)
    BeginFunctionBody(268, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i8x16.shl" (84))
    OnDropExpr
    EndFunctionBody(268)
    BeginFunctionBody(269, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i8x16.shr_s" (85))
    OnDropExpr
    EndFunctionBody(269)
    BeginFunctionBody(270, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i8x16.shr_u" (86))
    OnDropExpr
    EndFunctionBody(270)
    BeginFunctionBody(271, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.add" (87))
    OnDropExpr
    EndFunctionBody(271)
    BeginFunctionBody(272, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.add_saturate_s" (88))
    OnDropExpr
    EndFunctionBody(272)
    BeginFunctionBody(273, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.add_saturate_u" (89))
    OnDropExpr
    EndFunctionBody(273)
    BeginFunctionBody(274, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.sub" (90))
    OnDropExpr
    EndFunctionBody(274)
    BeginFunctionBody(275, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.sub_saturate_s" (91))
    OnDropExpr
    EndFunctionBody(275)
    BeginFunctionBody(276, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.sub_saturate_u" (92))
    OnDropExpr
    EndFunctionBody(276)
    BeginFunctionBody(277, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.min_s" (94))
    OnDropExpr
    EndFunctionBody(277)
    BeginFunctionBody(278, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.min_u" (95))
    OnDropExpr
    EndFunctionBody(278)
    BeginFunctionBody(279, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.max_s" (96))
    OnDropExpr
    EndFunctionBody(279)
    BeginFunctionBody(280, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.max_u" (97))
    OnDropExpr
    EndFunctionBody(280)
    BeginFunctionBody(281, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.neg" (98))
    OnDropExpr
    EndFunctionBody(281)
    BeginFunctionBody(282, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.any_true" (99))
    OnDropExpr
    EndFunctionBody(282)
    BeginFunctionBody(283, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.all_true" (100))
    OnDropExpr
    EndFunctionBody(283)
    BeginFunctionBody(284, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i16x8.shl" (101))
    OnDropExpr
    EndFunctionBody(284)
    BeginFunctionBody(285, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i16x8.shr_s" (102))
    OnDropExpr
    EndFunctionBody(285)
    BeginFunctionBody(286, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i16x8.shr_u" (103))
    OnDropExpr
    EndFunctionBody(286)
    BeginFunctionBody(287, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.add" (104))
    OnDropExpr
    EndFunctionBody(287)
    BeginFunctionBody(288, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.add_saturate_s" (105))
    OnDropExpr
    EndFunctionBody(288)
    BeginFunctionBody(289, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.add_saturate_u" (106))
    OnDropExpr
    EndFunctionBody(289)
    BeginFunctionBody(290, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.sub" (107))
    OnDropExpr
    EndFunctionBody(290)
    BeginFunctionBody(291, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.sub_saturate_s" (108))
    OnDropExpr
    EndFunctionBody(291)
    BeginFunctionBody(292, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.sub_saturate_u" (109))
    OnDropExpr
    EndFunctionBody(292)
    BeginFunctionBody(293, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.mul" (110))
    OnDropExpr
    EndFunctionBody(293)
    BeginFunctionBody(294, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.min_s" (111))
    OnDropExpr
    EndFunctionBody(294)
    BeginFunctionBody(295, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.min_u" (112))
    OnDropExpr
    EndFunctionBody(295)
    BeginFunctionBody(296, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.max_s" (113))
    OnDropExpr
    EndFunctionBody(296)
    BeginFunctionBody(297, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.max_u" (114))
    OnDropExpr
    EndFunctionBody(297)
    BeginFunctionBody(298, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i32x4.neg" (115))
    OnDropExpr
    EndFunctionBody(298)
    BeginFunctionBody(299, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i32x4.any_true" (116))
    OnDropExpr
    EndFunctionBody(299)
    BeginFunctionBody(300, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i32x4.all_true" (117))
    OnDropExpr
    EndFunctionBody(300)
    BeginFunctionBody(301, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i32x4.shl" (118))
    OnDropExpr
    EndFunctionBody(301)
    BeginFunctionBody(302, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i32x4.shr_s" (119))
    OnDropExpr
    EndFunctionBody(302)
    BeginFunctionBody(303, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i32x4.shr_u" (120))
    OnDropExpr
    EndFunctionBody(303)
    BeginFunctionBody(304, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i32x4.add" (121))
    OnDropExpr
    EndFunctionBody(304)
    BeginFunctionBody(305, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i32x4.sub" (124))
    OnDropExpr
    EndFunctionBody(305)
    BeginFunctionBody(306, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i32x4.mul" (127))
    OnDropExpr
    EndFunctionBody(306)
    BeginFunctionBody(307, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i32x4.min_s" (128))
    OnDropExpr
    EndFunctionBody(307)
    BeginFunctionBody(308, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i32x4.min_u" (129))
    OnDropExpr
    EndFunctionBody(308)
    BeginFunctionBody(309, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i32x4.max_s" (130))
    OnDropExpr
    EndFunctionBody(309)
    BeginFunctionBody(310, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i32x4.max_u" (131))
    OnDropExpr
    EndFunctionBody(310)
    BeginFunctionBody(311, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i64x2.neg" (132))
    OnDropExpr
    EndFunctionBody(311)
    BeginFunctionBody(312, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i64x2.shl" (135))
    OnDropExpr
    EndFunctionBody(312)
    BeginFunctionBody(313, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i64x2.shr_s" (136))
    OnDropExpr
    EndFunctionBody(313)
    BeginFunctionBody(314, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i64x2.shr_u" (137))
    OnDropExpr
    EndFunctionBody(314)
    BeginFunctionBody(315, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i64x2.add" (138))
    OnDropExpr
    EndFunctionBody(315)
    BeginFunctionBody(316, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i64x2.sub" (141))
    OnDropExpr
    EndFunctionBody(316)
    BeginFunctionBody(317, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i64x2.mul" (144))
    OnDropExpr
    EndFunctionBody(317)
    BeginFunctionBody(318, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("f32x4.abs" (149))
    OnDropExpr
    EndFunctionBody(318)
    BeginFunctionBody(319, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("f32x4.neg" (150))
    OnDropExpr
    EndFunctionBody(319)
    BeginFunctionBody(320, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("f32x4.sqrt" (151))
    OnDropExpr
    EndFunctionBody(320)
    BeginFunctionBody(321, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f32x4.add" (154))
    OnDropExpr
    EndFunctionBody(321)
    BeginFunctionBody(322, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f32x4.sub" (155))
    OnDropExpr
    EndFunctionBody(322)
    BeginFunctionBody(323, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f32x4.mul" (156))
    OnDropExpr
    EndFunctionBody(323)
    BeginFunctionBody(324, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f32x4.div" (157))
    OnDropExpr
    EndFunctionBody(324)
    BeginFunctionBody(325, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f32x4.min" (158))
    OnDropExpr
    EndFunctionBody(325)
    BeginFunctionBody(326, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f32x4.max" (159))
    OnDropExpr
    EndFunctionBody(326)
    BeginFunctionBody(327, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("f64x2.abs" (160))
    OnDropExpr
    EndFunctionBody(327)
    BeginFunctionBody(328, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("f64x2.neg" (161))
    OnDropExpr
    EndFunctionBody(328)
    BeginFunctionBody(329, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("f64x2.sqrt" (162))
    OnDropExpr
    EndFunctionBody(329)
    BeginFunctionBody(330, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f64x2.add" (165))
    OnDropExpr
    EndFunctionBody(330)
    BeginFunctionBody(331, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f64x2.sub" (166))
    OnDropExpr
    EndFunctionBody(331)
    BeginFunctionBody(332, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f64x2.mul" (167))
    OnDropExpr
    EndFunctionBody(332)
    BeginFunctionBody(333, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f64x2.div" (168))
    OnDropExpr
    EndFunctionBody(333)
    BeginFunctionBody(334, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f64x2.min" (169))
    OnDropExpr
    EndFunctionBody(334)
    BeginFunctionBody(335, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f64x2.max" (170))
    OnDropExpr
    EndFunctionBody(335)
    BeginFunctionBody(336, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("i32x4.trunc_sat_f32x4_s" (171))
    OnDropExpr
    EndFunctionBody(336)
    BeginFunctionBody(337, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("i32x4.trunc_sat_f32x4_u" (172))
    OnDropExpr
    EndFunctionBody(337)
    BeginFunctionBody(338, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("f32x4.convert_i32x4_s" (175))
    OnDropExpr
    EndFunctionBody(338)
    BeginFunctionBody(339, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("f32x4.convert_i32x4_u" (176))
    OnDropExpr
    EndFunctionBody(339)
    BeginFunctionBody(340, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("v8x16.swizzle" (192))
    OnDropExpr
    EndFunctionBody(340)
    BeginFunctionBody(341, size:58)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnSimdShuffleOpExpr (lane: 0x01010101 01010101 01010101 01010101)
    OnDropExpr
    EndFunctionBody(341)
    BeginFunctionBody(342, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadSplatExpr(opcode: "v8x16.load_splat" (194), align log2: 0, offset: 0)
    OnDropExpr
    EndFunctionBody(342)
    BeginFunctionBody(343, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadSplatExpr(opcode: "v16x8.load_splat" (195), align log2: 1, offset: 0)
    OnDropExpr
    EndFunctionBody(343)
    BeginFunctionBody(344, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadSplatExpr(opcode: "v32x4.load_splat" (196), align log2: 2, offset: 0)
    OnDropExpr
    EndFunctionBody(344)
    BeginFunctionBody(345, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadSplatExpr(opcode: "v64x2.load_splat" (197), align log2: 3, offset: 0)
    OnDropExpr
    EndFunctionBody(345)
    BeginFunctionBody(346, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.narrow_i16x8_s" (198))
    OnDropExpr
    EndFunctionBody(346)
    BeginFunctionBody(347, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.narrow_i16x8_u" (199))
    OnDropExpr
    EndFunctionBody(347)
    BeginFunctionBody(348, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.narrow_i32x4_s" (200))
    OnDropExpr
    EndFunctionBody(348)
    BeginFunctionBody(349, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.narrow_i32x4_u" (201))
    OnDropExpr
    EndFunctionBody(349)
    BeginFunctionBody(350, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.widen_low_i8x16_s" (202))
    OnDropExpr
    EndFunctionBody(350)
    BeginFunctionBody(351, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.widen_high_i8x16_s" (203))
    OnDropExpr
    EndFunctionBody(351)
    BeginFunctionBody(352, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.widen_low_i8x16_u" (204))
    OnDropExpr
    EndFunctionBody(352)
    BeginFunctionBody(353, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.widen_high_i8x16_u" (205))
    OnDropExpr
    EndFunctionBody(353)
    BeginFunctionBody(354, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i32x4.widen_low_i16x8_s" (206))
    OnDropExpr
    EndFunctionBody(354)
    BeginFunctionBody(355, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i32x4.widen_high_i16x8_s" (207))
    OnDropExpr
    EndFunctionBody(355)
    BeginFunctionBody(356, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i32x4.widen_low_i16x8_u" (208))
    OnDropExpr
    EndFunctionBody(356)
    BeginFunctionBody(357, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i32x4.widen_high_i16x8_u" (209))
    OnDropExpr
    EndFunctionBody(357)
    BeginFunctionBody(358, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(0 (0x0))
    OnLoadExpr(opcode: "i16x8.load8x8_s" (210), align log2: 3, offset: 0)
    OnDropExpr
    EndFunctionBody(358)
    BeginFunctionBody(359, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(0 (0x0))
    OnLoadExpr(opcode: "i16x8.load8x8_u" (211), align log2: 3, offset: 0)
    OnDropExpr
    EndFunctionBody(359)
    BeginFunctionBody(360, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(0 (0x0))
    OnLoadExpr(opcode: "i32x4.load16x4_s" (212), align log2: 3, offset: 0)
    OnDropExpr
    EndFunctionBody(360)
    BeginFunctionBody(361, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(0 (0x0))
    OnLoadExpr(opcode: "i32x4.load16x4_u" (213), align log2: 3, offset: 0)
    OnDropExpr
    EndFunctionBody(361)
    BeginFunctionBody(362, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(0 (0x0))
    OnLoadExpr(opcode: "i64x2.load32x2_s" (214), align log2: 3, offset: 0)
    OnDropExpr
    EndFunctionBody(362)
    BeginFunctionBody(363, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(0 (0x0))
    OnLoadExpr(opcode: "i64x2.load32x2_u" (215), align log2: 3, offset: 0)
    OnDropExpr
    EndFunctionBody(363)
    BeginFunctionBody(364, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("v128.andnot" (216))
    OnDropExpr
    EndFunctionBody(364)
    BeginFunctionBody(365, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.avgr_u" (217))
    OnDropExpr
    EndFunctionBody(365)
    BeginFunctionBody(366, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.avgr_u" (218))
    OnDropExpr
    EndFunctionBody(366)
    BeginFunctionBody(367, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicNotifyExpr(opcode: "atomic.notify" (0), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(367)
    BeginFunctionBody(368, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicWaitExpr(opcode: "i32.atomic.wait" (1), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(368)
    BeginFunctionBody(369, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicWaitExpr(opcode: "i64.atomic.wait" (2), align log2: 3, offset: 3)
    OnDropExpr
    EndFunctionBody(369)
    BeginFunctionBody(370, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i32.atomic.load" (16), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(370)
    BeginFunctionBody(371, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i64.atomic.load" (17), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(371)
    BeginFunctionBody(372, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i32.atomic.load8_u" (18), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(372)
    BeginFunctionBody(373, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i32.atomic.load16_u" (19), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(373)
    BeginFunctionBody(374, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i64.atomic.load8_u" (20), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(374)
    BeginFunctionBody(375, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i64.atomic.load16_u" (21), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(375)
    BeginFunctionBody(376, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i64.atomic.load32_u" (22), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(376)
    BeginFunctionBody(377, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i32.atomic.store" (23), align log2: 2, offset: 3)
    EndFunctionBody(377)
    BeginFunctionBody(378, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i64.atomic.store" (24), align log2: 3, offset: 7)
    EndFunctionBody(378)
    BeginFunctionBody(379, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i32.atomic.store8" (25), align log2: 0, offset: 3)
    EndFunctionBody(379)
    BeginFunctionBody(380, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i32.atomic.store16" (26), align log2: 1, offset: 3)
    EndFunctionBody(380)
    BeginFunctionBody(381, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i64.atomic.store8" (27), align log2: 0, offset: 3)
    EndFunctionBody(381)
    BeginFunctionBody(382, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i64.atomic.store16" (28), align log2: 1, offset: 3)
    EndFunctionBody(382)
    BeginFunctionBody(383, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i64.atomic.store32" (29), align log2: 2, offset: 3)
    EndFunctionBody(383)
    BeginFunctionBody(384, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.add" (30), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(384)
    BeginFunctionBody(385, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.add" (31), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(385)
    BeginFunctionBody(386, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8.add_u" (32), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(386)
    BeginFunctionBody(387, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16.add_u" (33), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(387)
    BeginFunctionBody(388, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8.add_u" (34), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(388)
    BeginFunctionBody(389, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16.add_u" (35), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(389)
    BeginFunctionBody(390, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32.add_u" (36), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(390)
    BeginFunctionBody(391, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.sub" (37), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(391)
    BeginFunctionBody(392, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.sub" (38), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(392)
    BeginFunctionBody(393, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8.sub_u" (39), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(393)
    BeginFunctionBody(394, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16.sub_u" (40), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(394)
    BeginFunctionBody(395, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8.sub_u" (41), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(395)
    BeginFunctionBody(396, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16.sub_u" (42), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(396)
    BeginFunctionBody(397, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32.sub_u" (43), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(397)
    BeginFunctionBody(398, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.and" (44), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(398)
    BeginFunctionBody(399, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.and" (45), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(399)
    BeginFunctionBody(400, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8.and_u" (46), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(400)
    BeginFunctionBody(401, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16.and_u" (47), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(401)
    BeginFunctionBody(402, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8.and_u" (48), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(402)
    BeginFunctionBody(403, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16.and_u" (49), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(403)
    BeginFunctionBody(404, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32.and_u" (50), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(404)
    BeginFunctionBody(405, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.or" (51), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(405)
    BeginFunctionBody(406, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.or" (52), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(406)
    BeginFunctionBody(407, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8.or_u" (53), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(407)
    BeginFunctionBody(408, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16.or_u" (54), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(408)
    BeginFunctionBody(409, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8.or_u" (55), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(409)
    BeginFunctionBody(410, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16.or_u" (56), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(410)
    BeginFunctionBody(411, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32.or_u" (57), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(411)
    BeginFunctionBody(412, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.xor" (58), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(412)
    BeginFunctionBody(413, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.xor" (59), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(413)
    BeginFunctionBody(414, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8.xor_u" (60), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(414)
    BeginFunctionBody(415, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16.xor_u" (61), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(415)
    BeginFunctionBody(416, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8.xor_u" (62), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(416)
    BeginFunctionBody(417, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16.xor_u" (63), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(417)
    BeginFunctionBody(418, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32.xor_u" (64), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(418)
    BeginFunctionBody(419, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.xchg" (65), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(419)
    BeginFunctionBody(420, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.xchg" (66), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(420)
    BeginFunctionBody(421, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8.xchg_u" (67), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(421)
    BeginFunctionBody(422, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16.xchg_u" (68), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(422)
    BeginFunctionBody(423, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8.xchg_u" (69), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(423)
    BeginFunctionBody(424, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16.xchg_u" (70), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(424)
    BeginFunctionBody(425, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32.xchg_u" (71), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(425)
    BeginFunctionBody(426, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i32.atomic.rmw.cmpxchg" (72), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(426)
    BeginFunctionBody(427, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i64.atomic.rmw.cmpxchg" (73), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(427)
    BeginFunctionBody(428, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i32.atomic.rmw8.cmpxchg_u" (74), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(428)
    BeginFunctionBody(429, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i32.atomic.rmw16.cmpxchg_u" (75), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(429)
    BeginFunctionBody(430, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i64.atomic.rmw8.cmpxchg_u" (76), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(430)
    BeginFunctionBody(431, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i64.atomic.rmw16.cmpxchg_u" (77), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(431)
    BeginFunctionBody(432, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i64.atomic.rmw32.cmpxchg_u" (78), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(432)
  EndCodeSection
  BeginDataSection(3)
    OnDataSegmentCount(1)
    BeginDataSegment(index: 0, memory_index: 0, flags: 1)
    OnDataSegmentData(index:0, size:0)
    EndDataSegment(0)
  EndDataSection
EndModule
   0| return
   4| unreachable
   8| return
  12| br @20
  20| return
  24| i32.const 1
  32| br_table %[-1], $#0, table:$52
  44| data $12
  52|   entry 0: offset: 64 drop: 0 keep: 0
  64| return
  68| return
  72| return
  76| call @0
  84| return
  88| i32.const 1
  96| call_indirect $0:0, %[-1]
 108| return
 112| return_call @0
 120| return
 124| i32.const 1
 132| return_call_indirect $0:0, %[-1]
 144| return
 148| i32.const 1
 156| drop
 160| return
 164| i32.const 1
 172| i32.const 2
 180| i32.const 3
 188| select %[-3], %[-2], %[-1]
 192| drop
 196| return
 200| i32.const 1
 208| i32.const 2
 216| i32.const 3
 224| select %[-3], %[-2], %[-1]
 228| drop
 232| return
 236| alloca $1
 244| local.get $1
 252| drop
 256| drop
 260| return
 264| alloca $1
 272| i32.const 1
 280| local.set $1, %[-1]
 288| drop
 292| return
 296| alloca $1
 304| i32.const 1
 312| local.tee $2, %[-1]
 320| drop
 324| drop
 328| return
 332| global.get $0
 340| drop
 344| return
 348| i32.const 1
 356| global.set $0, %[-1]
 364| return
 368| i32.const 1
 376| i32.load $0:%[-1]+$2
 388| drop
 392| return
 396| i32.const 1
 404| i64.load $0:%[-1]+$2
 416| drop
 420| return
 424| i32.const 1
 432| f32.load $0:%[-1]+$2
 444| drop
 448| return
 452| i32.const 1
 460| f64.load $0:%[-1]+$2
 472| drop
 476| return
 480| i32.const 1
 488| i32.load8_s $0:%[-1]+$2
 500| drop
 504| return
 508| i32.const 1
 516| i32.load8_u $0:%[-1]+$2
 528| drop
 532| return
 536| i32.const 1
 544| i32.load16_s $0:%[-1]+$2
 556| drop
 560| return
 564| i32.const 1
 572| i32.load16_u $0:%[-1]+$2
 584| drop
 588| return
 592| i32.const 1
 600| i64.load8_s $0:%[-1]+$2
 612| drop
 616| return
 620| i32.const 1
 628| i64.load8_u $0:%[-1]+$2
 640| drop
 644| return
 648| i32.const 1
 656| i64.load16_s $0:%[-1]+$2
 668| drop
 672| return
 676| i32.const 1
 684| i64.load16_u $0:%[-1]+$2
 696| drop
 700| return
 704| i32.const 1
 712| i64.load32_s $0:%[-1]+$2
 724| drop
 728| return
 732| i32.const 1
 740| i64.load32_u $0:%[-1]+$2
 752| drop
 756| return
 760| i32.const 1
 768| i32.const 2
 776| i32.store $0:%[-2]+$2, %[-1]
 788| return
 792| i32.const 1
 800| i64.const 2
 812| i64.store $0:%[-2]+$2, %[-1]
 824| return
 828| i32.const 1
 836| f32.const 2
 844| f32.store $0:%[-2]+$2, %[-1]
 856| return
 860| i32.const 1
 868| f64.const 2
 880| f64.store $0:%[-2]+$2, %[-1]
 892| return
 896| i32.const 1
 904| i32.const 2
 912| i32.store8 $0:%[-2]+$2, %[-1]
 924| return
 928| i32.const 1
 936| i32.const 2
 944| i32.store16 $0:%[-2]+$2, %[-1]
 956| return
 960| i32.const 1
 968| i64.const 2
 980| i64.store8 $0:%[-2]+$2, %[-1]
 992| return
 996| i32.const 1
1004| i64.const 2
1016| i64.store16 $0:%[-2]+$2, %[-1]
1028| return
1032| i32.const 1
1040| i64.const 2
1052| i64.store32 $0:%[-2]+$2, %[-1]
1064| return
1068| memory.size $0
1076| drop
1080| return
1084| i32.const 1
1092| memory.grow $0:%[-1]
1100| drop
1104| return
1108| i32.const 1
1116| drop
1120| return
1124| i64.const 1
1136| drop
1140| return
1144| f32.const 1
1152| drop
1156| return
1160| f64.const 1
1172| drop
1176| return
1180| i32.const 1
1188| i32.eqz %[-1]
1192| drop
1196| return
1200| i32.const 1
1208| i32.const 2
1216| i32.eq %[-2], %[-1]
1220| drop
1224| return
1228| i32.const 1
1236| i32.const 2
1244| i32.ne %[-2], %[-1]
1248| drop
1252| return
1256| i32.const 1
1264| i32.const 2
1272| i32.lt_s %[-2], %[-1]
1276| drop
1280| return
1284| i32.const 1
1292| i32.const 2
1300| i32.lt_u %[-2], %[-1]
1304| drop
1308| return
1312| i32.const 1
1320| i32.const 2
1328| i32.gt_s %[-2], %[-1]
1332| drop
1336| return
1340| i32.const 1
1348| i32.const 2
1356| i32.gt_u %[-2], %[-1]
1360| drop
1364| return
1368| i32.const 1
1376| i32.const 2
1384| i32.le_s %[-2], %[-1]
1388| drop
1392| return
1396| i32.const 1
1404| i32.const 2
1412| i32.le_u %[-2], %[-1]
1416| drop
1420| return
1424| i32.const 1
1432| i32.const 2
1440| i32.ge_s %[-2], %[-1]
1444| drop
1448| return
1452| i32.const 1
1460| i32.const 2
1468| i32.ge_u %[-2], %[-1]
1472| drop
1476| return
1480| i64.const 1
1492| i64.eqz %[-1]
1496| drop
1500| return
1504| i64.const 1
1516| i64.const 2
1528| i64.eq %[-2], %[-1]
1532| drop
1536| return
1540| i64.const 1
1552| i64.const 2
1564| i64.ne %[-2], %[-1]
1568| drop
1572| return
1576| i64.const 1
1588| i64.const 2
1600| i64.lt_s %[-2], %[-1]
1604| drop
1608| return
1612| i64.const 1
1624| i64.const 2
1636| i64.lt_u %[-2], %[-1]
1640| drop
1644| return
1648| i64.const 1
1660| i64.const 2
1672| i64.gt_s %[-2], %[-1]
1676| drop
1680| return
1684| i64.const 1
1696| i64.const 2
1708| i64.gt_u %[-2], %[-1]
1712| drop
1716| return
1720| i64.const 1
1732| i64.const 2
1744| i64.le_s %[-2], %[-1]
1748| drop
1752| return
1756| i64.const 1
1768| i64.const 2
1780| i64.le_u %[-2], %[-1]
1784| drop
1788| return
1792| i64.const 1
1804| i64.const 2
1816| i64.ge_s %[-2], %[-1]
1820| drop
1824| return
1828| i64.const 1
1840| i64.const 2
1852| i64.ge_u %[-2], %[-1]
1856| drop
1860| return
1864| f32.const 1
1872| f32.const 2
1880| f32.eq %[-2], %[-1]
1884| drop
1888| return
1892| f32.const 1
1900| f32.const 2
1908| f32.ne %[-2], %[-1]
1912| drop
1916| return
1920| f32.const 1
1928| f32.const 2
1936| f32.lt %[-2], %[-1]
1940| drop
1944| return
1948| f32.const 1
1956| f32.const 2
1964| f32.gt %[-2], %[-1]
1968| drop
1972| return
1976| f32.const 1
1984| f32.const 2
1992| f32.le %[-2], %[-1]
1996| drop
2000| return
2004| f32.const 1
2012| f32.const 2
2020| f32.ge %[-2], %[-1]
2024| drop
2028| return
2032| f64.const 1
2044| f64.const 2
2056| f64.eq %[-2], %[-1]
2060| drop
2064| return
2068| f64.const 1
2080| f64.const 2
2092| f64.ne %[-2], %[-1]
2096| drop
2100| return
2104| f64.const 1
2116| f64.const 2
2128| f64.lt %[-2], %[-1]
2132| drop
2136| return
2140| f64.const 1
2152| f64.const 2
2164| f64.gt %[-2], %[-1]
2168| drop
2172| return
2176| f64.const 1
2188| f64.const 2
2200| f64.le %[-2], %[-1]
2204| drop
2208| return
2212| f64.const 1
2224| f64.const 2
2236| f64.ge %[-2], %[-1]
2240| drop
2244| return
2248| i32.const 1
2256| i32.clz %[-1]
2260| drop
2264| return
2268| i32.const 1
2276| i32.ctz %[-1]
2280| drop
2284| return
2288| i32.const 1
2296| i32.popcnt %[-1]
2300| drop
2304| return
2308| i32.const 1
2316| i32.const 2
2324| i32.add %[-2], %[-1]
2328| drop
2332| return
2336| i32.const 1
2344| i32.const 2
2352| i32.sub %[-2], %[-1]
2356| drop
2360| return
2364| i32.const 1
2372| i32.const 2
2380| i32.mul %[-2], %[-1]
2384| drop
2388| return
2392| i32.const 1
2400| i32.const 2
2408| i32.div_s %[-2], %[-1]
2412| drop
2416| return
2420| i32.const 1
2428| i32.const 2
2436| i32.div_u %[-2], %[-1]
2440| drop
2444| return
2448| i32.const 1
2456| i32.const 2
2464| i32.rem_s %[-2], %[-1]
2468| drop
2472| return
2476| i32.const 1
2484| i32.const 2
2492| i32.rem_u %[-2], %[-1]
2496| drop
2500| return
2504| i32.const 1
2512| i32.const 2
2520| i32.and %[-2], %[-1]
2524| drop
2528| return
2532| i32.const 1
2540| i32.const 2
2548| i32.or %[-2], %[-1]
2552| drop
2556| return
2560| i32.const 1
2568| i32.const 2
2576| i32.xor %[-2], %[-1]
2580| drop
2584| return
2588| i32.const 1
2596| i32.const 2
2604| i32.shl %[-2], %[-1]
2608| drop
2612| return
2616| i32.const 1
2624| i32.const 2
2632| i32.shr_s %[-2], %[-1]
2636| drop
2640| return
2644| i32.const 1
2652| i32.const 2
2660| i32.shr_u %[-2], %[-1]
2664| drop
2668| return
2672| i32.const 1
2680| i32.const 2
2688| i32.rotl %[-2], %[-1]
2692| drop
2696| return
2700| i32.const 1
2708| i32.const 2
2716| i32.rotr %[-2], %[-1]
2720| drop
2724| return
2728| i64.const 1
2740| i64.clz %[-1]
2744| drop
2748| return
2752| i64.const 1
2764| i64.ctz %[-1]
2768| drop
2772| return
2776| i64.const 1
2788| i64.popcnt %[-1]
2792| drop
2796| return
2800| i64.const 1
2812| i64.const 2
2824| i64.add %[-2], %[-1]
2828| drop
2832| return
2836| i64.const 1
2848| i64.const 2
2860| i64.sub %[-2], %[-1]
2864| drop
2868| return
2872| i64.const 1
2884| i64.const 2
2896| i64.mul %[-2], %[-1]
2900| drop
2904| return
2908| i64.const 1
2920| i64.const 2
2932| i64.div_s %[-2], %[-1]
2936| drop
2940| return
2944| i64.const 1
2956| i64.const 2
2968| i64.div_u %[-2], %[-1]
2972| drop
2976| return
2980| i64.const 1
2992| i64.const 2
3004| i64.rem_s %[-2], %[-1]
3008| drop
3012| return
3016| i64.const 1
3028| i64.const 2
3040| i64.rem_u %[-2], %[-1]
3044| drop
3048| return
3052| i64.const 1
3064| i64.const 2
3076| i64.and %[-2], %[-1]
3080| drop
3084| return
3088| i64.const 1
3100| i64.const 2
3112| i64.or %[-2], %[-1]
3116| drop
3120| return
3124| i64.const 1
3136| i64.const 2
3148| i64.xor %[-2], %[-1]
3152| drop
3156| return
3160| i64.const 1
3172| i64.const 2
3184| i64.shl %[-2], %[-1]
3188| drop
3192| return
3196| i64.const 1
3208| i64.const 2
3220| i64.shr_s %[-2], %[-1]
3224| drop
3228| return
3232| i64.const 1
3244| i64.const 2
3256| i64.shr_u %[-2], %[-1]
3260| drop
3264| return
3268| i64.const 1
3280| i64.const 2
3292| i64.rotl %[-2], %[-1]
3296| drop
3300| return
3304| i64.const 1
3316| i64.const 2
3328| i64.rotr %[-2], %[-1]
3332| drop
3336| return
3340| f32.const 1
3348| f32.abs %[-1]
3352| drop
3356| return
3360| f32.const 1
3368| f32.neg %[-1]
3372| drop
3376| return
3380| f32.const 1
3388| f32.ceil %[-1]
3392| drop
3396| return
3400| f32.const 1
3408| f32.floor %[-1]
3412| drop
3416| return
3420| f32.const 1
3428| f32.trunc %[-1]
3432| drop
3436| return
3440| f32.const 1
3448| f32.nearest %[-1]
3452| drop
3456| return
3460| f32.const 1
3468| f32.sqrt %[-1]
3472| drop
3476| return
3480| f32.const 1
3488| f32.const 2
3496| f32.add %[-2], %[-1]
3500| drop
3504| return
3508| f32.const 1
3516| f32.const 2
3524| f32.sub %[-2], %[-1]
3528| drop
3532| return
3536| f32.const 1
3544| f32.const 2
3552| f32.mul %[-2], %[-1]
3556| drop
3560| return
3564| f32.const 1
3572| f32.const 2
3580| f32.div %[-2], %[-1]
3584| drop
3588| return
3592| f32.const 1
3600| f32.const 2
3608| f32.min %[-2], %[-1]
3612| drop
3616| return
3620| f32.const 1
3628| f32.const 2
3636| f32.max %[-2], %[-1]
3640| drop
3644| return
3648| f32.const 1
3656| f32.const 2
3664| f32.copysign %[-2], %[-1]
3668| drop
3672| return
3676| f64.const 1
3688| f64.abs %[-1]
3692| drop
3696| return
3700| f64.const 1
3712| f64.neg %[-1]
3716| drop
3720| return
3724| f64.const 1
3736| f64.ceil %[-1]
3740| drop
3744| return
3748| f64.const 1
3760| f64.floor %[-1]
3764| drop
3768| return
3772| f64.const 1
3784| f64.trunc %[-1]
3788| drop
3792| return
3796| f64.const 1
3808| f64.nearest %[-1]
3812| drop
3816| return
3820| f64.const 1
3832| f64.sqrt %[-1]
3836| drop
3840| return
3844| f64.const 1
3856| f64.const 2
3868| f64.add %[-2], %[-1]
3872| drop
3876| return
3880| f64.const 1
3892| f64.const 2
3904| f64.sub %[-2], %[-1]
3908| drop
3912| return
3916| f64.const 1
3928| f64.const 2
3940| f64.mul %[-2], %[-1]
3944| drop
3948| return
3952| f64.const 1
3964| f64.const 2
3976| f64.div %[-2], %[-1]
3980| drop
3984| return
3988| f64.const 1
4000| f64.const 2
4012| f64.min %[-2], %[-1]
4016| drop
4020| return
4024| f64.const 1
4036| f64.const 2
4048| f64.max %[-2], %[-1]
4052| drop
4056| return
4060| f64.const 1
4072| f64.const 2
4084| f64.copysign %[-2], %[-1]
4088| drop
4092| return
4096| i64.const 1
4108| i32.wrap_i64 %[-1]
4112| drop
4116| return
4120| f32.const 1
4128| i32.trunc_f32_s %[-1]
4132| drop
4136| return
4140| f32.const 1
4148| i32.trunc_f32_u %[-1]
4152| drop
4156| return
4160| f64.const 1
4172| i32.trunc_f64_s %[-1]
4176| drop
4180| return
4184| f64.const 1
4196| i32.trunc_f64_u %[-1]
4200| drop
4204| return
4208| i32.const 1
4216| i64.extend_i32_s %[-1]
4220| drop
4224| return
4228| i32.const 1
4236| i64.extend_i32_u %[-1]
4240| drop
4244| return
4248| f32.const 1
4256| i64.trunc_f32_s %[-1]
4260| drop
4264| return
4268| f32.const 1
4276| i64.trunc_f32_u %[-1]
4280| drop
4284| return
4288| f64.const 1
4300| i64.trunc_f64_s %[-1]
4304| drop
4308| return
4312| f64.const 1
4324| i64.trunc_f64_u %[-1]
4328| drop
4332| return
4336| i32.const 1
4344| f32.convert_i32_s %[-1]
4348| drop
4352| return
4356| i32.const 1
4364| f32.convert_i32_u %[-1]
4368| drop
4372| return
4376| i64.const 1
4388| f32.convert_i64_s %[-1]
4392| drop
4396| return
4400| i64.const 1
4412| f32.convert_i64_u %[-1]
4416| drop
4420| return
4424| f64.const 1
4436| f32.demote_f64 %[-1]
4440| drop
4444| return
4448| i32.const 1
4456| f64.convert_i32_s %[-1]
4460| drop
4464| return
4468| i32.const 1
4476| f64.convert_i32_u %[-1]
4480| drop
4484| return
4488| i64.const 1
4500| f64.convert_i64_s %[-1]
4504| drop
4508| return
4512| i64.const 1
4524| f64.convert_i64_u %[-1]
4528| drop
4532| return
4536| f32.const 1
4544| f64.promote_f32 %[-1]
4548| drop
4552| return
4556| i32.const 1
4564| f32.reinterpret_i32 %[-1]
4568| drop
4572| return
4576| f32.const 1
4584| i32.reinterpret_f32 %[-1]
4588| drop
4592| return
4596| i64.const 1
4608| f64.reinterpret_i64 %[-1]
4612| drop
4616| return
4620| f64.const 1
4632| i64.reinterpret_f64 %[-1]
4636| drop
4640| return
4644| i32.const 1
4652| i32.extend8_s %[-1]
4656| drop
4660| return
4664| i32.const 1
4672| i32.extend16_s %[-1]
4676| drop
4680| return
4684| i64.const 1
4696| i64.extend8_s %[-1]
4700| drop
4704| return
4708| i64.const 1
4720| i64.extend16_s %[-1]
4724| drop
4728| return
4732| i64.const 1
4744| i64.extend32_s %[-1]
4748| drop
4752| return
4756| alloca $1
4764| drop
4768| return
4772| i32.const 1
4780| br_unless @4796, %[-1]
4788| br @4796
4796| return
4800| i32.const 1
4808| call_host $0
4816| return
4820| i32.const 1
4828| br_table %[-1], $#0, table:$4848
4840| data $12
4848|   entry 0: offset: 4860 drop: 0 keep: 0
4860| return
4864| i32.const 1
4872| i32.const 2
4880| drop_keep $1 $1
4892| br @4900
4900| drop
4904| return
4908| f32.const 1
4916| i32.trunc_sat_f32_s %[-1]
4920| drop
4924| return
4928| f32.const 1
4936| i32.trunc_sat_f32_u %[-1]
4940| drop
4944| return
4948| f64.const 1
4960| i32.trunc_sat_f64_s %[-1]
4964| drop
4968| return
4972| f64.const 1
4984| i32.trunc_sat_f64_u %[-1]
4988| drop
4992| return
4996| f32.const 1
5004| i64.trunc_sat_f32_s %[-1]
5008| drop
5012| return
5016| f32.const 1
5024| i64.trunc_sat_f32_u %[-1]
5028| drop
5032| return
5036| f64.const 1
5048| i64.trunc_sat_f64_s %[-1]
5052| drop
5056| return
5060| f64.const 1
5072| i64.trunc_sat_f64_u %[-1]
5076| drop
5080| return
5084| i32.const 1
5092| i32.const 2
5100| i32.const 3
5108| memory.init $0, $0, %[-3], %[-2], %[-1]
5120| return
5124| data.drop $0
5132| return
5136| i32.const 1
5144| i32.const 2
5152| i32.const 3
5160| memory.copy $0, %[-3], %[-2], %[-1]
5168| return
5172| i32.const 1
5180| i32.const 2
5188| i32.const 3
5196| memory.fill $0, %[-3], %[-2], %[-1]
5204| return
5208| i32.const 1
5216| i32.const 2
5224| i32.const 3
5232| table.init $0, $0, %[-3], %[-2], %[-1]
5244| return
5248| elem.drop $0
5256| return
5260| i32.const 1
5268| i32.const 2
5276| i32.const 3
5284| table.copy $0, $0, %[-3], %[-2], %[-1]
5296| return
5300| i32.const 1
5308| v128.load $0:%[-1]+$3
5320| drop
5324| return
5328| i32.const 1
5336| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5356| v128.store $0:%[-2]+$3, %[-1]
5368| return
5372| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5392| drop
5396| return
5400| i32.const 1
5408| i8x16.splat %[-1]
5412| drop
5416| return
5420| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5440| i8x16.extract_lane_s %[-1] : (Lane imm: 15)
5445| drop
5449| return
5453| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5473| i8x16.extract_lane_u %[-1] : (Lane imm: 15)
5478| drop
5482| return
5486| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5506| i32.const 0
5514| i8x16.replace_lane %[-1], %[-2] : (Lane imm: 15)
5519| drop
5523| return
5527| i32.const 1
5535| i16x8.splat %[-1]
5539| drop
5543| return
5547| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5567| i16x8.extract_lane_s %[-1] : (Lane imm: 7)
5572| drop
5576| return
5580| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5600| i16x8.extract_lane_u %[-1] : (Lane imm: 7)
5605| drop
5609| return
5613| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5633| i32.const 0
5641| i16x8.replace_lane %[-1], %[-2] : (Lane imm: 7)
5646| drop
5650| return
5654| i32.const 1
5662| i32x4.splat %[-1]
5666| drop
5670| return
5674| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5694| i32x4.extract_lane %[-1] : (Lane imm: 3)
5699| drop
5703| return
5707| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5727| i32.const 0
5735| i32x4.replace_lane %[-1], %[-2] : (Lane imm: 3)
5740| drop
5744| return
5748| i64.const 1
5760| i64x2.splat %[-1]
5764| drop
5768| return
5772| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5792| i64x2.extract_lane %[-1] : (Lane imm: 1)
5797| drop
5801| return
5805| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5825| i64.const 0
5837| i64x2.replace_lane %[-1], %[-2] : (Lane imm: 1)
5842| drop
5846| return
5850| f32.const 1
5858| f32x4.splat %[-1]
5862| drop
5866| return
5870| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5890| f32x4.extract_lane %[-1] : (Lane imm: 3)
5895| drop
5899| return
5903| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5923| f32.const 0
5931| f32x4.replace_lane %[-1], %[-2] : (Lane imm: 3)
5936| drop
5940| return
5944| f64.const 1
5956| f64x2.splat %[-1]
5960| drop
5964| return
5968| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5988| f64x2.extract_lane %[-1] : (Lane imm: 1)
5993| drop
5997| return
6001| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6021| f64.const 0
6033| f64x2.replace_lane %[-1], %[-2] : (Lane imm: 1)
6038| drop
6042| return
6046| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6066| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6086| i8x16.eq %[-2], %[-1]
6090| drop
6094| return
6098| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6118| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6138| i8x16.ne %[-2], %[-1]
6142| drop
6146| return
6150| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6170| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6190| i8x16.lt_s %[-2], %[-1]
6194| drop
6198| return
6202| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6222| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6242| i8x16.lt_u %[-2], %[-1]
6246| drop
6250| return
6254| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6274| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6294| i8x16.gt_s %[-2], %[-1]
6298| drop
6302| return
6306| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6326| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6346| i8x16.gt_u %[-2], %[-1]
6350| drop
6354| return
6358| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6378| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6398| i8x16.le_s %[-2], %[-1]
6402| drop
6406| return
6410| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6430| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6450| i8x16.le_u %[-2], %[-1]
6454| drop
6458| return
6462| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6482| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6502| i8x16.ge_s %[-2], %[-1]
6506| drop
6510| return
6514| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6534| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6554| i8x16.ge_u %[-2], %[-1]
6558| drop
6562| return
6566| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6586| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6606| i16x8.eq %[-2], %[-1]
6610| drop
6614| return
6618| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6638| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6658| i16x8.ne %[-2], %[-1]
6662| drop
6666| return
6670| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6690| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6710| i16x8.lt_s %[-2], %[-1]
6714| drop
6718| return
6722| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6742| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6762| i16x8.lt_u %[-2], %[-1]
6766| drop
6770| return
6774| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6794| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6814| i16x8.gt_s %[-2], %[-1]
6818| drop
6822| return
6826| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6846| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6866| i16x8.gt_u %[-2], %[-1]
6870| drop
6874| return
6878| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6898| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6918| i16x8.le_s %[-2], %[-1]
6922| drop
6926| return
6930| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6950| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6970| i16x8.le_u %[-2], %[-1]
6974| drop
6978| return
6982| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7002| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7022| i16x8.ge_s %[-2], %[-1]
7026| drop
7030| return
7034| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7054| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7074| i16x8.ge_u %[-2], %[-1]
7078| drop
7082| return
7086| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7106| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7126| i32x4.eq %[-2], %[-1]
7130| drop
7134| return
7138| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7158| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7178| i32x4.ne %[-2], %[-1]
7182| drop
7186| return
7190| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7210| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7230| i32x4.lt_s %[-2], %[-1]
7234| drop
7238| return
7242| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7262| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7282| i32x4.lt_u %[-2], %[-1]
7286| drop
7290| return
7294| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7314| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7334| i32x4.gt_s %[-2], %[-1]
7338| drop
7342| return
7346| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7366| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7386| i32x4.gt_u %[-2], %[-1]
7390| drop
7394| return
7398| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7418| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7438| i32x4.le_s %[-2], %[-1]
7442| drop
7446| return
7450| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7470| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7490| i32x4.le_u %[-2], %[-1]
7494| drop
7498| return
7502| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7522| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7542| i32x4.ge_s %[-2], %[-1]
7546| drop
7550| return
7554| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7574| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7594| i32x4.ge_u %[-2], %[-1]
7598| drop
7602| return
7606| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7626| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7646| f32x4.eq %[-2], %[-1]
7650| drop
7654| return
7658| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7678| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7698| f32x4.ne %[-2], %[-1]
7702| drop
7706| return
7710| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7730| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7750| f32x4.lt %[-2], %[-1]
7754| drop
7758| return
7762| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7782| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7802| f32x4.gt %[-2], %[-1]
7806| drop
7810| return
7814| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7834| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7854| f32x4.le %[-2], %[-1]
7858| drop
7862| return
7866| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7886| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7906| f32x4.ge %[-2], %[-1]
7910| drop
7914| return
7918| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7938| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7958| f64x2.eq %[-2], %[-1]
7962| drop
7966| return
7970| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7990| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8010| f64x2.ne %[-2], %[-1]
8014| drop
8018| return
8022| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8042| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8062| f64x2.lt %[-2], %[-1]
8066| drop
8070| return
8074| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8094| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8114| f64x2.gt %[-2], %[-1]
8118| drop
8122| return
8126| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8146| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8166| f64x2.le %[-2], %[-1]
8170| drop
8174| return
8178| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8198| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8218| f64x2.ge %[-2], %[-1]
8222| drop
8226| return
8230| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8250| v128.not %[-1]
8254| drop
8258| return
8262| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8282| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8302| v128.and %[-2], %[-1]
8306| drop
8310| return
8314| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8334| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8354| v128.or %[-2], %[-1]
8358| drop
8362| return
8366| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8386| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8406| v128.xor %[-2], %[-1]
8410| drop
8414| return
8418| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8438| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8458| v128.const i32x4 0x00000003 0x00000003 0x00000003 0x00000003
8478| v128.bitselect %[-3], %[-2], %[-1]
8482| drop
8486| return
8490| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8510| i8x16.neg %[-1]
8514| drop
8518| return
8522| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8542| i8x16.any_true %[-1]
8546| drop
8550| return
8554| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8574| i8x16.all_true %[-1]
8578| drop
8582| return
8586| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8606| i32.const 0
8614| i8x16.shl %[-2], %[-1]
8618| drop
8622| return
8626| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8646| i32.const 0
8654| i8x16.shr_s %[-2], %[-1]
8658| drop
8662| return
8666| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8686| i32.const 0
8694| i8x16.shr_u %[-2], %[-1]
8698| drop
8702| return
8706| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8726| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8746| i8x16.add %[-2], %[-1]
8750| drop
8754| return
8758| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8778| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8798| i8x16.add_saturate_s %[-2], %[-1]
8802| drop
8806| return
8810| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8830| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8850| i8x16.add_saturate_u %[-2], %[-1]
8854| drop
8858| return
8862| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8882| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8902| i8x16.sub %[-2], %[-1]
8906| drop
8910| return
8914| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8934| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8954| i8x16.sub_saturate_s %[-2], %[-1]
8958| drop
8962| return
8966| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8986| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9006| i8x16.sub_saturate_u %[-2], %[-1]
9010| drop
9014| return
9018| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9038| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9058| i8x16.min_s %[-2], %[-1]
9062| drop
9066| return
9070| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9090| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9110| i8x16.min_u %[-2], %[-1]
9114| drop
9118| return
9122| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9142| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9162| i8x16.max_s %[-2], %[-1]
9166| drop
9170| return
9174| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9194| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9214| i8x16.max_u %[-2], %[-1]
9218| drop
9222| return
9226| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9246| i16x8.neg %[-1]
9250| drop
9254| return
9258| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9278| i16x8.any_true %[-1]
9282| drop
9286| return
9290| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9310| i16x8.all_true %[-1]
9314| drop
9318| return
9322| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9342| i32.const 0
9350| i16x8.shl %[-2], %[-1]
9354| drop
9358| return
9362| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9382| i32.const 0
9390| i16x8.shr_s %[-2], %[-1]
9394| drop
9398| return
9402| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9422| i32.const 0
9430| i16x8.shr_u %[-2], %[-1]
9434| drop
9438| return
9442| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9462| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9482| i16x8.add %[-2], %[-1]
9486| drop
9490| return
9494| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9514| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9534| i16x8.add_saturate_s %[-2], %[-1]
9538| drop
9542| return
9546| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9566| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9586| i16x8.add_saturate_u %[-2], %[-1]
9590| drop
9594| return
9598| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9618| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9638| i16x8.sub %[-2], %[-1]
9642| drop
9646| return
9650| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9670| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9690| i16x8.sub_saturate_s %[-2], %[-1]
9694| drop
9698| return
9702| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9722| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9742| i16x8.sub_saturate_u %[-2], %[-1]
9746| drop
9750| return
9754| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9774| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9794| i16x8.mul %[-2], %[-1]
9798| drop
9802| return
9806| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9826| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9846| i16x8.min_s %[-2], %[-1]
9850| drop
9854| return
9858| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9878| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9898| i16x8.min_u %[-2], %[-1]
9902| drop
9906| return
9910| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9930| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9950| i16x8.max_s %[-2], %[-1]
9954| drop
9958| return
9962| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9982| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10002| i16x8.max_u %[-2], %[-1]
10006| drop
10010| return
10014| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10034| i32x4.neg %[-1]
10038| drop
10042| return
10046| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10066| i32x4.any_true %[-1]
10070| drop
10074| return
10078| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10098| i32x4.all_true %[-1]
10102| drop
10106| return
10110| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10130| i32.const 0
10138| i32x4.shl %[-2], %[-1]
10142| drop
10146| return
10150| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10170| i32.const 0
10178| i32x4.shr_s %[-2], %[-1]
10182| drop
10186| return
10190| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10210| i32.const 0
10218| i32x4.shr_u %[-2], %[-1]
10222| drop
10226| return
10230| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10250| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10270| i32x4.add %[-2], %[-1]
10274| drop
10278| return
10282| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10302| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10322| i32x4.sub %[-2], %[-1]
10326| drop
10330| return
10334| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10354| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10374| i32x4.mul %[-2], %[-1]
10378| drop
10382| return
10386| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10406| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10426| i32x4.min_s %[-2], %[-1]
10430| drop
10434| return
10438| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10458| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10478| i32x4.min_u %[-2], %[-1]
10482| drop
10486| return
10490| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10510| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10530| i32x4.max_s %[-2], %[-1]
10534| drop
10538| return
10542| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10562| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10582| i32x4.max_u %[-2], %[-1]
10586| drop
10590| return
10594| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10614| i64x2.neg %[-1]
10618| drop
10622| return
10626| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10646| i32.const 0
10654| i64x2.shl %[-2], %[-1]
10658| drop
10662| return
10666| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10686| i32.const 0
10694| i64x2.shr_s %[-2], %[-1]
10698| drop
10702| return
10706| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10726| i32.const 0
10734| i64x2.shr_u %[-2], %[-1]
10738| drop
10742| return
10746| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10766| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10786| i64x2.add %[-2], %[-1]
10790| drop
10794| return
10798| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10818| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10838| i64x2.sub %[-2], %[-1]
10842| drop
10846| return
10850| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10870| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10890| i64x2.mul %[-2], %[-1]
10894| drop
10898| return
10902| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10922| f32x4.abs %[-1]
10926| drop
10930| return
10934| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10954| f32x4.neg %[-1]
10958| drop
10962| return
10966| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10986| f32x4.sqrt %[-1]
10990| drop
10994| return
10998| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11018| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11038| f32x4.add %[-2], %[-1]
11042| drop
11046| return
11050| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11070| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11090| f32x4.sub %[-2], %[-1]
11094| drop
11098| return
11102| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11122| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11142| f32x4.mul %[-2], %[-1]
11146| drop
11150| return
11154| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11174| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11194| f32x4.div %[-2], %[-1]
11198| drop
11202| return
11206| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11226| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11246| f32x4.min %[-2], %[-1]
11250| drop
11254| return
11258| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11278| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11298| f32x4.max %[-2], %[-1]
11302| drop
11306| return
11310| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11330| f64x2.abs %[-1]
11334| drop
11338| return
11342| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11362| f64x2.neg %[-1]
11366| drop
11370| return
11374| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11394| f64x2.sqrt %[-1]
11398| drop
11402| return
11406| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11426| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11446| f64x2.add %[-2], %[-1]
11450| drop
11454| return
11458| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11478| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11498| f64x2.sub %[-2], %[-1]
11502| drop
11506| return
11510| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11530| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11550| f64x2.mul %[-2], %[-1]
11554| drop
11558| return
11562| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11582| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11602| f64x2.div %[-2], %[-1]
11606| drop
11610| return
11614| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11634| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11654| f64x2.min %[-2], %[-1]
11658| drop
11662| return
11666| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11686| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11706| f64x2.max %[-2], %[-1]
11710| drop
11714| return
11718| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11738| i32x4.trunc_sat_f32x4_s %[-1]
11742| drop
11746| return
11750| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11770| i32x4.trunc_sat_f32x4_u %[-1]
11774| drop
11778| return
11782| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11802| f32x4.convert_i32x4_s %[-1]
11806| drop
11810| return
11814| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11834| f32x4.convert_i32x4_u %[-1]
11838| drop
11842| return
11846| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11866| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11886| v8x16.swizzle %[-2], %[-1]
11890| drop
11894| return
11898| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11918| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11938| v8x16.shuffle %[-2], %[-1] : (Lane imm: $0x01010101 0x01010101 0x01010101 0x01010101 )
11958| drop
11962| return
11966| i32.const 1
11974| v8x16.load_splat $0:%[-1]+$0
11986| drop
11990| return
11994| i32.const 1
12002| v16x8.load_splat $0:%[-1]+$0
12014| drop
12018| return
12022| i32.const 1
12030| v32x4.load_splat $0:%[-1]+$0
12042| drop
12046| return
12050| i32.const 1
12058| v64x2.load_splat $0:%[-1]+$0
12070| drop
12074| return
12078| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
12098| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
12118| i8x16.narrow_i16x8_s %[-2], %[-1]
12122| drop
12126| return
12130| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
12150| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
12170| i8x16.narrow_i16x8_u %[-2], %[-1]
12174| drop
12178| return
12182| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
12202| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
12222| i16x8.narrow_i32x4_s %[-2], %[-1]
12226| drop
12230| return
12234| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
12254| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
12274| i16x8.narrow_i32x4_u %[-2], %[-1]
12278| drop
12282| return
12286| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
12306| i16x8.widen_low_i8x16_s %[-1]
12310| drop
12314| return
12318| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
12338| i16x8.widen_high_i8x16_s %[-1]
12342| drop
12346| return
12350| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
12370| i16x8.widen_low_i8x16_u %[-1]
12374| drop
12378| return
12382| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
12402| i16x8.widen_high_i8x16_u %[-1]
12406| drop
12410| return
12414| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
12434| i32x4.widen_low_i16x8_s %[-1]
12438| drop
12442| return
12446| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
12466| i32x4.widen_high_i16x8_s %[-1]
12470| drop
12474| return
12478| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
12498| i32x4.widen_low_i16x8_u %[-1]
12502| drop
12506| return
12510| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
12530| i32x4.widen_high_i16x8_u %[-1]
12534| drop
12538| return
12542| i32.const 0
12550| i16x8.load8x8_s $0:%[-1]+$0
12562| drop
12566| return
12570| i32.const 0
12578| i16x8.load8x8_u $0:%[-1]+$0
12590| drop
12594| return
12598| i32.const 0
12606| i32x4.load16x4_s $0:%[-1]+$0
12618| drop
12622| return
12626| i32.const 0
12634| i32x4.load16x4_u $0:%[-1]+$0
12646| drop
12650| return
12654| i32.const 0
12662| i64x2.load32x2_s $0:%[-1]+$0
12674| drop
12678| return
12682| i32.const 0
12690| i64x2.load32x2_u $0:%[-1]+$0
12702| drop
12706| return
12710| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
12730| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
12750| v128.andnot %[-2], %[-1]
12754| drop
12758| return
12762| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
12782| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
12802| i8x16.avgr_u %[-2], %[-1]
12806| drop
12810| return
12814| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
12834| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
12854| i16x8.avgr_u %[-2], %[-1]
12858| drop
12862| return
12866| i32.const 1
12874| i32.const 2
12882| atomic.notify $0:%[-2]+$3, %[-1]
12894| drop
12898| return
12902| i32.const 1
12910| i32.const 2
12918| i64.const 3
12930| i32.atomic.wait $0:%[-3]+$3, %[-2], %[-1]
12942| drop
12946| return
12950| i32.const 1
12958| i64.const 2
12970| i64.const 3
12982| i64.atomic.wait $0:%[-3]+$3, %[-2], %[-1]
12994| drop
12998| return
13002| i32.const 1
13010| i32.atomic.load $0:%[-1]+$3
13022| drop
13026| return
13030| i32.const 1
13038| i64.atomic.load $0:%[-1]+$7
13050| drop
13054| return
13058| i32.const 1
13066| i32.atomic.load8_u $0:%[-1]+$3
13078| drop
13082| return
13086| i32.const 1
13094| i32.atomic.load16_u $0:%[-1]+$3
13106| drop
13110| return
13114| i32.const 1
13122| i64.atomic.load8_u $0:%[-1]+$3
13134| drop
13138| return
13142| i32.const 1
13150| i64.atomic.load16_u $0:%[-1]+$3
13162| drop
13166| return
13170| i32.const 1
13178| i64.atomic.load32_u $0:%[-1]+$3
13190| drop
13194| return
13198| i32.const 1
13206| i32.const 2
13214| i32.atomic.store $0:%[-2]+$3, %[-1]
13226| return
13230| i32.const 1
13238| i64.const 2
13250| i64.atomic.store $0:%[-2]+$7, %[-1]
13262| return
13266| i32.const 1
13274| i32.const 2
13282| i32.atomic.store8 $0:%[-2]+$3, %[-1]
13294| return
13298| i32.const 1
13306| i32.const 2
13314| i32.atomic.store16 $0:%[-2]+$3, %[-1]
13326| return
13330| i32.const 1
13338| i64.const 2
13350| i64.atomic.store8 $0:%[-2]+$3, %[-1]
13362| return
13366| i32.const 1
13374| i64.const 2
13386| i64.atomic.store16 $0:%[-2]+$3, %[-1]
13398| return
13402| i32.const 1
13410| i64.const 2
13422| i64.atomic.store32 $0:%[-2]+$3, %[-1]
13434| return
13438| i32.const 1
13446| i32.const 2
13454| i32.atomic.rmw.add $0:%[-2]+$3, %[-1]
13466| drop
13470| return
13474| i32.const 1
13482| i64.const 2
13494| i64.atomic.rmw.add $0:%[-2]+$7, %[-1]
13506| drop
13510| return
13514| i32.const 1
13522| i32.const 2
13530| i32.atomic.rmw8.add_u $0:%[-2]+$3, %[-1]
13542| drop
13546| return
13550| i32.const 1
13558| i32.const 2
13566| i32.atomic.rmw16.add_u $0:%[-2]+$3, %[-1]
13578| drop
13582| return
13586| i32.const 1
13594| i64.const 2
13606| i64.atomic.rmw8.add_u $0:%[-2]+$3, %[-1]
13618| drop
13622| return
13626| i32.const 1
13634| i64.const 2
13646| i64.atomic.rmw16.add_u $0:%[-2]+$3, %[-1]
13658| drop
13662| return
13666| i32.const 1
13674| i64.const 2
13686| i64.atomic.rmw32.add_u $0:%[-2]+$3, %[-1]
13698| drop
13702| return
13706| i32.const 1
13714| i32.const 2
13722| i32.atomic.rmw.sub $0:%[-2]+$3, %[-1]
13734| drop
13738| return
13742| i32.const 1
13750| i64.const 2
13762| i64.atomic.rmw.sub $0:%[-2]+$7, %[-1]
13774| drop
13778| return
13782| i32.const 1
13790| i32.const 2
13798| i32.atomic.rmw8.sub_u $0:%[-2]+$3, %[-1]
13810| drop
13814| return
13818| i32.const 1
13826| i32.const 2
13834| i32.atomic.rmw16.sub_u $0:%[-2]+$3, %[-1]
13846| drop
13850| return
13854| i32.const 1
13862| i64.const 2
13874| i64.atomic.rmw8.sub_u $0:%[-2]+$3, %[-1]
13886| drop
13890| return
13894| i32.const 1
13902| i64.const 2
13914| i64.atomic.rmw16.sub_u $0:%[-2]+$3, %[-1]
13926| drop
13930| return
13934| i32.const 1
13942| i64.const 2
13954| i64.atomic.rmw32.sub_u $0:%[-2]+$3, %[-1]
13966| drop
13970| return
13974| i32.const 1
13982| i32.const 2
13990| i32.atomic.rmw.and $0:%[-2]+$3, %[-1]
14002| drop
14006| return
14010| i32.const 1
14018| i64.const 2
14030| i64.atomic.rmw.and $0:%[-2]+$7, %[-1]
14042| drop
14046| return
14050| i32.const 1
14058| i32.const 2
14066| i32.atomic.rmw8.and_u $0:%[-2]+$3, %[-1]
14078| drop
14082| return
14086| i32.const 1
14094| i32.const 2
14102| i32.atomic.rmw16.and_u $0:%[-2]+$3, %[-1]
14114| drop
14118| return
14122| i32.const 1
14130| i64.const 2
14142| i64.atomic.rmw8.and_u $0:%[-2]+$3, %[-1]
14154| drop
14158| return
14162| i32.const 1
14170| i64.const 2
14182| i64.atomic.rmw16.and_u $0:%[-2]+$3, %[-1]
14194| drop
14198| return
14202| i32.const 1
14210| i64.const 2
14222| i64.atomic.rmw32.and_u $0:%[-2]+$3, %[-1]
14234| drop
14238| return
14242| i32.const 1
14250| i32.const 2
14258| i32.atomic.rmw.or $0:%[-2]+$3, %[-1]
14270| drop
14274| return
14278| i32.const 1
14286| i64.const 2
14298| i64.atomic.rmw.or $0:%[-2]+$7, %[-1]
14310| drop
14314| return
14318| i32.const 1
14326| i32.const 2
14334| i32.atomic.rmw8.or_u $0:%[-2]+$3, %[-1]
14346| drop
14350| return
14354| i32.const 1
14362| i32.const 2
14370| i32.atomic.rmw16.or_u $0:%[-2]+$3, %[-1]
14382| drop
14386| return
14390| i32.const 1
14398| i64.const 2
14410| i64.atomic.rmw8.or_u $0:%[-2]+$3, %[-1]
14422| drop
14426| return
14430| i32.const 1
14438| i64.const 2
14450| i64.atomic.rmw16.or_u $0:%[-2]+$3, %[-1]
14462| drop
14466| return
14470| i32.const 1
14478| i64.const 2
14490| i64.atomic.rmw32.or_u $0:%[-2]+$3, %[-1]
14502| drop
14506| return
14510| i32.const 1
14518| i32.const 2
14526| i32.atomic.rmw.xor $0:%[-2]+$3, %[-1]
14538| drop
14542| return
14546| i32.const 1
14554| i64.const 2
14566| i64.atomic.rmw.xor $0:%[-2]+$7, %[-1]
14578| drop
14582| return
14586| i32.const 1
14594| i32.const 2
14602| i32.atomic.rmw8.xor_u $0:%[-2]+$3, %[-1]
14614| drop
14618| return
14622| i32.const 1
14630| i32.const 2
14638| i32.atomic.rmw16.xor_u $0:%[-2]+$3, %[-1]
14650| drop
14654| return
14658| i32.const 1
14666| i64.const 2
14678| i64.atomic.rmw8.xor_u $0:%[-2]+$3, %[-1]
14690| drop
14694| return
14698| i32.const 1
14706| i64.const 2
14718| i64.atomic.rmw16.xor_u $0:%[-2]+$3, %[-1]
14730| drop
14734| return
14738| i32.const 1
14746| i64.const 2
14758| i64.atomic.rmw32.xor_u $0:%[-2]+$3, %[-1]
14770| drop
14774| return
14778| i32.const 1
14786| i32.const 2
14794| i32.atomic.rmw.xchg $0:%[-2]+$3, %[-1]
14806| drop
14810| return
14814| i32.const 1
14822| i64.const 2
14834| i64.atomic.rmw.xchg $0:%[-2]+$7, %[-1]
14846| drop
14850| return
14854| i32.const 1
14862| i32.const 2
14870| i32.atomic.rmw8.xchg_u $0:%[-2]+$3, %[-1]
14882| drop
14886| return
14890| i32.const 1
14898| i32.const 2
14906| i32.atomic.rmw16.xchg_u $0:%[-2]+$3, %[-1]
14918| drop
14922| return
14926| i32.const 1
14934| i64.const 2
14946| i64.atomic.rmw8.xchg_u $0:%[-2]+$3, %[-1]
14958| drop
14962| return
14966| i32.const 1
14974| i64.const 2
14986| i64.atomic.rmw16.xchg_u $0:%[-2]+$3, %[-1]
14998| drop
15002| return
15006| i32.const 1
15014| i64.const 2
15026| i64.atomic.rmw32.xchg_u $0:%[-2]+$3, %[-1]
15038| drop
15042| return
15046| i32.const 1
15054| i32.const 2
15062| i32.const 3
15070| i32.atomic.rmw.cmpxchg $0:%[-3]+$3, %[-2], %[-1]
15082| drop
15086| return
15090| i32.const 1
15098| i64.const 2
15110| i64.const 3
15122| i64.atomic.rmw.cmpxchg $0:%[-3]+$7, %[-2], %[-1]
15134| drop
15138| return
15142| i32.const 1
15150| i32.const 2
15158| i32.const 3
15166| i32.atomic.rmw8.cmpxchg_u $0:%[-3]+$3, %[-2], %[-1]
15178| drop
15182| return
15186| i32.const 1
15194| i32.const 2
15202| i32.const 3
15210| i32.atomic.rmw16.cmpxchg_u $0:%[-3]+$3, %[-2], %[-1]
15222| drop
15226| return
15230| i32.const 1
15238| i64.const 2
15250| i64.const 3
15262| i64.atomic.rmw8.cmpxchg_u $0:%[-3]+$3, %[-2], %[-1]
15274| drop
15278| return
15282| i32.const 1
15290| i64.const 2
15302| i64.const 3
15314| i64.atomic.rmw16.cmpxchg_u $0:%[-3]+$3, %[-2], %[-1]
15326| drop
15330| return
15334| i32.const 1
15342| i64.const 2
15354| i64.const 3
15366| i64.atomic.rmw32.cmpxchg_u $0:%[-3]+$3, %[-2], %[-1]
15378| drop
15382| return
unreachable() => error: unreachable executed
br() =>
br_table() =>
return() =>
call() =>
call_indirect() =>
return_call() =>
return_call_indirect() =>
drop() =>
select() =>
select_t() =>
get_local() =>
set_local() =>
tee_local() =>
get_global() =>
set_global() =>
i32.load() =>
i64.load() =>
f32.load() =>
f64.load() =>
i32.load8_s() =>
i32.load8_u() =>
i32.load16_s() =>
i32.load16_u() =>
i64.load8_s() =>
i64.load8_u() =>
i64.load16_s() =>
i64.load16_u() =>
i64.load32_s() =>
i64.load32_u() =>
i32.store() =>
i64.store() =>
f32.store() =>
f64.store() =>
i32.store8() =>
i32.store16() =>
i64.store8() =>
i64.store16() =>
i64.store32() =>
current_memory() =>
grow_memory() =>
i32.const() =>
i64.const() =>
f32.const() =>
f64.const() =>
i32.eqz() =>
i32.eq() =>
i32.ne() =>
i32.lt_s() =>
i32.lt_u() =>
i32.gt_s() =>
i32.gt_u() =>
i32.le_s() =>
i32.le_u() =>
i32.ge_s() =>
i32.ge_u() =>
i64.eqz() =>
i64.eq() =>
i64.ne() =>
i64.lt_s() =>
i64.lt_u() =>
i64.gt_s() =>
i64.gt_u() =>
i64.le_s() =>
i64.le_u() =>
i64.ge_s() =>
i64.ge_u() =>
f32.eq() =>
f32.ne() =>
f32.lt() =>
f32.gt() =>
f32.le() =>
f32.ge() =>
f64.eq() =>
f64.ne() =>
f64.lt() =>
f64.gt() =>
f64.le() =>
f64.ge() =>
i32.clz() =>
i32.ctz() =>
i32.popcnt() =>
i32.add() =>
i32.sub() =>
i32.mul() =>
i32.div_s() =>
i32.div_u() =>
i32.rem_s() =>
i32.rem_u() =>
i32.and() =>
i32.or() =>
i32.xor() =>
i32.shl() =>
i32.shr_s() =>
i32.shr_u() =>
i32.rotl() =>
i32.rotr() =>
i64.clz() =>
i64.ctz() =>
i64.popcnt() =>
i64.add() =>
i64.sub() =>
i64.mul() =>
i64.div_s() =>
i64.div_u() =>
i64.rem_s() =>
i64.rem_u() =>
i64.and() =>
i64.or() =>
i64.xor() =>
i64.shl() =>
i64.shr_s() =>
i64.shr_u() =>
i64.rotl() =>
i64.rotr() =>
f32.abs() =>
f32.neg() =>
f32.ceil() =>
f32.floor() =>
f32.trunc() =>
f32.nearest() =>
f32.sqrt() =>
f32.add() =>
f32.sub() =>
f32.mul() =>
f32.div() =>
f32.min() =>
f32.max() =>
f32.copysign() =>
f64.abs() =>
f64.neg() =>
f64.ceil() =>
f64.floor() =>
f64.trunc() =>
f64.nearest() =>
f64.sqrt() =>
f64.add() =>
f64.sub() =>
f64.mul() =>
f64.div() =>
f64.min() =>
f64.max() =>
f64.copysign() =>
i32.wrap/i64() =>
i32.trunc_s/f32() =>
i32.trunc_u/f32() =>
i32.trunc_s/f64() =>
i32.trunc_u/f64() =>
i64.extend_s/i32() =>
i64.extend_u/i32() =>
i64.trunc_s/f32() =>
i64.trunc_u/f32() =>
i64.trunc_s/f64() =>
i64.trunc_u/f64() =>
f32.convert_s/i32() =>
f32.convert_u/i32() =>
f32.convert_s/i64() =>
f32.convert_u/i64() =>
f32.demote/f64() =>
f64.convert_s/i32() =>
f64.convert_u/i32() =>
f64.convert_s/i64() =>
f64.convert_u/i64() =>
f64.promote/f32() =>
i32.reinterpret/f32() =>
f32.reinterpret/i32() =>
i64.reinterpret/f64() =>
f64.reinterpret/i64() =>
i32.extend8_s() =>
i32.extend16_s() =>
i64.extend8_s() =>
i64.extend16_s() =>
i64.extend32_s() =>
alloca() =>
br_unless() =>
called host host.print(i32:1) =>
call_host() =>
data() =>
drop_keep() =>
i32.trunc_s:sat/f32() =>
i32.trunc_u:sat/f32() =>
i32.trunc_s:sat/f64() =>
i32.trunc_u:sat/f64() =>
i64.trunc_s:sat/f32() =>
i64.trunc_u:sat/f32() =>
i64.trunc_s:sat/f64() =>
i64.trunc_u:sat/f64() =>
memory.init() => error: out of bounds memory access: memory.init out of bounds
data.drop() =>
memory.copy() =>
memory.fill() =>
table.init() => error: out of bounds table access: table.init out of bounds
elem.drop() =>
table.copy() => error: out of bounds table access: table.copy out of bounds
v128.load() =>
v128.store() =>
v128.const() =>
i8x16.splat() =>
i8x16.extract_lane_s() =>
i8x16.extract_lane_u() =>
i8x16.replace_lane() =>
i16x8.splat() =>
i16x8.extract_lane_s() =>
i16x8.extract_lane_u() =>
i16x8.replace_lane() =>
i32x4.splat() =>
i32x4.extract_lane() =>
i32x4.replace_lane() =>
i64x2.splat() =>
i64x2.extract_lane() =>
i64x2.replace_lane() =>
f32x4.splat() =>
f32x4.extract_lane() =>
f32x4.replace_lane() =>
f64x2.splat() =>
f64x2.extract_lane() =>
f64x2.replace_lane() =>
i8x16.eq() =>
i8x16.ne() =>
i8x16.lt_s() =>
i8x16.lt_u() =>
i8x16.gt_s() =>
i8x16.gt_u() =>
i8x16.le_s() =>
i8x16.le_u() =>
i8x16.ge_s() =>
i8x16.ge_u() =>
i16x8.eq() =>
i16x8.ne() =>
i16x8.lt_s() =>
i16x8.lt_u() =>
i16x8.gt_s() =>
i16x8.gt_u() =>
i16x8.le_s() =>
i16x8.le_u() =>
i16x8.ge_s() =>
i16x8.ge_u() =>
i32x4.eq() =>
i32x4.ne() =>
i32x4.lt_s() =>
i32x4.lt_u() =>
i32x4.gt_s() =>
i32x4.gt_u() =>
i32x4.le_s() =>
i32x4.le_u() =>
i32x4.ge_s() =>
i32x4.ge_u() =>
f32x4.eq() =>
f32x4.ne() =>
f32x4.lt() =>
f32x4.gt() =>
f32x4.le() =>
f32x4.ge() =>
f64x2.eq() =>
f64x2.ne() =>
f64x2.lt() =>
f64x2.gt() =>
f64x2.le() =>
f64x2.ge() =>
v128.not() =>
v128.and() =>
v128.or() =>
v128.xor() =>
v128.bitselect() =>
i8x16.neg() =>
i8x16.any_true() =>
i8x16.all_true() =>
i8x16.shl() =>
i8x16.shr_s() =>
i8x16.shr_u() =>
i8x16.add() =>
i8x16.add_saturate_s() =>
i8x16.add_saturate_u() =>
i8x16.sub() =>
i8x16.sub_saturate_s() =>
i8x16.sub_saturate_u() =>
i8x16.min_s() => error: not implemented
i8x16.min_u() => error: not implemented
i8x16.max_s() => error: not implemented
i8x16.max_u() => error: not implemented
i16x8.neg() =>
i16x8.any_true() =>
i16x8.all_true() =>
i16x8.shl() =>
i16x8.shr_s() =>
i16x8.shr_u() =>
i16x8.add() =>
i16x8.add_saturate_s() =>
i16x8.add_saturate_u() =>
i16x8.sub() =>
i16x8.sub_saturate_s() =>
i16x8.sub_saturate_u() =>
i16x8.mul() =>
i16x8.min_s() => error: not implemented
i16x8.min_u() => error: not implemented
i16x8.max_s() => error: not implemented
i16x8.max_u() => error: not implemented
i32x4.neg() =>
i32x4.any_true() =>
i32x4.all_true() =>
i32x4.shl() =>
i32x4.shr_s() =>
i32x4.shr_u() =>
i32x4.add() =>
i32x4.sub() =>
i32x4.mul() =>
i32x4.min_s() => error: not implemented
i32x4.min_u() => error: not implemented
i32x4.max_s() => error: not implemented
i32x4.max_u() => error: not implemented
i64x2.neg() =>
i64x2.shl() =>
i64x2.shr_s() =>
i64x2.shr_u() =>
i64x2.add() =>
i64x2.sub() =>
i64x2.mul() =>
f32x4.abs() =>
f32x4.neg() =>
f32x4.sqrt() =>
f32x4.add() =>
f32x4.sub() =>
f32x4.mul() =>
f32x4.div() =>
f32x4.min() =>
f32x4.max() =>
f64x2.abs() =>
f64x2.neg() =>
f64x2.sqrt() =>
f64x2.add() =>
f64x2.sub() =>
f64x2.mul() =>
f64x2.div() =>
f64x2.min() =>
f64x2.max() =>
i32x4.trunc_sat_f32x4_s() =>
i32x4.trunc_sat_f32x4_u() =>
f32x4.convert_i32x4_s() =>
f32x4.convert_i32x4_u() =>
v8x16.swizzle() =>
v8x16.shuffle() =>
v8x16.load_splat() =>
v16x8.load_splat() =>
v32x4.load_splat() =>
v64x2.load_splat() =>
i8x16.narrow_i16x8_s() => error: not implemented
i8x16.narrow_i16x8_u() => error: not implemented
i16x8.narrow_i32x4_s() => error: not implemented
i16x8.narrow_i32x4_u() => error: not implemented
i16x8.widen_low_i8x16_s() => error: not implemented
i16x8.widen_high_i8x16_s() => error: not implemented
i16x8.widen_low_i8x16_u() => error: not implemented
i16x8.widen_high_i8x16_u() => error: not implemented
i32x4.widen_low_i16x8_s() => error: not implemented
i32x4.widen_high_i16x8_s() => error: not implemented
i32x4.widen_low_i16x8_u() => error: not implemented
i32x4.widen_high_i16x8_u() => error: not implemented
i16x8.load8x8_s() => error: not implemented
i16x8.load8x8_u() => error: not implemented
i32x4.load16x4_s() => error: not implemented
i32x4.load16x4_u() => error: not implemented
i64x2.load32x2_s() => error: not implemented
i64x2.load32x2_u() => error: not implemented
v128.andnot() => error: not implemented
i8x16.avgr_u() => error: not implemented
i16x8.avgr_u() => error: not implemented
atomic.notify() => error: unreachable executed
i32.atomic.wait() => error: unreachable executed
i64.atomic.wait() => error: unreachable executed
i32.atomic.load() =>
i64.atomic.load() =>
i32.atomic.load8_u() =>
i32.atomic.load16_u() =>
i64.atomic.load8_u() =>
i64.atomic.load16_u() =>
i64.atomic.load32_u() =>
i32.atomic.store() =>
i64.atomic.store() =>
i32.atomic.store8() =>
i32.atomic.store16() =>
i64.atomic.store8() =>
i64.atomic.store16() =>
i64.atomic.store32() =>
i32.atomic.rmw.add() =>
i64.atomic.rmw.add() =>
i32.atomic.rmw8.add_u() =>
i32.atomic.rmw16.add_u() =>
i64.atomic.rmw8.add_u() =>
i64.atomic.rmw16.add_u() =>
i64.atomic.rmw32.add_u() =>
i32.atomic.rmw.sub() =>
i64.atomic.rmw.sub() =>
i32.atomic.rmw8.sub_u() =>
i32.atomic.rmw16.sub_u() =>
i64.atomic.rmw8.sub_u() =>
i64.atomic.rmw16.sub_u() =>
i64.atomic.rmw32.sub_u() =>
i32.atomic.rmw.and() =>
i64.atomic.rmw.and() =>
i32.atomic.rmw8.and_u() =>
i32.atomic.rmw16.and_u() =>
i64.atomic.rmw8.and_u() =>
i64.atomic.rmw16.and_u() =>
i64.atomic.rmw32.and_u() =>
i32.atomic.rmw.or() =>
i64.atomic.rmw.or() =>
i32.atomic.rmw8.or_u() =>
i32.atomic.rmw16.or_u() =>
i64.atomic.rmw8.or_u() =>
i64.atomic.rmw16.or_u() =>
i64.atomic.rmw32.or_u() =>
i32.atomic.rmw.xor() =>
i64.atomic.rmw.xor() =>
i32.atomic.rmw8.xor_u() =>
i32.atomic.rmw16.xor_u() =>
i64.atomic.rmw8.xor_u() =>
i64.atomic.rmw16.xor_u() =>
i64.atomic.rmw32.xor_u() =>
i32.atomic.rmw.xchg() =>
i64.atomic.rmw.xchg() =>
i32.atomic.rmw8.xchg_u() =>
i32.atomic.rmw16.xchg_u() =>
i64.atomic.rmw8.xchg_u() =>
i64.atomic.rmw16.xchg_u() =>
i64.atomic.rmw32.xchg_u() =>
i32.atomic.rmw.cmpxchg() =>
i64.atomic.rmw.cmpxchg() =>
i32.atomic.rmw8.cmpxchg_u() =>
i32.atomic.rmw16.cmpxchg_u() =>
i64.atomic.rmw8.cmpxchg_u() =>
i64.atomic.rmw16.cmpxchg_u() =>
i64.atomic.rmw32.cmpxchg_u() =>
;;; STDOUT ;;)
