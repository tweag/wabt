;;; TOOL: run-interp
;;; ARGS*: -v --enable-all
;;; ARGS1: --host-print

(module
  (import "host" "print" (func $print (param i32)))

  (type $empty (func))
  (func $empty)
  (memory 1 1 shared)
  (table $table1 anyfunc (elem $empty $empty))
  (global $g (mut i32) (i32.const 0))
  (data "")
  (elem funcref)

  (; 0x00 ;) (func (export "unreachable") unreachable)
  (; 0x01 ;) ;; nop       -- not generated in interpreter
  (; 0x02 ;) ;; block     -- not generated in interpreter
  (; 0x03 ;) ;; loop      -- not generated in interpreter
  (; 0x04 ;) ;; if        -- not generated in interpreter
  (; 0x05 ;) ;; else      -- not generated in interpreter
  (; 0x06 ;) ;; try       -- not implemented
  (; 0x07 ;) ;; catch     -- not implemented
  (; 0x08 ;) ;; throw     -- not implemented
  (; 0x09 ;) ;; rethrow   -- not implemented
  (; 0x0a ;) ;; catch_all -- not implemented
  (; 0x0b ;) ;; end       -- not generated in interpreter
  (; 0x0c ;) (func (export "br") br 0)
  (; 0x0d ;) ;; 0x0d br_if  ;; not generated in interpreter
  (; 0x0e ;) (func (export "br_table") i32.const 1 br_table 0)
  (; 0x0f ;) (func (export "return") return)
  (; 0x10 ;) (func (export "call") call $empty)
  (; 0x11 ;) (func (export "call_indirect") i32.const 1 call_indirect (type $empty))

  ;; --enable-tail-call
  (; 0x12 ;) (func (export "return_call") return_call $empty)
  (; 0x13 ;) (func (export "return_call_indirect") i32.const 1 return_call_indirect (type $empty))

  (; 0x1a ;) (func (export "drop") i32.const 1 drop)
  (; 0x1b ;) (func (export "select") i32.const 1 i32.const 2 i32.const 3 select drop)
  (; 0x1c ;) (func (export "select_t") i32.const 1 i32.const 2 i32.const 3 select (result i32) drop)
  (; 0x20 ;) (func (export "get_local") (local i32) get_local 0 drop)
  (; 0x21 ;) (func (export "set_local") (local i32) i32.const 1 set_local 0)
  (; 0x22 ;) (func (export "tee_local") (local i32) i32.const 1 tee_local 0 drop)
  (; 0x23 ;) (func (export "get_global") get_global 0 drop)
  (; 0x24 ;) (func (export "set_global") i32.const 1 set_global 0)
  (; 0x28 ;) (func (export "i32.load") i32.const 1 i32.load offset=2 drop)
  (; 0x29 ;) (func (export "i64.load") i32.const 1 i64.load offset=2 drop)
  (; 0x2a ;) (func (export "f32.load") i32.const 1 f32.load offset=2 drop)
  (; 0x2b ;) (func (export "f64.load") i32.const 1 f64.load offset=2 drop)
  (; 0x2c ;) (func (export "i32.load8_s") i32.const 1 i32.load8_s offset=2 drop)
  (; 0x2d ;) (func (export "i32.load8_u") i32.const 1 i32.load8_u offset=2 drop)
  (; 0x2e ;) (func (export "i32.load16_s") i32.const 1 i32.load16_s offset=2 drop)
  (; 0x2f ;) (func (export "i32.load16_u") i32.const 1 i32.load16_u offset=2 drop)
  (; 0x30 ;) (func (export "i64.load8_s") i32.const 1 i64.load8_s offset=2 drop)
  (; 0x31 ;) (func (export "i64.load8_u") i32.const 1 i64.load8_u offset=2 drop)
  (; 0x32 ;) (func (export "i64.load16_s") i32.const 1 i64.load16_s offset=2 drop)
  (; 0x33 ;) (func (export "i64.load16_u") i32.const 1 i64.load16_u offset=2 drop)
  (; 0x34 ;) (func (export "i64.load32_s") i32.const 1 i64.load32_s offset=2 drop)
  (; 0x35 ;) (func (export "i64.load32_u") i32.const 1 i64.load32_u offset=2 drop)
  (; 0x36 ;) (func (export "i32.store") i32.const 1 i32.const 2 i32.store offset=2)
  (; 0x37 ;) (func (export "i64.store") i32.const 1 i64.const 2 i64.store offset=2)
  (; 0x38 ;) (func (export "f32.store") i32.const 1 f32.const 2 f32.store offset=2)
  (; 0x39 ;) (func (export "f64.store") i32.const 1 f64.const 2 f64.store offset=2)
  (; 0x3a ;) (func (export "i32.store8") i32.const 1 i32.const 2 i32.store8 offset=2)
  (; 0x3b ;) (func (export "i32.store16") i32.const 1 i32.const 2 i32.store16 offset=2)
  (; 0x3c ;) (func (export "i64.store8") i32.const 1 i64.const 2 i64.store8 offset=2)
  (; 0x3d ;) (func (export "i64.store16") i32.const 1 i64.const 2 i64.store16 offset=2)
  (; 0x3e ;) (func (export "i64.store32") i32.const 1 i64.const 2 i64.store32 offset=2)
  (; 0x3f ;) (func (export "current_memory") current_memory drop)
  (; 0x40 ;) (func (export "grow_memory") i32.const 1 grow_memory drop)
  (; 0x41 ;) (func (export "i32.const") i32.const 1 drop)
  (; 0x42 ;) (func (export "i64.const") i64.const 1 drop)
  (; 0x43 ;) (func (export "f32.const") f32.const 1 drop)
  (; 0x44 ;) (func (export "f64.const") f64.const 1 drop)
  (; 0x45 ;) (func (export "i32.eqz") i32.const 1 i32.eqz drop)
  (; 0x46 ;) (func (export "i32.eq") i32.const 1 i32.const 2 i32.eq drop)
  (; 0x47 ;) (func (export "i32.ne") i32.const 1 i32.const 2 i32.ne drop)
  (; 0x48 ;) (func (export "i32.lt_s") i32.const 1 i32.const 2 i32.lt_s drop)
  (; 0x49 ;) (func (export "i32.lt_u") i32.const 1 i32.const 2 i32.lt_u drop)
  (; 0x4a ;) (func (export "i32.gt_s") i32.const 1 i32.const 2 i32.gt_s drop)
  (; 0x4b ;) (func (export "i32.gt_u") i32.const 1 i32.const 2 i32.gt_u drop)
  (; 0x4c ;) (func (export "i32.le_s") i32.const 1 i32.const 2 i32.le_s drop)
  (; 0x4d ;) (func (export "i32.le_u") i32.const 1 i32.const 2 i32.le_u drop)
  (; 0x4e ;) (func (export "i32.ge_s") i32.const 1 i32.const 2 i32.ge_s drop)
  (; 0x4f ;) (func (export "i32.ge_u") i32.const 1 i32.const 2 i32.ge_u drop)
  (; 0x50 ;) (func (export "i64.eqz") i64.const 1 i64.eqz drop)
  (; 0x51 ;) (func (export "i64.eq") i64.const 1 i64.const 2 i64.eq drop)
  (; 0x52 ;) (func (export "i64.ne") i64.const 1 i64.const 2 i64.ne drop)
  (; 0x53 ;) (func (export "i64.lt_s") i64.const 1 i64.const 2 i64.lt_s drop)
  (; 0x54 ;) (func (export "i64.lt_u") i64.const 1 i64.const 2 i64.lt_u drop)
  (; 0x55 ;) (func (export "i64.gt_s") i64.const 1 i64.const 2 i64.gt_s drop)
  (; 0x56 ;) (func (export "i64.gt_u") i64.const 1 i64.const 2 i64.gt_u drop)
  (; 0x57 ;) (func (export "i64.le_s") i64.const 1 i64.const 2 i64.le_s drop)
  (; 0x58 ;) (func (export "i64.le_u") i64.const 1 i64.const 2 i64.le_u drop)
  (; 0x59 ;) (func (export "i64.ge_s") i64.const 1 i64.const 2 i64.ge_s drop)
  (; 0x5a ;) (func (export "i64.ge_u") i64.const 1 i64.const 2 i64.ge_u drop)
  (; 0x5b ;) (func (export "f32.eq") f32.const 1 f32.const 2 f32.eq drop)
  (; 0x5c ;) (func (export "f32.ne") f32.const 1 f32.const 2 f32.ne drop)
  (; 0x5d ;) (func (export "f32.lt") f32.const 1 f32.const 2 f32.lt drop)
  (; 0x5e ;) (func (export "f32.gt") f32.const 1 f32.const 2 f32.gt drop)
  (; 0x5f ;) (func (export "f32.le") f32.const 1 f32.const 2 f32.le drop)
  (; 0x60 ;) (func (export "f32.ge") f32.const 1 f32.const 2 f32.ge drop)
  (; 0x61 ;) (func (export "f64.eq") f64.const 1 f64.const 2 f64.eq drop)
  (; 0x62 ;) (func (export "f64.ne") f64.const 1 f64.const 2 f64.ne drop)
  (; 0x63 ;) (func (export "f64.lt") f64.const 1 f64.const 2 f64.lt drop)
  (; 0x64 ;) (func (export "f64.gt") f64.const 1 f64.const 2 f64.gt drop)
  (; 0x65 ;) (func (export "f64.le") f64.const 1 f64.const 2 f64.le drop)
  (; 0x66 ;) (func (export "f64.ge") f64.const 1 f64.const 2 f64.ge drop)
  (; 0x67 ;) (func (export "i32.clz") i32.const 1 i32.clz drop)
  (; 0x68 ;) (func (export "i32.ctz") i32.const 1 i32.ctz drop)
  (; 0x69 ;) (func (export "i32.popcnt") i32.const 1 i32.popcnt drop)
  (; 0x6a ;) (func (export "i32.add") i32.const 1 i32.const 2 i32.add drop)
  (; 0x6b ;) (func (export "i32.sub") i32.const 1 i32.const 2 i32.sub drop)
  (; 0x6c ;) (func (export "i32.mul") i32.const 1 i32.const 2 i32.mul drop)
  (; 0x6d ;) (func (export "i32.div_s") i32.const 1 i32.const 2 i32.div_s drop)
  (; 0x6e ;) (func (export "i32.div_u") i32.const 1 i32.const 2 i32.div_u drop)
  (; 0x6f ;) (func (export "i32.rem_s") i32.const 1 i32.const 2 i32.rem_s drop)
  (; 0x70 ;) (func (export "i32.rem_u") i32.const 1 i32.const 2 i32.rem_u drop)
  (; 0x71 ;) (func (export "i32.and") i32.const 1 i32.const 2 i32.and drop)
  (; 0x72 ;) (func (export "i32.or") i32.const 1 i32.const 2 i32.or drop)
  (; 0x73 ;) (func (export "i32.xor") i32.const 1 i32.const 2 i32.xor drop)
  (; 0x74 ;) (func (export "i32.shl") i32.const 1 i32.const 2 i32.shl drop)
  (; 0x75 ;) (func (export "i32.shr_s") i32.const 1 i32.const 2 i32.shr_s drop)
  (; 0x76 ;) (func (export "i32.shr_u") i32.const 1 i32.const 2 i32.shr_u drop)
  (; 0x77 ;) (func (export "i32.rotl") i32.const 1 i32.const 2 i32.rotl drop)
  (; 0x78 ;) (func (export "i32.rotr") i32.const 1 i32.const 2 i32.rotr drop)
  (; 0x79 ;) (func (export "i64.clz") i64.const 1 i64.clz drop)
  (; 0x7a ;) (func (export "i64.ctz") i64.const 1 i64.ctz drop)
  (; 0x7b ;) (func (export "i64.popcnt") i64.const 1 i64.popcnt drop)
  (; 0x7c ;) (func (export "i64.add") i64.const 1 i64.const 2 i64.add drop)
  (; 0x7d ;) (func (export "i64.sub") i64.const 1 i64.const 2 i64.sub drop)
  (; 0x7e ;) (func (export "i64.mul") i64.const 1 i64.const 2 i64.mul drop)
  (; 0x7f ;) (func (export "i64.div_s") i64.const 1 i64.const 2 i64.div_s drop)
  (; 0x80 ;) (func (export "i64.div_u") i64.const 1 i64.const 2 i64.div_u drop)
  (; 0x81 ;) (func (export "i64.rem_s") i64.const 1 i64.const 2 i64.rem_s drop)
  (; 0x82 ;) (func (export "i64.rem_u") i64.const 1 i64.const 2 i64.rem_u drop)
  (; 0x83 ;) (func (export "i64.and") i64.const 1 i64.const 2 i64.and drop)
  (; 0x84 ;) (func (export "i64.or") i64.const 1 i64.const 2 i64.or drop)
  (; 0x85 ;) (func (export "i64.xor") i64.const 1 i64.const 2 i64.xor drop)
  (; 0x86 ;) (func (export "i64.shl") i64.const 1 i64.const 2 i64.shl drop)
  (; 0x87 ;) (func (export "i64.shr_s") i64.const 1 i64.const 2 i64.shr_s drop)
  (; 0x88 ;) (func (export "i64.shr_u") i64.const 1 i64.const 2 i64.shr_u drop)
  (; 0x89 ;) (func (export "i64.rotl") i64.const 1 i64.const 2 i64.rotl drop)
  (; 0x8a ;) (func (export "i64.rotr") i64.const 1 i64.const 2 i64.rotr drop)
  (; 0x8b ;) (func (export "f32.abs") f32.const 1 f32.abs drop)
  (; 0x8c ;) (func (export "f32.neg") f32.const 1 f32.neg drop)
  (; 0x8d ;) (func (export "f32.ceil") f32.const 1 f32.ceil drop)
  (; 0x8e ;) (func (export "f32.floor") f32.const 1 f32.floor drop)
  (; 0x8f ;) (func (export "f32.trunc") f32.const 1 f32.trunc drop)
  (; 0x90 ;) (func (export "f32.nearest") f32.const 1 f32.nearest drop)
  (; 0x91 ;) (func (export "f32.sqrt") f32.const 1 f32.sqrt drop)
  (; 0x92 ;) (func (export "f32.add") f32.const 1 f32.const 2 f32.add drop)
  (; 0x93 ;) (func (export "f32.sub") f32.const 1 f32.const 2 f32.sub drop)
  (; 0x94 ;) (func (export "f32.mul") f32.const 1 f32.const 2 f32.mul drop)
  (; 0x95 ;) (func (export "f32.div") f32.const 1 f32.const 2 f32.div drop)
  (; 0x96 ;) (func (export "f32.min") f32.const 1 f32.const 2 f32.min drop)
  (; 0x97 ;) (func (export "f32.max") f32.const 1 f32.const 2 f32.max drop)
  (; 0x98 ;) (func (export "f32.copysign") f32.const 1 f32.const 2 f32.copysign drop)
  (; 0x99 ;) (func (export "f64.abs") f64.const 1 f64.abs drop)
  (; 0x9a ;) (func (export "f64.neg") f64.const 1 f64.neg drop)
  (; 0x9b ;) (func (export "f64.ceil") f64.const 1 f64.ceil drop)
  (; 0x9c ;) (func (export "f64.floor") f64.const 1 f64.floor drop)
  (; 0x9d ;) (func (export "f64.trunc") f64.const 1 f64.trunc drop)
  (; 0x9e ;) (func (export "f64.nearest") f64.const 1 f64.nearest drop)
  (; 0x9f ;) (func (export "f64.sqrt") f64.const 1 f64.sqrt drop)
  (; 0xa0 ;) (func (export "f64.add") f64.const 1 f64.const 2 f64.add drop)
  (; 0xa1 ;) (func (export "f64.sub") f64.const 1 f64.const 2 f64.sub drop)
  (; 0xa2 ;) (func (export "f64.mul") f64.const 1 f64.const 2 f64.mul drop)
  (; 0xa3 ;) (func (export "f64.div") f64.const 1 f64.const 2 f64.div drop)
  (; 0xa4 ;) (func (export "f64.min") f64.const 1 f64.const 2 f64.min drop)
  (; 0xa5 ;) (func (export "f64.max") f64.const 1 f64.const 2 f64.max drop)
  (; 0xa6 ;) (func (export "f64.copysign") f64.const 1 f64.const 2 f64.copysign drop)
  (; 0xa7 ;) (func (export "i32.wrap/i64") i64.const 1 i32.wrap/i64 drop)
  (; 0xa8 ;) (func (export "i32.trunc_s/f32") f32.const 1 i32.trunc_s/f32 drop)
  (; 0xa9 ;) (func (export "i32.trunc_u/f32") f32.const 1 i32.trunc_u/f32 drop)
  (; 0xaa ;) (func (export "i32.trunc_s/f64") f64.const 1 i32.trunc_s/f64 drop)
  (; 0xab ;) (func (export "i32.trunc_u/f64") f64.const 1 i32.trunc_u/f64 drop)
  (; 0xac ;) (func (export "i64.extend_s/i32") i32.const 1 i64.extend_s/i32 drop)
  (; 0xad ;) (func (export "i64.extend_u/i32") i32.const 1 i64.extend_u/i32 drop)
  (; 0xae ;) (func (export "i64.trunc_s/f32") f32.const 1 i64.trunc_s/f32 drop)
  (; 0xaf ;) (func (export "i64.trunc_u/f32") f32.const 1 i64.trunc_u/f32 drop)
  (; 0xb0 ;) (func (export "i64.trunc_s/f64") f64.const 1 i64.trunc_s/f64 drop)
  (; 0xb1 ;) (func (export "i64.trunc_u/f64") f64.const 1 i64.trunc_u/f64 drop)
  (; 0xb2 ;) (func (export "f32.convert_s/i32") i32.const 1 f32.convert_s/i32 drop)
  (; 0xb3 ;) (func (export "f32.convert_u/i32") i32.const 1 f32.convert_u/i32 drop)
  (; 0xb4 ;) (func (export "f32.convert_s/i64") i64.const 1 f32.convert_s/i64 drop)
  (; 0xb5 ;) (func (export "f32.convert_u/i64") i64.const 1 f32.convert_u/i64 drop)
  (; 0xb6 ;) (func (export "f32.demote/f64") f64.const 1 f32.demote/f64 drop)
  (; 0xb7 ;) (func (export "f64.convert_s/i32") i32.const 1 f64.convert_s/i32 drop)
  (; 0xb8 ;) (func (export "f64.convert_u/i32") i32.const 1 f64.convert_u/i32 drop)
  (; 0xb9 ;) (func (export "f64.convert_s/i64") i64.const 1 f64.convert_s/i64 drop)
  (; 0xba ;) (func (export "f64.convert_u/i64") i64.const 1 f64.convert_u/i64 drop)
  (; 0xbb ;) (func (export "f64.promote/f32") f32.const 1 f64.promote/f32 drop)
  (; 0xbc ;) (func (export "i32.reinterpret/f32") i32.const 1 f32.reinterpret/i32 drop)
  (; 0xbd ;) (func (export "f32.reinterpret/i32") f32.const 1 i32.reinterpret/f32 drop)
  (; 0xbe ;) (func (export "i64.reinterpret/f64") i64.const 1 f64.reinterpret/i64 drop)
  (; 0xbf ;) (func (export "f64.reinterpret/i64") f64.const 1 i64.reinterpret/f64 drop)

  ;; --enable-sign-extension
  (; 0xc0 ;) (func (export "i32.extend8_s") i32.const 1 i32.extend8_s drop)
  (; 0xc1 ;) (func (export "i32.extend16_s") i32.const 1 i32.extend16_s drop)
  (; 0xc2 ;) (func (export "i64.extend8_s") i64.const 1 i64.extend8_s drop)
  (; 0xc3 ;) (func (export "i64.extend16_s") i64.const 1 i64.extend16_s drop)
  (; 0xc4 ;) (func (export "i64.extend32_s") i64.const 1 i64.extend32_s drop)

  ;; Interpreter opcodes
  (; 0xe0 ;) (func (export "alloca") (local i32))
  (; 0xe1 ;) (func (export "br_unless") i32.const 1 br_if 0)
  (; 0xe2 ;) (func (export "call_host") i32.const 1 call $print)
  (; 0xe3 ;) (func (export "data") i32.const 1 br_table 0)
  (; 0xe4 ;) (func (export "drop_keep") block (result i32) i32.const 1 i32.const 2 br 0 end drop)

  ;; --enable-saturating-float-to-int
  (; 0xfc 0x00 ;) (func (export "i32.trunc_s:sat/f32") f32.const 1 i32.trunc_s:sat/f32 drop)
  (; 0xfc 0x01 ;) (func (export "i32.trunc_u:sat/f32") f32.const 1 i32.trunc_u:sat/f32 drop)
  (; 0xfc 0x02 ;) (func (export "i32.trunc_s:sat/f64") f64.const 1 i32.trunc_s:sat/f64 drop)
  (; 0xfc 0x03 ;) (func (export "i32.trunc_u:sat/f64") f64.const 1 i32.trunc_u:sat/f64 drop)
  (; 0xfc 0x04 ;) (func (export "i64.trunc_s:sat/f32") f32.const 1 i64.trunc_s:sat/f32 drop)
  (; 0xfc 0x05 ;) (func (export "i64.trunc_u:sat/f32") f32.const 1 i64.trunc_u:sat/f32 drop)
  (; 0xfc 0x06 ;) (func (export "i64.trunc_s:sat/f64") f64.const 1 i64.trunc_s:sat/f64 drop)
  (; 0xfc 0x07 ;) (func (export "i64.trunc_u:sat/f64") f64.const 1 i64.trunc_u:sat/f64 drop)

  (; 0xfc 0x08 ;) (func (export "memory.init") i32.const 1 i32.const 2 i32.const 3 memory.init 0)
  (; 0xfc 0x09 ;) (func (export "data.drop") data.drop 0)
  (; 0xfc 0x0a ;) (func (export "memory.copy") i32.const 1 i32.const 2 i32.const 3 memory.copy)
  (; 0xfc 0x0b ;) (func (export "memory.fill") i32.const 1 i32.const 2 i32.const 3 memory.fill)
  (; 0xfc 0x0c ;) (func (export "table.init") i32.const 1 i32.const 2 i32.const 3 table.init 0)
  (; 0xfc 0x0d ;) (func (export "elem.drop") elem.drop 0)
  (; 0xfc 0x0e ;) (func (export "table.copy") i32.const 1 i32.const 2 i32.const 3 table.copy $table1 $table1)

  ;; --enable-simd
  (; 0xfd 0x00 ;) (func (export "v128.load") i32.const 1 v128.load offset=3 drop)
  (; 0xfd 0x01 ;) (func (export "v128.store") i32.const 1 v128.const i32x4 1 1 1 1 v128.store offset=3)
  (; 0xfd 0x02 ;) (func (export "v128.const") v128.const i32x4 1 1 1 1 drop)
  (; 0xfd 0x04 ;) (func (export "i8x16.splat") i32.const 1 i8x16.splat drop)
  (; 0xfd 0x05 ;) (func (export "i8x16.extract_lane_s") v128.const i32x4 1 1 1 1 i8x16.extract_lane_s 15 drop)
  (; 0xfd 0x06 ;) (func (export "i8x16.extract_lane_u") v128.const i32x4 1 1 1 1 i8x16.extract_lane_u 15 drop)
  (; 0xfd 0x07 ;) (func (export "i8x16.replace_lane") v128.const i32x4 1 1 1 1 i32.const 0 i8x16.replace_lane 15 drop)
  (; 0xfd 0x08 ;) (func (export "i16x8.splat") i32.const 1 i16x8.splat drop)
  (; 0xfd 0x09 ;) (func (export "i16x8.extract_lane_s") v128.const i32x4 1 1 1 1 i16x8.extract_lane_s 7 drop)
  (; 0xfd 0x0a ;) (func (export "i16x8.extract_lane_u") v128.const i32x4 1 1 1 1 i16x8.extract_lane_u 7 drop)
  (; 0xfd 0x0b ;) (func (export "i16x8.replace_lane") v128.const i32x4 1 1 1 1 i32.const 0 i16x8.replace_lane 7 drop)
  (; 0xfd 0x0c ;) (func (export "i32x4.splat") i32.const 1 i32x4.splat drop)
  (; 0xfd 0x0d ;) (func (export "i32x4.extract_lane") v128.const i32x4 1 1 1 1 i32x4.extract_lane 3 drop)
  (; 0xfd 0x0e ;) (func (export "i32x4.replace_lane") v128.const i32x4 1 1 1 1 i32.const 0 i32x4.replace_lane 3 drop)
  (; 0xfd 0x0f ;) (func (export "i64x2.splat") i64.const 1 i64x2.splat drop)
  (; 0xfd 0x10 ;) (func (export "i64x2.extract_lane") v128.const i32x4 1 1 1 1 i64x2.extract_lane 1 drop)
  (; 0xfd 0x11 ;) (func (export "i64x2.replace_lane") v128.const i32x4 1 1 1 1 i64.const 0 i64x2.replace_lane 1 drop)
  (; 0xfd 0x12 ;) (func (export "f32x4.splat") f32.const 1 f32x4.splat drop)
  (; 0xfd 0x13 ;) (func (export "f32x4.extract_lane") v128.const i32x4 1 1 1 1 f32x4.extract_lane 3 drop)
  (; 0xfd 0x14 ;) (func (export "f32x4.replace_lane") v128.const i32x4 1 1 1 1 f32.const 0 f32x4.replace_lane 3 drop)
  (; 0xfd 0x15 ;) (func (export "f64x2.splat") f64.const 1 f64x2.splat drop)
  (; 0xfd 0x16 ;) (func (export "f64x2.extract_lane") v128.const i32x4 1 1 1 1 f64x2.extract_lane 1 drop)
  (; 0xfd 0x17 ;) (func (export "f64x2.replace_lane") v128.const i32x4 1 1 1 1 f64.const 0 f64x2.replace_lane 1 drop)
  (; 0xfd 0x18 ;) (func (export "i8x16.eq") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.eq drop)
  (; 0xfd 0x19 ;) (func (export "i8x16.ne") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.ne drop)
  (; 0xfd 0x1a ;) (func (export "i8x16.lt_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.lt_s drop)
  (; 0xfd 0x1b ;) (func (export "i8x16.lt_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.lt_u drop)
  (; 0xfd 0x1c ;) (func (export "i8x16.gt_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.gt_s drop)
  (; 0xfd 0x1d ;) (func (export "i8x16.gt_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.gt_u drop)
  (; 0xfd 0x1e ;) (func (export "i8x16.le_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.le_s drop)
  (; 0xfd 0x1f ;) (func (export "i8x16.le_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.le_u drop)
  (; 0xfd 0x20 ;) (func (export "i8x16.ge_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.ge_s drop)
  (; 0xfd 0x21 ;) (func (export "i8x16.ge_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.ge_u drop)
  (; 0xfd 0x22 ;) (func (export "i16x8.eq") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.eq drop)
  (; 0xfd 0x23 ;) (func (export "i16x8.ne") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.ne drop)
  (; 0xfd 0x24 ;) (func (export "i16x8.lt_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.lt_s drop)
  (; 0xfd 0x25 ;) (func (export "i16x8.lt_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.lt_u drop)
  (; 0xfd 0x26 ;) (func (export "i16x8.gt_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.gt_s drop)
  (; 0xfd 0x27 ;) (func (export "i16x8.gt_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.gt_u drop)
  (; 0xfd 0x28 ;) (func (export "i16x8.le_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.le_s drop)
  (; 0xfd 0x29 ;) (func (export "i16x8.le_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.le_u drop)
  (; 0xfd 0x2a ;) (func (export "i16x8.ge_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.ge_s drop)
  (; 0xfd 0x2b ;) (func (export "i16x8.ge_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.ge_u drop)
  (; 0xfd 0x2c ;) (func (export "i32x4.eq") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.eq drop)
  (; 0xfd 0x2d ;) (func (export "i32x4.ne") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.ne drop)
  (; 0xfd 0x2e ;) (func (export "i32x4.lt_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.lt_s drop)
  (; 0xfd 0x2f ;) (func (export "i32x4.lt_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.lt_u drop)
  (; 0xfd 0x30 ;) (func (export "i32x4.gt_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.gt_s drop)
  (; 0xfd 0x31 ;) (func (export "i32x4.gt_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.gt_u drop)
  (; 0xfd 0x32 ;) (func (export "i32x4.le_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.le_s drop)
  (; 0xfd 0x33 ;) (func (export "i32x4.le_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.le_u drop)
  (; 0xfd 0x34 ;) (func (export "i32x4.ge_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.ge_s drop)
  (; 0xfd 0x35 ;) (func (export "i32x4.ge_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.ge_u drop)
  (; 0xfd 0x40 ;) (func (export "f32x4.eq") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.eq drop)
  (; 0xfd 0x41 ;) (func (export "f32x4.ne") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.ne drop)
  (; 0xfd 0x42 ;) (func (export "f32x4.lt") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.lt drop)
  (; 0xfd 0x43 ;) (func (export "f32x4.gt") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.gt drop)
  (; 0xfd 0x44 ;) (func (export "f32x4.le") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.le drop)
  (; 0xfd 0x45 ;) (func (export "f32x4.ge") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.ge drop)
  (; 0xfd 0x46 ;) (func (export "f64x2.eq") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.eq drop)
  (; 0xfd 0x47 ;) (func (export "f64x2.ne") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.ne drop)
  (; 0xfd 0x48 ;) (func (export "f64x2.lt") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.lt drop)
  (; 0xfd 0x49 ;) (func (export "f64x2.gt") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.gt drop)
  (; 0xfd 0x4a ;) (func (export "f64x2.le") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.le drop)
  (; 0xfd 0x4b ;) (func (export "f64x2.ge") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.ge drop)
  (; 0xfd 0x4c ;) (func (export "v128.not") v128.const i32x4 1 1 1 1 v128.not drop)
  (; 0xfd 0x4d ;) (func (export "v128.and") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 v128.and drop)
  (; 0xfd 0x4e ;) (func (export "v128.or") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 v128.or drop)
  (; 0xfd 0x4f ;) (func (export "v128.xor") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 v128.xor drop)
  (; 0xfd 0x50 ;) (func (export "v128.bitselect") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 v128.const i32x4 3 3 3 3 v128.bitselect drop)
  (; 0xfd 0x51 ;) (func (export "i8x16.neg") v128.const i32x4 1 1 1 1 i8x16.neg drop)
  (; 0xfd 0x52 ;) (func (export "i8x16.any_true") v128.const i32x4 1 1 1 1 i8x16.any_true drop)
  (; 0xfd 0x53 ;) (func (export "i8x16.all_true") v128.const i32x4 1 1 1 1 i8x16.all_true drop)
  (; 0xfd 0x54 ;) (func (export "i8x16.shl") v128.const i32x4 1 1 1 1 i32.const 0 i8x16.shl drop)
  (; 0xfd 0x55 ;) (func (export "i8x16.shr_s") v128.const i32x4 1 1 1 1 i32.const 0 i8x16.shr_s drop)
  (; 0xfd 0x56 ;) (func (export "i8x16.shr_u") v128.const i32x4 1 1 1 1 i32.const 0 i8x16.shr_u drop)
  (; 0xfd 0x57 ;) (func (export "i8x16.add") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.add drop)
  (; 0xfd 0x58 ;) (func (export "i8x16.add_saturate_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.add_saturate_s drop)
  (; 0xfd 0x59 ;) (func (export "i8x16.add_saturate_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.add_saturate_u drop)
  (; 0xfd 0x5a ;) (func (export "i8x16.sub") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.sub drop)
  (; 0xfd 0x5b ;) (func (export "i8x16.sub_saturate_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.sub_saturate_s drop)
  (; 0xfd 0x5c ;) (func (export "i8x16.sub_saturate_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.sub_saturate_u drop)
  (; 0xfd 0x5d ;) (func (export "i8x16.mul") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.mul drop)
  (; 0xfd 0x62 ;) (func (export "i16x8.neg") v128.const i32x4 1 1 1 1 i16x8.neg drop)
  (; 0xfd 0x63 ;) (func (export "i16x8.any_true") v128.const i32x4 1 1 1 1 i16x8.any_true drop)
  (; 0xfd 0x64 ;) (func (export "i16x8.all_true") v128.const i32x4 1 1 1 1 i16x8.all_true drop)
  (; 0xfd 0x65 ;) (func (export "i16x8.shl") v128.const i32x4 1 1 1 1 i32.const 0 i16x8.shl drop)
  (; 0xfd 0x66 ;) (func (export "i16x8.shr_s") v128.const i32x4 1 1 1 1 i32.const 0 i16x8.shr_s drop)
  (; 0xfd 0x67 ;) (func (export "i16x8.shr_u") v128.const i32x4 1 1 1 1 i32.const 0 i16x8.shr_u drop)
  (; 0xfd 0x68 ;) (func (export "i16x8.add") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.add drop)
  (; 0xfd 0x69 ;) (func (export "i16x8.add_saturate_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.add_saturate_s drop)
  (; 0xfd 0x6a ;) (func (export "i16x8.add_saturate_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.add_saturate_u drop)
  (; 0xfd 0x6b ;) (func (export "i16x8.sub") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.sub drop)
  (; 0xfd 0x6c ;) (func (export "i16x8.sub_saturate_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.sub_saturate_s drop)
  (; 0xfd 0x6d ;) (func (export "i16x8.sub_saturate_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.sub_saturate_u drop)
  (; 0xfd 0x6e ;) (func (export "i16x8.mul") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.mul drop)
  (; 0xfd 0x73 ;) (func (export "i32x4.neg") v128.const i32x4 1 1 1 1 i32x4.neg drop)
  (; 0xfd 0x74 ;) (func (export "i32x4.any_true") v128.const i32x4 1 1 1 1 i32x4.any_true drop)
  (; 0xfd 0x75 ;) (func (export "i32x4.all_true") v128.const i32x4 1 1 1 1 i32x4.all_true drop)
  (; 0xfd 0x76 ;) (func (export "i32x4.shl") v128.const i32x4 1 1 1 1 i32.const 0 i32x4.shl drop)
  (; 0xfd 0x77 ;) (func (export "i32x4.shr_s") v128.const i32x4 1 1 1 1 i32.const 0 i32x4.shr_s drop)
  (; 0xfd 0x78 ;) (func (export "i32x4.shr_u") v128.const i32x4 1 1 1 1 i32.const 0 i32x4.shr_u drop)
  (; 0xfd 0x79 ;) (func (export "i32x4.add") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.add drop)
  (; 0xfd 0x7c ;) (func (export "i32x4.sub") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.sub drop)
  (; 0xfd 0x7f ;) (func (export "i32x4.mul") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.mul drop)
  (; 0xfd 0x84 ;) (func (export "i64x2.neg") v128.const i32x4 1 1 1 1 i64x2.neg drop)
  (; 0xfd 0x85 ;) (func (export "i64x2.any_true") v128.const i32x4 1 1 1 1 i64x2.any_true drop)
  (; 0xfd 0x86 ;) (func (export "i64x2.all_true") v128.const i32x4 1 1 1 1 i64x2.all_true drop)
  (; 0xfd 0x87 ;) (func (export "i64x2.shl") v128.const i32x4 1 1 1 1 i32.const 0 i64x2.shl drop)
  (; 0xfd 0x88 ;) (func (export "i64x2.shr_s") v128.const i32x4 1 1 1 1 i32.const 0 i64x2.shr_s drop)
  (; 0xfd 0x89 ;) (func (export "i64x2.shr_u") v128.const i32x4 1 1 1 1 i32.const 0 i64x2.shr_u drop)
  (; 0xfd 0x8a ;) (func (export "i64x2.add") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i64x2.add drop)
  (; 0xfd 0x8d ;) (func (export "i64x2.sub") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i64x2.sub drop)
  (; 0xfd 0x95 ;) (func (export "f32x4.abs") v128.const i32x4 1 1 1 1 f32x4.abs drop)
  (; 0xfd 0x96 ;) (func (export "f32x4.neg") v128.const i32x4 1 1 1 1 f32x4.neg drop)
  (; 0xfd 0x97 ;) (func (export "f32x4.sqrt") v128.const i32x4 1 1 1 1 f32x4.sqrt drop)
  (; 0xfd 0x9a ;) (func (export "f32x4.add") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.add drop)
  (; 0xfd 0x9b ;) (func (export "f32x4.sub") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.sub drop)
  (; 0xfd 0x9c ;) (func (export "f32x4.mul") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.mul drop)
  (; 0xfd 0x9d ;) (func (export "f32x4.div") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.div drop)
  (; 0xfd 0x9e ;) (func (export "f32x4.min") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.min drop)
  (; 0xfd 0x9f ;) (func (export "f32x4.max") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.max drop)
  (; 0xfd 0xa0 ;) (func (export "f64x2.abs") v128.const i32x4 1 1 1 1 f64x2.abs drop)
  (; 0xfd 0xa1 ;) (func (export "f64x2.neg") v128.const i32x4 1 1 1 1 f64x2.neg drop)
  (; 0xfd 0xa2 ;) (func (export "f64x2.sqrt") v128.const i32x4 1 1 1 1 f64x2.sqrt drop)
  (; 0xfd 0xa5 ;) (func (export "f64x2.add") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.add drop)
  (; 0xfd 0xa6 ;) (func (export "f64x2.sub") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.sub drop)
  (; 0xfd 0xa7 ;) (func (export "f64x2.mul") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.mul drop)
  (; 0xfd 0xa8 ;) (func (export "f64x2.div") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.div drop)
  (; 0xfd 0xa9 ;) (func (export "f64x2.min") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.min drop)
  (; 0xfd 0xaa ;) (func (export "f64x2.max") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.max drop)
  (; 0xfd 0xab ;) (func (export "i32x4.trunc_sat_f32x4_s") v128.const i32x4 1 1 1 1 i32x4.trunc_sat_f32x4_s drop)
  (; 0xfd 0xac ;) (func (export "i32x4.trunc_sat_f32x4_u") v128.const i32x4 1 1 1 1 i32x4.trunc_sat_f32x4_u drop)
  (; 0xfd 0xad ;) (func (export "i64x2.trunc_sat_f64x2_s") v128.const i32x4 1 1 1 1 i64x2.trunc_sat_f64x2_s drop)
  (; 0xfd 0xae ;) (func (export "i64x2.trunc_sat_f64x2_u") v128.const i32x4 1 1 1 1 i64x2.trunc_sat_f64x2_u drop)
  (; 0xfd 0xaf ;) (func (export "f32x4.convert_i32x4_s") v128.const i32x4 1 1 1 1 f32x4.convert_i32x4_s drop)
  (; 0xfd 0xb0 ;) (func (export "f32x4.convert_i32x4_u") v128.const i32x4 1 1 1 1 f32x4.convert_i32x4_u drop)
  (; 0xfd 0xb1 ;) (func (export "f64x2.convert_i64x2_s") v128.const i32x4 1 1 1 1 f64x2.convert_i64x2_s drop)
  (; 0xfd 0xb2 ;) (func (export "f64x2.convert_i64x2_u") v128.const i32x4 1 1 1 1 f64x2.convert_i64x2_u drop)
  (; 0xfd 0xc0 ;) (func (export "v8x16.swizzle") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 v8x16.swizzle drop)
  (; 0xfd 0xc1 ;) (func (export "v8x16.shuffle") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 v8x16.shuffle 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 drop)
  (; 0xfd 0xc2 ;) (func (export "i8x16.load_splat") i32.const 1 i8x16.load_splat drop)
  (; 0xfd 0xc3 ;) (func (export "i16x8.load_splat") i32.const 1 i16x8.load_splat drop)
  (; 0xfd 0xc4 ;) (func (export "i32x4.load_splat") i32.const 1 i32x4.load_splat drop)
  (; 0xfd 0xc5 ;) (func (export "i64x2.load_splat") i32.const 1 i64x2.load_splat drop)

  ;; --enable-threads
  (; 0xfe 0x00 ;) (func (export "atomic.notify") i32.const 1 i32.const 2 atomic.notify offset=3 drop)
  (; 0xfe 0x01 ;) (func (export "i32.atomic.wait") i32.const 1 i32.const 2 i64.const 3 i32.atomic.wait offset=3 drop)
  (; 0xfe 0x02 ;) (func (export "i64.atomic.wait") i32.const 1 i64.const 2 i64.const 3 i64.atomic.wait offset=3 drop)
  (; 0xfe 0x10 ;) (func (export "i32.atomic.load") i32.const 1 i32.atomic.load offset=3 drop)
  (; 0xfe 0x11 ;) (func (export "i64.atomic.load") i32.const 1 i64.atomic.load offset=7 drop)
  (; 0xfe 0x12 ;) (func (export "i32.atomic.load8_u") i32.const 1 i32.atomic.load8_u offset=3 drop)
  (; 0xfe 0x13 ;) (func (export "i32.atomic.load16_u") i32.const 1 i32.atomic.load16_u offset=3 drop)
  (; 0xfe 0x14 ;) (func (export "i64.atomic.load8_u") i32.const 1 i64.atomic.load8_u offset=3 drop)
  (; 0xfe 0x15 ;) (func (export "i64.atomic.load16_u") i32.const 1 i64.atomic.load16_u offset=3 drop)
  (; 0xfe 0x16 ;) (func (export "i64.atomic.load32_u") i32.const 1 i64.atomic.load32_u offset=3 drop)
  (; 0xfe 0x17 ;) (func (export "i32.atomic.store") i32.const 1 i32.const 2 i32.atomic.store offset=3)
  (; 0xfe 0x18 ;) (func (export "i64.atomic.store") i32.const 1 i64.const 2 i64.atomic.store offset=7)
  (; 0xfe 0x19 ;) (func (export "i32.atomic.store8") i32.const 1 i32.const 2 i32.atomic.store8 offset=3)
  (; 0xfe 0x1a ;) (func (export "i32.atomic.store16") i32.const 1 i32.const 2 i32.atomic.store16 offset=3)
  (; 0xfe 0x1b ;) (func (export "i64.atomic.store8") i32.const 1 i64.const 2 i64.atomic.store8 offset=3)
  (; 0xfe 0x1c ;) (func (export "i64.atomic.store16") i32.const 1 i64.const 2 i64.atomic.store16 offset=3)
  (; 0xfe 0x1d ;) (func (export "i64.atomic.store32") i32.const 1 i64.const 2 i64.atomic.store32 offset=3)
  (; 0xfe 0x1e ;) (func (export "i32.atomic.rmw.add") i32.const 1 i32.const 2 i32.atomic.rmw.add offset=3 drop)
  (; 0xfe 0x1f ;) (func (export "i64.atomic.rmw.add") i32.const 1 i64.const 2 i64.atomic.rmw.add offset=7 drop)
  (; 0xfe 0x20 ;) (func (export "i32.atomic.rmw8.add_u") i32.const 1 i32.const 2 i32.atomic.rmw8.add_u offset=3 drop)
  (; 0xfe 0x21 ;) (func (export "i32.atomic.rmw16.add_u") i32.const 1 i32.const 2 i32.atomic.rmw16.add_u offset=3 drop)
  (; 0xfe 0x22 ;) (func (export "i64.atomic.rmw8.add_u") i32.const 1 i64.const 2 i64.atomic.rmw8.add_u offset=3 drop)
  (; 0xfe 0x23 ;) (func (export "i64.atomic.rmw16.add_u") i32.const 1 i64.const 2 i64.atomic.rmw16.add_u offset=3 drop)
  (; 0xfe 0x24 ;) (func (export "i64.atomic.rmw32.add_u") i32.const 1 i64.const 2 i64.atomic.rmw32.add_u offset=3 drop)
  (; 0xfe 0x25 ;) (func (export "i32.atomic.rmw.sub") i32.const 1 i32.const 2 i32.atomic.rmw.sub offset=3 drop)
  (; 0xfe 0x26 ;) (func (export "i64.atomic.rmw.sub") i32.const 1 i64.const 2 i64.atomic.rmw.sub offset=7 drop)
  (; 0xfe 0x27 ;) (func (export "i32.atomic.rmw8.sub_u") i32.const 1 i32.const 2 i32.atomic.rmw8.sub_u offset=3 drop)
  (; 0xfe 0x28 ;) (func (export "i32.atomic.rmw16.sub_u") i32.const 1 i32.const 2 i32.atomic.rmw16.sub_u offset=3 drop)
  (; 0xfe 0x29 ;) (func (export "i64.atomic.rmw8.sub_u") i32.const 1 i64.const 2 i64.atomic.rmw8.sub_u offset=3 drop)
  (; 0xfe 0x2a ;) (func (export "i64.atomic.rmw16.sub_u") i32.const 1 i64.const 2 i64.atomic.rmw16.sub_u offset=3 drop)
  (; 0xfe 0x2b ;) (func (export "i64.atomic.rmw32.sub_u") i32.const 1 i64.const 2 i64.atomic.rmw32.sub_u offset=3 drop)
  (; 0xfe 0x2c ;) (func (export "i32.atomic.rmw.and") i32.const 1 i32.const 2 i32.atomic.rmw.and offset=3 drop)
  (; 0xfe 0x2d ;) (func (export "i64.atomic.rmw.and") i32.const 1 i64.const 2 i64.atomic.rmw.and offset=7 drop)
  (; 0xfe 0x2e ;) (func (export "i32.atomic.rmw8.and_u") i32.const 1 i32.const 2 i32.atomic.rmw8.and_u offset=3 drop)
  (; 0xfe 0x2f ;) (func (export "i32.atomic.rmw16.and_u") i32.const 1 i32.const 2 i32.atomic.rmw16.and_u offset=3 drop)
  (; 0xfe 0x30 ;) (func (export "i64.atomic.rmw8.and_u") i32.const 1 i64.const 2 i64.atomic.rmw8.and_u offset=3 drop)
  (; 0xfe 0x31 ;) (func (export "i64.atomic.rmw16.and_u") i32.const 1 i64.const 2 i64.atomic.rmw16.and_u offset=3 drop)
  (; 0xfe 0x32 ;) (func (export "i64.atomic.rmw32.and_u") i32.const 1 i64.const 2 i64.atomic.rmw32.and_u offset=3 drop)
  (; 0xfe 0x33 ;) (func (export "i32.atomic.rmw.or") i32.const 1 i32.const 2 i32.atomic.rmw.or offset=3 drop)
  (; 0xfe 0x34 ;) (func (export "i64.atomic.rmw.or") i32.const 1 i64.const 2 i64.atomic.rmw.or offset=7 drop)
  (; 0xfe 0x35 ;) (func (export "i32.atomic.rmw8.or_u") i32.const 1 i32.const 2 i32.atomic.rmw8.or_u offset=3 drop)
  (; 0xfe 0x36 ;) (func (export "i32.atomic.rmw16.or_u") i32.const 1 i32.const 2 i32.atomic.rmw16.or_u offset=3 drop)
  (; 0xfe 0x37 ;) (func (export "i64.atomic.rmw8.or_u") i32.const 1 i64.const 2 i64.atomic.rmw8.or_u offset=3 drop)
  (; 0xfe 0x38 ;) (func (export "i64.atomic.rmw16.or_u") i32.const 1 i64.const 2 i64.atomic.rmw16.or_u offset=3 drop)
  (; 0xfe 0x39 ;) (func (export "i64.atomic.rmw32.or_u") i32.const 1 i64.const 2 i64.atomic.rmw32.or_u offset=3 drop)
  (; 0xfe 0x3a ;) (func (export "i32.atomic.rmw.xor") i32.const 1 i32.const 2 i32.atomic.rmw.xor offset=3 drop)
  (; 0xfe 0x3b ;) (func (export "i64.atomic.rmw.xor") i32.const 1 i64.const 2 i64.atomic.rmw.xor offset=7 drop)
  (; 0xfe 0x3c ;) (func (export "i32.atomic.rmw8.xor_u") i32.const 1 i32.const 2 i32.atomic.rmw8.xor_u offset=3 drop)
  (; 0xfe 0x3d ;) (func (export "i32.atomic.rmw16.xor_u") i32.const 1 i32.const 2 i32.atomic.rmw16.xor_u offset=3 drop)
  (; 0xfe 0x3e ;) (func (export "i64.atomic.rmw8.xor_u") i32.const 1 i64.const 2 i64.atomic.rmw8.xor_u offset=3 drop)
  (; 0xfe 0x3f ;) (func (export "i64.atomic.rmw16.xor_u") i32.const 1 i64.const 2 i64.atomic.rmw16.xor_u offset=3 drop)
  (; 0xfe 0x40 ;) (func (export "i64.atomic.rmw32.xor_u") i32.const 1 i64.const 2 i64.atomic.rmw32.xor_u offset=3 drop)
  (; 0xfe 0x41 ;) (func (export "i32.atomic.rmw.xchg") i32.const 1 i32.const 2 i32.atomic.rmw.xchg offset=3 drop)
  (; 0xfe 0x42 ;) (func (export "i64.atomic.rmw.xchg") i32.const 1 i64.const 2 i64.atomic.rmw.xchg offset=7 drop)
  (; 0xfe 0x43 ;) (func (export "i32.atomic.rmw8.xchg_u") i32.const 1 i32.const 2 i32.atomic.rmw8.xchg_u offset=3 drop)
  (; 0xfe 0x44 ;) (func (export "i32.atomic.rmw16.xchg_u") i32.const 1 i32.const 2 i32.atomic.rmw16.xchg_u offset=3 drop)
  (; 0xfe 0x45 ;) (func (export "i64.atomic.rmw8.xchg_u") i32.const 1 i64.const 2 i64.atomic.rmw8.xchg_u offset=3 drop)
  (; 0xfe 0x46 ;) (func (export "i64.atomic.rmw16.xchg_u") i32.const 1 i64.const 2 i64.atomic.rmw16.xchg_u offset=3 drop)
  (; 0xfe 0x47 ;) (func (export "i64.atomic.rmw32.xchg_u") i32.const 1 i64.const 2 i64.atomic.rmw32.xchg_u offset=3 drop)

  (; 0xfe 0x48 ;) (func (export "i32.atomic.rmw.cmpxchg") i32.const 1 i32.const 2 i32.const 3 i32.atomic.rmw.cmpxchg offset=3 drop)
  (; 0xfe 0x49 ;) (func (export "i64.atomic.rmw.cmpxchg") i32.const 1 i64.const 2 i64.const 3 i64.atomic.rmw.cmpxchg offset=7 drop)
  (; 0xfe 0x4a ;) (func (export "i32.atomic.rmw8.cmpxchg_u") i32.const 1 i32.const 2 i32.const 3 i32.atomic.rmw8.cmpxchg_u offset=3 drop)
  (; 0xfe 0x4b ;) (func (export "i32.atomic.rmw16.cmpxchg_u") i32.const 1 i32.const 2 i32.const 3 i32.atomic.rmw16.cmpxchg_u offset=3 drop)
  (; 0xfe 0x4c ;) (func (export "i64.atomic.rmw8.cmpxchg_u") i32.const 1 i64.const 2 i64.const 3 i64.atomic.rmw8.cmpxchg_u offset=3 drop)
  (; 0xfe 0x4d ;) (func (export "i64.atomic.rmw16.cmpxchg_u") i32.const 1 i64.const 2 i64.const 3 i64.atomic.rmw16.cmpxchg_u offset=3 drop)
  (; 0xfe 0x4e ;) (func (export "i64.atomic.rmw32.cmpxchg_u") i32.const 1 i64.const 2 i64.const 3 i64.atomic.rmw32.cmpxchg_u offset=3 drop)
)

(;; STDOUT ;;;
0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 02                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 00                                        ; num params
000000d: 00                                        ; num results
; type 1
000000e: 60                                        ; func
000000f: 01                                        ; num params
0000010: 7f                                        ; i32
0000011: 00                                        ; num results
0000009: 08                                        ; FIXUP section size
; section "Import" (2)
0000012: 02                                        ; section code
0000013: 00                                        ; section size (guess)
0000014: 01                                        ; num imports
; import header 0
0000015: 04                                        ; string length
0000016: 686f 7374                                host  ; import module name
000001a: 05                                        ; string length
000001b: 7072 696e 74                             print  ; import field name
0000020: 00                                        ; import kind
0000021: 01                                        ; import signature index
0000013: 0e                                        ; FIXUP section size
; section "Function" (3)
0000022: 03                                        ; section code
0000023: 00                                        ; section size (guess)
0000024: 9503                                      ; num functions
0000026: 00                                        ; function 0 signature index
0000027: 00                                        ; function 1 signature index
0000028: 00                                        ; function 2 signature index
0000029: 00                                        ; function 3 signature index
000002a: 00                                        ; function 4 signature index
000002b: 00                                        ; function 5 signature index
000002c: 00                                        ; function 6 signature index
000002d: 00                                        ; function 7 signature index
000002e: 00                                        ; function 8 signature index
000002f: 00                                        ; function 9 signature index
0000030: 00                                        ; function 10 signature index
0000031: 00                                        ; function 11 signature index
0000032: 00                                        ; function 12 signature index
0000033: 00                                        ; function 13 signature index
0000034: 00                                        ; function 14 signature index
0000035: 00                                        ; function 15 signature index
0000036: 00                                        ; function 16 signature index
0000037: 00                                        ; function 17 signature index
0000038: 00                                        ; function 18 signature index
0000039: 00                                        ; function 19 signature index
000003a: 00                                        ; function 20 signature index
000003b: 00                                        ; function 21 signature index
000003c: 00                                        ; function 22 signature index
000003d: 00                                        ; function 23 signature index
000003e: 00                                        ; function 24 signature index
000003f: 00                                        ; function 25 signature index
0000040: 00                                        ; function 26 signature index
0000041: 00                                        ; function 27 signature index
0000042: 00                                        ; function 28 signature index
0000043: 00                                        ; function 29 signature index
0000044: 00                                        ; function 30 signature index
0000045: 00                                        ; function 31 signature index
0000046: 00                                        ; function 32 signature index
0000047: 00                                        ; function 33 signature index
0000048: 00                                        ; function 34 signature index
0000049: 00                                        ; function 35 signature index
000004a: 00                                        ; function 36 signature index
000004b: 00                                        ; function 37 signature index
000004c: 00                                        ; function 38 signature index
000004d: 00                                        ; function 39 signature index
000004e: 00                                        ; function 40 signature index
000004f: 00                                        ; function 41 signature index
0000050: 00                                        ; function 42 signature index
0000051: 00                                        ; function 43 signature index
0000052: 00                                        ; function 44 signature index
0000053: 00                                        ; function 45 signature index
0000054: 00                                        ; function 46 signature index
0000055: 00                                        ; function 47 signature index
0000056: 00                                        ; function 48 signature index
0000057: 00                                        ; function 49 signature index
0000058: 00                                        ; function 50 signature index
0000059: 00                                        ; function 51 signature index
000005a: 00                                        ; function 52 signature index
000005b: 00                                        ; function 53 signature index
000005c: 00                                        ; function 54 signature index
000005d: 00                                        ; function 55 signature index
000005e: 00                                        ; function 56 signature index
000005f: 00                                        ; function 57 signature index
0000060: 00                                        ; function 58 signature index
0000061: 00                                        ; function 59 signature index
0000062: 00                                        ; function 60 signature index
0000063: 00                                        ; function 61 signature index
0000064: 00                                        ; function 62 signature index
0000065: 00                                        ; function 63 signature index
0000066: 00                                        ; function 64 signature index
0000067: 00                                        ; function 65 signature index
0000068: 00                                        ; function 66 signature index
0000069: 00                                        ; function 67 signature index
000006a: 00                                        ; function 68 signature index
000006b: 00                                        ; function 69 signature index
000006c: 00                                        ; function 70 signature index
000006d: 00                                        ; function 71 signature index
000006e: 00                                        ; function 72 signature index
000006f: 00                                        ; function 73 signature index
0000070: 00                                        ; function 74 signature index
0000071: 00                                        ; function 75 signature index
0000072: 00                                        ; function 76 signature index
0000073: 00                                        ; function 77 signature index
0000074: 00                                        ; function 78 signature index
0000075: 00                                        ; function 79 signature index
0000076: 00                                        ; function 80 signature index
0000077: 00                                        ; function 81 signature index
0000078: 00                                        ; function 82 signature index
0000079: 00                                        ; function 83 signature index
000007a: 00                                        ; function 84 signature index
000007b: 00                                        ; function 85 signature index
000007c: 00                                        ; function 86 signature index
000007d: 00                                        ; function 87 signature index
000007e: 00                                        ; function 88 signature index
000007f: 00                                        ; function 89 signature index
0000080: 00                                        ; function 90 signature index
0000081: 00                                        ; function 91 signature index
0000082: 00                                        ; function 92 signature index
0000083: 00                                        ; function 93 signature index
0000084: 00                                        ; function 94 signature index
0000085: 00                                        ; function 95 signature index
0000086: 00                                        ; function 96 signature index
0000087: 00                                        ; function 97 signature index
0000088: 00                                        ; function 98 signature index
0000089: 00                                        ; function 99 signature index
000008a: 00                                        ; function 100 signature index
000008b: 00                                        ; function 101 signature index
000008c: 00                                        ; function 102 signature index
000008d: 00                                        ; function 103 signature index
000008e: 00                                        ; function 104 signature index
000008f: 00                                        ; function 105 signature index
0000090: 00                                        ; function 106 signature index
0000091: 00                                        ; function 107 signature index
0000092: 00                                        ; function 108 signature index
0000093: 00                                        ; function 109 signature index
0000094: 00                                        ; function 110 signature index
0000095: 00                                        ; function 111 signature index
0000096: 00                                        ; function 112 signature index
0000097: 00                                        ; function 113 signature index
0000098: 00                                        ; function 114 signature index
0000099: 00                                        ; function 115 signature index
000009a: 00                                        ; function 116 signature index
000009b: 00                                        ; function 117 signature index
000009c: 00                                        ; function 118 signature index
000009d: 00                                        ; function 119 signature index
000009e: 00                                        ; function 120 signature index
000009f: 00                                        ; function 121 signature index
00000a0: 00                                        ; function 122 signature index
00000a1: 00                                        ; function 123 signature index
00000a2: 00                                        ; function 124 signature index
00000a3: 00                                        ; function 125 signature index
00000a4: 00                                        ; function 126 signature index
00000a5: 00                                        ; function 127 signature index
00000a6: 00                                        ; function 128 signature index
00000a7: 00                                        ; function 129 signature index
00000a8: 00                                        ; function 130 signature index
00000a9: 00                                        ; function 131 signature index
00000aa: 00                                        ; function 132 signature index
00000ab: 00                                        ; function 133 signature index
00000ac: 00                                        ; function 134 signature index
00000ad: 00                                        ; function 135 signature index
00000ae: 00                                        ; function 136 signature index
00000af: 00                                        ; function 137 signature index
00000b0: 00                                        ; function 138 signature index
00000b1: 00                                        ; function 139 signature index
00000b2: 00                                        ; function 140 signature index
00000b3: 00                                        ; function 141 signature index
00000b4: 00                                        ; function 142 signature index
00000b5: 00                                        ; function 143 signature index
00000b6: 00                                        ; function 144 signature index
00000b7: 00                                        ; function 145 signature index
00000b8: 00                                        ; function 146 signature index
00000b9: 00                                        ; function 147 signature index
00000ba: 00                                        ; function 148 signature index
00000bb: 00                                        ; function 149 signature index
00000bc: 00                                        ; function 150 signature index
00000bd: 00                                        ; function 151 signature index
00000be: 00                                        ; function 152 signature index
00000bf: 00                                        ; function 153 signature index
00000c0: 00                                        ; function 154 signature index
00000c1: 00                                        ; function 155 signature index
00000c2: 00                                        ; function 156 signature index
00000c3: 00                                        ; function 157 signature index
00000c4: 00                                        ; function 158 signature index
00000c5: 00                                        ; function 159 signature index
00000c6: 00                                        ; function 160 signature index
00000c7: 00                                        ; function 161 signature index
00000c8: 00                                        ; function 162 signature index
00000c9: 00                                        ; function 163 signature index
00000ca: 00                                        ; function 164 signature index
00000cb: 00                                        ; function 165 signature index
00000cc: 00                                        ; function 166 signature index
00000cd: 00                                        ; function 167 signature index
00000ce: 00                                        ; function 168 signature index
00000cf: 00                                        ; function 169 signature index
00000d0: 00                                        ; function 170 signature index
00000d1: 00                                        ; function 171 signature index
00000d2: 00                                        ; function 172 signature index
00000d3: 00                                        ; function 173 signature index
00000d4: 00                                        ; function 174 signature index
00000d5: 00                                        ; function 175 signature index
00000d6: 00                                        ; function 176 signature index
00000d7: 00                                        ; function 177 signature index
00000d8: 00                                        ; function 178 signature index
00000d9: 00                                        ; function 179 signature index
00000da: 00                                        ; function 180 signature index
00000db: 00                                        ; function 181 signature index
00000dc: 00                                        ; function 182 signature index
00000dd: 00                                        ; function 183 signature index
00000de: 00                                        ; function 184 signature index
00000df: 00                                        ; function 185 signature index
00000e0: 00                                        ; function 186 signature index
00000e1: 00                                        ; function 187 signature index
00000e2: 00                                        ; function 188 signature index
00000e3: 00                                        ; function 189 signature index
00000e4: 00                                        ; function 190 signature index
00000e5: 00                                        ; function 191 signature index
00000e6: 00                                        ; function 192 signature index
00000e7: 00                                        ; function 193 signature index
00000e8: 00                                        ; function 194 signature index
00000e9: 00                                        ; function 195 signature index
00000ea: 00                                        ; function 196 signature index
00000eb: 00                                        ; function 197 signature index
00000ec: 00                                        ; function 198 signature index
00000ed: 00                                        ; function 199 signature index
00000ee: 00                                        ; function 200 signature index
00000ef: 00                                        ; function 201 signature index
00000f0: 00                                        ; function 202 signature index
00000f1: 00                                        ; function 203 signature index
00000f2: 00                                        ; function 204 signature index
00000f3: 00                                        ; function 205 signature index
00000f4: 00                                        ; function 206 signature index
00000f5: 00                                        ; function 207 signature index
00000f6: 00                                        ; function 208 signature index
00000f7: 00                                        ; function 209 signature index
00000f8: 00                                        ; function 210 signature index
00000f9: 00                                        ; function 211 signature index
00000fa: 00                                        ; function 212 signature index
00000fb: 00                                        ; function 213 signature index
00000fc: 00                                        ; function 214 signature index
00000fd: 00                                        ; function 215 signature index
00000fe: 00                                        ; function 216 signature index
00000ff: 00                                        ; function 217 signature index
0000100: 00                                        ; function 218 signature index
0000101: 00                                        ; function 219 signature index
0000102: 00                                        ; function 220 signature index
0000103: 00                                        ; function 221 signature index
0000104: 00                                        ; function 222 signature index
0000105: 00                                        ; function 223 signature index
0000106: 00                                        ; function 224 signature index
0000107: 00                                        ; function 225 signature index
0000108: 00                                        ; function 226 signature index
0000109: 00                                        ; function 227 signature index
000010a: 00                                        ; function 228 signature index
000010b: 00                                        ; function 229 signature index
000010c: 00                                        ; function 230 signature index
000010d: 00                                        ; function 231 signature index
000010e: 00                                        ; function 232 signature index
000010f: 00                                        ; function 233 signature index
0000110: 00                                        ; function 234 signature index
0000111: 00                                        ; function 235 signature index
0000112: 00                                        ; function 236 signature index
0000113: 00                                        ; function 237 signature index
0000114: 00                                        ; function 238 signature index
0000115: 00                                        ; function 239 signature index
0000116: 00                                        ; function 240 signature index
0000117: 00                                        ; function 241 signature index
0000118: 00                                        ; function 242 signature index
0000119: 00                                        ; function 243 signature index
000011a: 00                                        ; function 244 signature index
000011b: 00                                        ; function 245 signature index
000011c: 00                                        ; function 246 signature index
000011d: 00                                        ; function 247 signature index
000011e: 00                                        ; function 248 signature index
000011f: 00                                        ; function 249 signature index
0000120: 00                                        ; function 250 signature index
0000121: 00                                        ; function 251 signature index
0000122: 00                                        ; function 252 signature index
0000123: 00                                        ; function 253 signature index
0000124: 00                                        ; function 254 signature index
0000125: 00                                        ; function 255 signature index
0000126: 00                                        ; function 256 signature index
0000127: 00                                        ; function 257 signature index
0000128: 00                                        ; function 258 signature index
0000129: 00                                        ; function 259 signature index
000012a: 00                                        ; function 260 signature index
000012b: 00                                        ; function 261 signature index
000012c: 00                                        ; function 262 signature index
000012d: 00                                        ; function 263 signature index
000012e: 00                                        ; function 264 signature index
000012f: 00                                        ; function 265 signature index
0000130: 00                                        ; function 266 signature index
0000131: 00                                        ; function 267 signature index
0000132: 00                                        ; function 268 signature index
0000133: 00                                        ; function 269 signature index
0000134: 00                                        ; function 270 signature index
0000135: 00                                        ; function 271 signature index
0000136: 00                                        ; function 272 signature index
0000137: 00                                        ; function 273 signature index
0000138: 00                                        ; function 274 signature index
0000139: 00                                        ; function 275 signature index
000013a: 00                                        ; function 276 signature index
000013b: 00                                        ; function 277 signature index
000013c: 00                                        ; function 278 signature index
000013d: 00                                        ; function 279 signature index
000013e: 00                                        ; function 280 signature index
000013f: 00                                        ; function 281 signature index
0000140: 00                                        ; function 282 signature index
0000141: 00                                        ; function 283 signature index
0000142: 00                                        ; function 284 signature index
0000143: 00                                        ; function 285 signature index
0000144: 00                                        ; function 286 signature index
0000145: 00                                        ; function 287 signature index
0000146: 00                                        ; function 288 signature index
0000147: 00                                        ; function 289 signature index
0000148: 00                                        ; function 290 signature index
0000149: 00                                        ; function 291 signature index
000014a: 00                                        ; function 292 signature index
000014b: 00                                        ; function 293 signature index
000014c: 00                                        ; function 294 signature index
000014d: 00                                        ; function 295 signature index
000014e: 00                                        ; function 296 signature index
000014f: 00                                        ; function 297 signature index
0000150: 00                                        ; function 298 signature index
0000151: 00                                        ; function 299 signature index
0000152: 00                                        ; function 300 signature index
0000153: 00                                        ; function 301 signature index
0000154: 00                                        ; function 302 signature index
0000155: 00                                        ; function 303 signature index
0000156: 00                                        ; function 304 signature index
0000157: 00                                        ; function 305 signature index
0000158: 00                                        ; function 306 signature index
0000159: 00                                        ; function 307 signature index
000015a: 00                                        ; function 308 signature index
000015b: 00                                        ; function 309 signature index
000015c: 00                                        ; function 310 signature index
000015d: 00                                        ; function 311 signature index
000015e: 00                                        ; function 312 signature index
000015f: 00                                        ; function 313 signature index
0000160: 00                                        ; function 314 signature index
0000161: 00                                        ; function 315 signature index
0000162: 00                                        ; function 316 signature index
0000163: 00                                        ; function 317 signature index
0000164: 00                                        ; function 318 signature index
0000165: 00                                        ; function 319 signature index
0000166: 00                                        ; function 320 signature index
0000167: 00                                        ; function 321 signature index
0000168: 00                                        ; function 322 signature index
0000169: 00                                        ; function 323 signature index
000016a: 00                                        ; function 324 signature index
000016b: 00                                        ; function 325 signature index
000016c: 00                                        ; function 326 signature index
000016d: 00                                        ; function 327 signature index
000016e: 00                                        ; function 328 signature index
000016f: 00                                        ; function 329 signature index
0000170: 00                                        ; function 330 signature index
0000171: 00                                        ; function 331 signature index
0000172: 00                                        ; function 332 signature index
0000173: 00                                        ; function 333 signature index
0000174: 00                                        ; function 334 signature index
0000175: 00                                        ; function 335 signature index
0000176: 00                                        ; function 336 signature index
0000177: 00                                        ; function 337 signature index
0000178: 00                                        ; function 338 signature index
0000179: 00                                        ; function 339 signature index
000017a: 00                                        ; function 340 signature index
000017b: 00                                        ; function 341 signature index
000017c: 00                                        ; function 342 signature index
000017d: 00                                        ; function 343 signature index
000017e: 00                                        ; function 344 signature index
000017f: 00                                        ; function 345 signature index
0000180: 00                                        ; function 346 signature index
0000181: 00                                        ; function 347 signature index
0000182: 00                                        ; function 348 signature index
0000183: 00                                        ; function 349 signature index
0000184: 00                                        ; function 350 signature index
0000185: 00                                        ; function 351 signature index
0000186: 00                                        ; function 352 signature index
0000187: 00                                        ; function 353 signature index
0000188: 00                                        ; function 354 signature index
0000189: 00                                        ; function 355 signature index
000018a: 00                                        ; function 356 signature index
000018b: 00                                        ; function 357 signature index
000018c: 00                                        ; function 358 signature index
000018d: 00                                        ; function 359 signature index
000018e: 00                                        ; function 360 signature index
000018f: 00                                        ; function 361 signature index
0000190: 00                                        ; function 362 signature index
0000191: 00                                        ; function 363 signature index
0000192: 00                                        ; function 364 signature index
0000193: 00                                        ; function 365 signature index
0000194: 00                                        ; function 366 signature index
0000195: 00                                        ; function 367 signature index
0000196: 00                                        ; function 368 signature index
0000197: 00                                        ; function 369 signature index
0000198: 00                                        ; function 370 signature index
0000199: 00                                        ; function 371 signature index
000019a: 00                                        ; function 372 signature index
000019b: 00                                        ; function 373 signature index
000019c: 00                                        ; function 374 signature index
000019d: 00                                        ; function 375 signature index
000019e: 00                                        ; function 376 signature index
000019f: 00                                        ; function 377 signature index
00001a0: 00                                        ; function 378 signature index
00001a1: 00                                        ; function 379 signature index
00001a2: 00                                        ; function 380 signature index
00001a3: 00                                        ; function 381 signature index
00001a4: 00                                        ; function 382 signature index
00001a5: 00                                        ; function 383 signature index
00001a6: 00                                        ; function 384 signature index
00001a7: 00                                        ; function 385 signature index
00001a8: 00                                        ; function 386 signature index
00001a9: 00                                        ; function 387 signature index
00001aa: 00                                        ; function 388 signature index
00001ab: 00                                        ; function 389 signature index
00001ac: 00                                        ; function 390 signature index
00001ad: 00                                        ; function 391 signature index
00001ae: 00                                        ; function 392 signature index
00001af: 00                                        ; function 393 signature index
00001b0: 00                                        ; function 394 signature index
00001b1: 00                                        ; function 395 signature index
00001b2: 00                                        ; function 396 signature index
00001b3: 00                                        ; function 397 signature index
00001b4: 00                                        ; function 398 signature index
00001b5: 00                                        ; function 399 signature index
00001b6: 00                                        ; function 400 signature index
00001b7: 00                                        ; function 401 signature index
00001b8: 00                                        ; function 402 signature index
00001b9: 00                                        ; function 403 signature index
00001ba: 00                                        ; function 404 signature index
; move data: [24, 1bb) -> [25, 1bc)
0000023: 9703                                      ; FIXUP section size
; section "Table" (4)
00001bc: 04                                        ; section code
00001bd: 00                                        ; section size (guess)
00001be: 01                                        ; num tables
; table 0
00001bf: 70                                        ; funcref
00001c0: 01                                        ; limits: flags
00001c1: 02                                        ; limits: initial
00001c2: 02                                        ; limits: max
00001bd: 05                                        ; FIXUP section size
; section "Memory" (5)
00001c3: 05                                        ; section code
00001c4: 00                                        ; section size (guess)
00001c5: 01                                        ; num memories
; memory 0
00001c6: 03                                        ; limits: flags
00001c7: 01                                        ; limits: initial
00001c8: 01                                        ; limits: max
00001c4: 04                                        ; FIXUP section size
; section "Global" (6)
00001c9: 06                                        ; section code
00001ca: 00                                        ; section size (guess)
00001cb: 01                                        ; num globals
00001cc: 7f                                        ; i32
00001cd: 01                                        ; global mutability
00001ce: 41                                        ; i32.const
00001cf: 00                                        ; i32 literal
00001d0: 0b                                        ; end
00001ca: 06                                        ; FIXUP section size
; section "Export" (7)
00001d1: 07                                        ; section code
00001d2: 00                                        ; section size (guess)
00001d3: 9403                                      ; num exports
00001d5: 0b                                        ; string length
00001d6: 756e 7265 6163 6861 626c 65              unreachable  ; export name
00001e1: 00                                        ; export kind
00001e2: 02                                        ; export func index
00001e3: 02                                        ; string length
00001e4: 6272                                     br  ; export name
00001e6: 00                                        ; export kind
00001e7: 03                                        ; export func index
00001e8: 08                                        ; string length
00001e9: 6272 5f74 6162 6c65                      br_table  ; export name
00001f1: 00                                        ; export kind
00001f2: 04                                        ; export func index
00001f3: 06                                        ; string length
00001f4: 7265 7475 726e                           return  ; export name
00001fa: 00                                        ; export kind
00001fb: 05                                        ; export func index
00001fc: 04                                        ; string length
00001fd: 6361 6c6c                                call  ; export name
0000201: 00                                        ; export kind
0000202: 06                                        ; export func index
0000203: 0d                                        ; string length
0000204: 6361 6c6c 5f69 6e64 6972 6563 74         call_indirect  ; export name
0000211: 00                                        ; export kind
0000212: 07                                        ; export func index
0000213: 0b                                        ; string length
0000214: 7265 7475 726e 5f63 616c 6c              return_call  ; export name
000021f: 00                                        ; export kind
0000220: 08                                        ; export func index
0000221: 14                                        ; string length
0000222: 7265 7475 726e 5f63 616c 6c5f 696e 6469  return_call_indi
0000232: 7265 6374                                rect  ; export name
0000236: 00                                        ; export kind
0000237: 09                                        ; export func index
0000238: 04                                        ; string length
0000239: 6472 6f70                                drop  ; export name
000023d: 00                                        ; export kind
000023e: 0a                                        ; export func index
000023f: 06                                        ; string length
0000240: 7365 6c65 6374                           select  ; export name
0000246: 00                                        ; export kind
0000247: 0b                                        ; export func index
0000248: 08                                        ; string length
0000249: 7365 6c65 6374 5f74                      select_t  ; export name
0000251: 00                                        ; export kind
0000252: 0c                                        ; export func index
0000253: 09                                        ; string length
0000254: 6765 745f 6c6f 6361 6c                   get_local  ; export name
000025d: 00                                        ; export kind
000025e: 0d                                        ; export func index
000025f: 09                                        ; string length
0000260: 7365 745f 6c6f 6361 6c                   set_local  ; export name
0000269: 00                                        ; export kind
000026a: 0e                                        ; export func index
000026b: 09                                        ; string length
000026c: 7465 655f 6c6f 6361 6c                   tee_local  ; export name
0000275: 00                                        ; export kind
0000276: 0f                                        ; export func index
0000277: 0a                                        ; string length
0000278: 6765 745f 676c 6f62 616c                 get_global  ; export name
0000282: 00                                        ; export kind
0000283: 10                                        ; export func index
0000284: 0a                                        ; string length
0000285: 7365 745f 676c 6f62 616c                 set_global  ; export name
000028f: 00                                        ; export kind
0000290: 11                                        ; export func index
0000291: 08                                        ; string length
0000292: 6933 322e 6c6f 6164                      i32.load  ; export name
000029a: 00                                        ; export kind
000029b: 12                                        ; export func index
000029c: 08                                        ; string length
000029d: 6936 342e 6c6f 6164                      i64.load  ; export name
00002a5: 00                                        ; export kind
00002a6: 13                                        ; export func index
00002a7: 08                                        ; string length
00002a8: 6633 322e 6c6f 6164                      f32.load  ; export name
00002b0: 00                                        ; export kind
00002b1: 14                                        ; export func index
00002b2: 08                                        ; string length
00002b3: 6636 342e 6c6f 6164                      f64.load  ; export name
00002bb: 00                                        ; export kind
00002bc: 15                                        ; export func index
00002bd: 0b                                        ; string length
00002be: 6933 322e 6c6f 6164 385f 73              i32.load8_s  ; export name
00002c9: 00                                        ; export kind
00002ca: 16                                        ; export func index
00002cb: 0b                                        ; string length
00002cc: 6933 322e 6c6f 6164 385f 75              i32.load8_u  ; export name
00002d7: 00                                        ; export kind
00002d8: 17                                        ; export func index
00002d9: 0c                                        ; string length
00002da: 6933 322e 6c6f 6164 3136 5f73            i32.load16_s  ; export name
00002e6: 00                                        ; export kind
00002e7: 18                                        ; export func index
00002e8: 0c                                        ; string length
00002e9: 6933 322e 6c6f 6164 3136 5f75            i32.load16_u  ; export name
00002f5: 00                                        ; export kind
00002f6: 19                                        ; export func index
00002f7: 0b                                        ; string length
00002f8: 6936 342e 6c6f 6164 385f 73              i64.load8_s  ; export name
0000303: 00                                        ; export kind
0000304: 1a                                        ; export func index
0000305: 0b                                        ; string length
0000306: 6936 342e 6c6f 6164 385f 75              i64.load8_u  ; export name
0000311: 00                                        ; export kind
0000312: 1b                                        ; export func index
0000313: 0c                                        ; string length
0000314: 6936 342e 6c6f 6164 3136 5f73            i64.load16_s  ; export name
0000320: 00                                        ; export kind
0000321: 1c                                        ; export func index
0000322: 0c                                        ; string length
0000323: 6936 342e 6c6f 6164 3136 5f75            i64.load16_u  ; export name
000032f: 00                                        ; export kind
0000330: 1d                                        ; export func index
0000331: 0c                                        ; string length
0000332: 6936 342e 6c6f 6164 3332 5f73            i64.load32_s  ; export name
000033e: 00                                        ; export kind
000033f: 1e                                        ; export func index
0000340: 0c                                        ; string length
0000341: 6936 342e 6c6f 6164 3332 5f75            i64.load32_u  ; export name
000034d: 00                                        ; export kind
000034e: 1f                                        ; export func index
000034f: 09                                        ; string length
0000350: 6933 322e 7374 6f72 65                   i32.store  ; export name
0000359: 00                                        ; export kind
000035a: 20                                        ; export func index
000035b: 09                                        ; string length
000035c: 6936 342e 7374 6f72 65                   i64.store  ; export name
0000365: 00                                        ; export kind
0000366: 21                                        ; export func index
0000367: 09                                        ; string length
0000368: 6633 322e 7374 6f72 65                   f32.store  ; export name
0000371: 00                                        ; export kind
0000372: 22                                        ; export func index
0000373: 09                                        ; string length
0000374: 6636 342e 7374 6f72 65                   f64.store  ; export name
000037d: 00                                        ; export kind
000037e: 23                                        ; export func index
000037f: 0a                                        ; string length
0000380: 6933 322e 7374 6f72 6538                 i32.store8  ; export name
000038a: 00                                        ; export kind
000038b: 24                                        ; export func index
000038c: 0b                                        ; string length
000038d: 6933 322e 7374 6f72 6531 36              i32.store16  ; export name
0000398: 00                                        ; export kind
0000399: 25                                        ; export func index
000039a: 0a                                        ; string length
000039b: 6936 342e 7374 6f72 6538                 i64.store8  ; export name
00003a5: 00                                        ; export kind
00003a6: 26                                        ; export func index
00003a7: 0b                                        ; string length
00003a8: 6936 342e 7374 6f72 6531 36              i64.store16  ; export name
00003b3: 00                                        ; export kind
00003b4: 27                                        ; export func index
00003b5: 0b                                        ; string length
00003b6: 6936 342e 7374 6f72 6533 32              i64.store32  ; export name
00003c1: 00                                        ; export kind
00003c2: 28                                        ; export func index
00003c3: 0e                                        ; string length
00003c4: 6375 7272 656e 745f 6d65 6d6f 7279       current_memory  ; export name
00003d2: 00                                        ; export kind
00003d3: 29                                        ; export func index
00003d4: 0b                                        ; string length
00003d5: 6772 6f77 5f6d 656d 6f72 79              grow_memory  ; export name
00003e0: 00                                        ; export kind
00003e1: 2a                                        ; export func index
00003e2: 09                                        ; string length
00003e3: 6933 322e 636f 6e73 74                   i32.const  ; export name
00003ec: 00                                        ; export kind
00003ed: 2b                                        ; export func index
00003ee: 09                                        ; string length
00003ef: 6936 342e 636f 6e73 74                   i64.const  ; export name
00003f8: 00                                        ; export kind
00003f9: 2c                                        ; export func index
00003fa: 09                                        ; string length
00003fb: 6633 322e 636f 6e73 74                   f32.const  ; export name
0000404: 00                                        ; export kind
0000405: 2d                                        ; export func index
0000406: 09                                        ; string length
0000407: 6636 342e 636f 6e73 74                   f64.const  ; export name
0000410: 00                                        ; export kind
0000411: 2e                                        ; export func index
0000412: 07                                        ; string length
0000413: 6933 322e 6571 7a                        i32.eqz  ; export name
000041a: 00                                        ; export kind
000041b: 2f                                        ; export func index
000041c: 06                                        ; string length
000041d: 6933 322e 6571                           i32.eq  ; export name
0000423: 00                                        ; export kind
0000424: 30                                        ; export func index
0000425: 06                                        ; string length
0000426: 6933 322e 6e65                           i32.ne  ; export name
000042c: 00                                        ; export kind
000042d: 31                                        ; export func index
000042e: 08                                        ; string length
000042f: 6933 322e 6c74 5f73                      i32.lt_s  ; export name
0000437: 00                                        ; export kind
0000438: 32                                        ; export func index
0000439: 08                                        ; string length
000043a: 6933 322e 6c74 5f75                      i32.lt_u  ; export name
0000442: 00                                        ; export kind
0000443: 33                                        ; export func index
0000444: 08                                        ; string length
0000445: 6933 322e 6774 5f73                      i32.gt_s  ; export name
000044d: 00                                        ; export kind
000044e: 34                                        ; export func index
000044f: 08                                        ; string length
0000450: 6933 322e 6774 5f75                      i32.gt_u  ; export name
0000458: 00                                        ; export kind
0000459: 35                                        ; export func index
000045a: 08                                        ; string length
000045b: 6933 322e 6c65 5f73                      i32.le_s  ; export name
0000463: 00                                        ; export kind
0000464: 36                                        ; export func index
0000465: 08                                        ; string length
0000466: 6933 322e 6c65 5f75                      i32.le_u  ; export name
000046e: 00                                        ; export kind
000046f: 37                                        ; export func index
0000470: 08                                        ; string length
0000471: 6933 322e 6765 5f73                      i32.ge_s  ; export name
0000479: 00                                        ; export kind
000047a: 38                                        ; export func index
000047b: 08                                        ; string length
000047c: 6933 322e 6765 5f75                      i32.ge_u  ; export name
0000484: 00                                        ; export kind
0000485: 39                                        ; export func index
0000486: 07                                        ; string length
0000487: 6936 342e 6571 7a                        i64.eqz  ; export name
000048e: 00                                        ; export kind
000048f: 3a                                        ; export func index
0000490: 06                                        ; string length
0000491: 6936 342e 6571                           i64.eq  ; export name
0000497: 00                                        ; export kind
0000498: 3b                                        ; export func index
0000499: 06                                        ; string length
000049a: 6936 342e 6e65                           i64.ne  ; export name
00004a0: 00                                        ; export kind
00004a1: 3c                                        ; export func index
00004a2: 08                                        ; string length
00004a3: 6936 342e 6c74 5f73                      i64.lt_s  ; export name
00004ab: 00                                        ; export kind
00004ac: 3d                                        ; export func index
00004ad: 08                                        ; string length
00004ae: 6936 342e 6c74 5f75                      i64.lt_u  ; export name
00004b6: 00                                        ; export kind
00004b7: 3e                                        ; export func index
00004b8: 08                                        ; string length
00004b9: 6936 342e 6774 5f73                      i64.gt_s  ; export name
00004c1: 00                                        ; export kind
00004c2: 3f                                        ; export func index
00004c3: 08                                        ; string length
00004c4: 6936 342e 6774 5f75                      i64.gt_u  ; export name
00004cc: 00                                        ; export kind
00004cd: 40                                        ; export func index
00004ce: 08                                        ; string length
00004cf: 6936 342e 6c65 5f73                      i64.le_s  ; export name
00004d7: 00                                        ; export kind
00004d8: 41                                        ; export func index
00004d9: 08                                        ; string length
00004da: 6936 342e 6c65 5f75                      i64.le_u  ; export name
00004e2: 00                                        ; export kind
00004e3: 42                                        ; export func index
00004e4: 08                                        ; string length
00004e5: 6936 342e 6765 5f73                      i64.ge_s  ; export name
00004ed: 00                                        ; export kind
00004ee: 43                                        ; export func index
00004ef: 08                                        ; string length
00004f0: 6936 342e 6765 5f75                      i64.ge_u  ; export name
00004f8: 00                                        ; export kind
00004f9: 44                                        ; export func index
00004fa: 06                                        ; string length
00004fb: 6633 322e 6571                           f32.eq  ; export name
0000501: 00                                        ; export kind
0000502: 45                                        ; export func index
0000503: 06                                        ; string length
0000504: 6633 322e 6e65                           f32.ne  ; export name
000050a: 00                                        ; export kind
000050b: 46                                        ; export func index
000050c: 06                                        ; string length
000050d: 6633 322e 6c74                           f32.lt  ; export name
0000513: 00                                        ; export kind
0000514: 47                                        ; export func index
0000515: 06                                        ; string length
0000516: 6633 322e 6774                           f32.gt  ; export name
000051c: 00                                        ; export kind
000051d: 48                                        ; export func index
000051e: 06                                        ; string length
000051f: 6633 322e 6c65                           f32.le  ; export name
0000525: 00                                        ; export kind
0000526: 49                                        ; export func index
0000527: 06                                        ; string length
0000528: 6633 322e 6765                           f32.ge  ; export name
000052e: 00                                        ; export kind
000052f: 4a                                        ; export func index
0000530: 06                                        ; string length
0000531: 6636 342e 6571                           f64.eq  ; export name
0000537: 00                                        ; export kind
0000538: 4b                                        ; export func index
0000539: 06                                        ; string length
000053a: 6636 342e 6e65                           f64.ne  ; export name
0000540: 00                                        ; export kind
0000541: 4c                                        ; export func index
0000542: 06                                        ; string length
0000543: 6636 342e 6c74                           f64.lt  ; export name
0000549: 00                                        ; export kind
000054a: 4d                                        ; export func index
000054b: 06                                        ; string length
000054c: 6636 342e 6774                           f64.gt  ; export name
0000552: 00                                        ; export kind
0000553: 4e                                        ; export func index
0000554: 06                                        ; string length
0000555: 6636 342e 6c65                           f64.le  ; export name
000055b: 00                                        ; export kind
000055c: 4f                                        ; export func index
000055d: 06                                        ; string length
000055e: 6636 342e 6765                           f64.ge  ; export name
0000564: 00                                        ; export kind
0000565: 50                                        ; export func index
0000566: 07                                        ; string length
0000567: 6933 322e 636c 7a                        i32.clz  ; export name
000056e: 00                                        ; export kind
000056f: 51                                        ; export func index
0000570: 07                                        ; string length
0000571: 6933 322e 6374 7a                        i32.ctz  ; export name
0000578: 00                                        ; export kind
0000579: 52                                        ; export func index
000057a: 0a                                        ; string length
000057b: 6933 322e 706f 7063 6e74                 i32.popcnt  ; export name
0000585: 00                                        ; export kind
0000586: 53                                        ; export func index
0000587: 07                                        ; string length
0000588: 6933 322e 6164 64                        i32.add  ; export name
000058f: 00                                        ; export kind
0000590: 54                                        ; export func index
0000591: 07                                        ; string length
0000592: 6933 322e 7375 62                        i32.sub  ; export name
0000599: 00                                        ; export kind
000059a: 55                                        ; export func index
000059b: 07                                        ; string length
000059c: 6933 322e 6d75 6c                        i32.mul  ; export name
00005a3: 00                                        ; export kind
00005a4: 56                                        ; export func index
00005a5: 09                                        ; string length
00005a6: 6933 322e 6469 765f 73                   i32.div_s  ; export name
00005af: 00                                        ; export kind
00005b0: 57                                        ; export func index
00005b1: 09                                        ; string length
00005b2: 6933 322e 6469 765f 75                   i32.div_u  ; export name
00005bb: 00                                        ; export kind
00005bc: 58                                        ; export func index
00005bd: 09                                        ; string length
00005be: 6933 322e 7265 6d5f 73                   i32.rem_s  ; export name
00005c7: 00                                        ; export kind
00005c8: 59                                        ; export func index
00005c9: 09                                        ; string length
00005ca: 6933 322e 7265 6d5f 75                   i32.rem_u  ; export name
00005d3: 00                                        ; export kind
00005d4: 5a                                        ; export func index
00005d5: 07                                        ; string length
00005d6: 6933 322e 616e 64                        i32.and  ; export name
00005dd: 00                                        ; export kind
00005de: 5b                                        ; export func index
00005df: 06                                        ; string length
00005e0: 6933 322e 6f72                           i32.or  ; export name
00005e6: 00                                        ; export kind
00005e7: 5c                                        ; export func index
00005e8: 07                                        ; string length
00005e9: 6933 322e 786f 72                        i32.xor  ; export name
00005f0: 00                                        ; export kind
00005f1: 5d                                        ; export func index
00005f2: 07                                        ; string length
00005f3: 6933 322e 7368 6c                        i32.shl  ; export name
00005fa: 00                                        ; export kind
00005fb: 5e                                        ; export func index
00005fc: 09                                        ; string length
00005fd: 6933 322e 7368 725f 73                   i32.shr_s  ; export name
0000606: 00                                        ; export kind
0000607: 5f                                        ; export func index
0000608: 09                                        ; string length
0000609: 6933 322e 7368 725f 75                   i32.shr_u  ; export name
0000612: 00                                        ; export kind
0000613: 60                                        ; export func index
0000614: 08                                        ; string length
0000615: 6933 322e 726f 746c                      i32.rotl  ; export name
000061d: 00                                        ; export kind
000061e: 61                                        ; export func index
000061f: 08                                        ; string length
0000620: 6933 322e 726f 7472                      i32.rotr  ; export name
0000628: 00                                        ; export kind
0000629: 62                                        ; export func index
000062a: 07                                        ; string length
000062b: 6936 342e 636c 7a                        i64.clz  ; export name
0000632: 00                                        ; export kind
0000633: 63                                        ; export func index
0000634: 07                                        ; string length
0000635: 6936 342e 6374 7a                        i64.ctz  ; export name
000063c: 00                                        ; export kind
000063d: 64                                        ; export func index
000063e: 0a                                        ; string length
000063f: 6936 342e 706f 7063 6e74                 i64.popcnt  ; export name
0000649: 00                                        ; export kind
000064a: 65                                        ; export func index
000064b: 07                                        ; string length
000064c: 6936 342e 6164 64                        i64.add  ; export name
0000653: 00                                        ; export kind
0000654: 66                                        ; export func index
0000655: 07                                        ; string length
0000656: 6936 342e 7375 62                        i64.sub  ; export name
000065d: 00                                        ; export kind
000065e: 67                                        ; export func index
000065f: 07                                        ; string length
0000660: 6936 342e 6d75 6c                        i64.mul  ; export name
0000667: 00                                        ; export kind
0000668: 68                                        ; export func index
0000669: 09                                        ; string length
000066a: 6936 342e 6469 765f 73                   i64.div_s  ; export name
0000673: 00                                        ; export kind
0000674: 69                                        ; export func index
0000675: 09                                        ; string length
0000676: 6936 342e 6469 765f 75                   i64.div_u  ; export name
000067f: 00                                        ; export kind
0000680: 6a                                        ; export func index
0000681: 09                                        ; string length
0000682: 6936 342e 7265 6d5f 73                   i64.rem_s  ; export name
000068b: 00                                        ; export kind
000068c: 6b                                        ; export func index
000068d: 09                                        ; string length
000068e: 6936 342e 7265 6d5f 75                   i64.rem_u  ; export name
0000697: 00                                        ; export kind
0000698: 6c                                        ; export func index
0000699: 07                                        ; string length
000069a: 6936 342e 616e 64                        i64.and  ; export name
00006a1: 00                                        ; export kind
00006a2: 6d                                        ; export func index
00006a3: 06                                        ; string length
00006a4: 6936 342e 6f72                           i64.or  ; export name
00006aa: 00                                        ; export kind
00006ab: 6e                                        ; export func index
00006ac: 07                                        ; string length
00006ad: 6936 342e 786f 72                        i64.xor  ; export name
00006b4: 00                                        ; export kind
00006b5: 6f                                        ; export func index
00006b6: 07                                        ; string length
00006b7: 6936 342e 7368 6c                        i64.shl  ; export name
00006be: 00                                        ; export kind
00006bf: 70                                        ; export func index
00006c0: 09                                        ; string length
00006c1: 6936 342e 7368 725f 73                   i64.shr_s  ; export name
00006ca: 00                                        ; export kind
00006cb: 71                                        ; export func index
00006cc: 09                                        ; string length
00006cd: 6936 342e 7368 725f 75                   i64.shr_u  ; export name
00006d6: 00                                        ; export kind
00006d7: 72                                        ; export func index
00006d8: 08                                        ; string length
00006d9: 6936 342e 726f 746c                      i64.rotl  ; export name
00006e1: 00                                        ; export kind
00006e2: 73                                        ; export func index
00006e3: 08                                        ; string length
00006e4: 6936 342e 726f 7472                      i64.rotr  ; export name
00006ec: 00                                        ; export kind
00006ed: 74                                        ; export func index
00006ee: 07                                        ; string length
00006ef: 6633 322e 6162 73                        f32.abs  ; export name
00006f6: 00                                        ; export kind
00006f7: 75                                        ; export func index
00006f8: 07                                        ; string length
00006f9: 6633 322e 6e65 67                        f32.neg  ; export name
0000700: 00                                        ; export kind
0000701: 76                                        ; export func index
0000702: 08                                        ; string length
0000703: 6633 322e 6365 696c                      f32.ceil  ; export name
000070b: 00                                        ; export kind
000070c: 77                                        ; export func index
000070d: 09                                        ; string length
000070e: 6633 322e 666c 6f6f 72                   f32.floor  ; export name
0000717: 00                                        ; export kind
0000718: 78                                        ; export func index
0000719: 09                                        ; string length
000071a: 6633 322e 7472 756e 63                   f32.trunc  ; export name
0000723: 00                                        ; export kind
0000724: 79                                        ; export func index
0000725: 0b                                        ; string length
0000726: 6633 322e 6e65 6172 6573 74              f32.nearest  ; export name
0000731: 00                                        ; export kind
0000732: 7a                                        ; export func index
0000733: 08                                        ; string length
0000734: 6633 322e 7371 7274                      f32.sqrt  ; export name
000073c: 00                                        ; export kind
000073d: 7b                                        ; export func index
000073e: 07                                        ; string length
000073f: 6633 322e 6164 64                        f32.add  ; export name
0000746: 00                                        ; export kind
0000747: 7c                                        ; export func index
0000748: 07                                        ; string length
0000749: 6633 322e 7375 62                        f32.sub  ; export name
0000750: 00                                        ; export kind
0000751: 7d                                        ; export func index
0000752: 07                                        ; string length
0000753: 6633 322e 6d75 6c                        f32.mul  ; export name
000075a: 00                                        ; export kind
000075b: 7e                                        ; export func index
000075c: 07                                        ; string length
000075d: 6633 322e 6469 76                        f32.div  ; export name
0000764: 00                                        ; export kind
0000765: 7f                                        ; export func index
0000766: 07                                        ; string length
0000767: 6633 322e 6d69 6e                        f32.min  ; export name
000076e: 00                                        ; export kind
000076f: 8001                                      ; export func index
0000771: 07                                        ; string length
0000772: 6633 322e 6d61 78                        f32.max  ; export name
0000779: 00                                        ; export kind
000077a: 8101                                      ; export func index
000077c: 0c                                        ; string length
000077d: 6633 322e 636f 7079 7369 676e            f32.copysign  ; export name
0000789: 00                                        ; export kind
000078a: 8201                                      ; export func index
000078c: 07                                        ; string length
000078d: 6636 342e 6162 73                        f64.abs  ; export name
0000794: 00                                        ; export kind
0000795: 8301                                      ; export func index
0000797: 07                                        ; string length
0000798: 6636 342e 6e65 67                        f64.neg  ; export name
000079f: 00                                        ; export kind
00007a0: 8401                                      ; export func index
00007a2: 08                                        ; string length
00007a3: 6636 342e 6365 696c                      f64.ceil  ; export name
00007ab: 00                                        ; export kind
00007ac: 8501                                      ; export func index
00007ae: 09                                        ; string length
00007af: 6636 342e 666c 6f6f 72                   f64.floor  ; export name
00007b8: 00                                        ; export kind
00007b9: 8601                                      ; export func index
00007bb: 09                                        ; string length
00007bc: 6636 342e 7472 756e 63                   f64.trunc  ; export name
00007c5: 00                                        ; export kind
00007c6: 8701                                      ; export func index
00007c8: 0b                                        ; string length
00007c9: 6636 342e 6e65 6172 6573 74              f64.nearest  ; export name
00007d4: 00                                        ; export kind
00007d5: 8801                                      ; export func index
00007d7: 08                                        ; string length
00007d8: 6636 342e 7371 7274                      f64.sqrt  ; export name
00007e0: 00                                        ; export kind
00007e1: 8901                                      ; export func index
00007e3: 07                                        ; string length
00007e4: 6636 342e 6164 64                        f64.add  ; export name
00007eb: 00                                        ; export kind
00007ec: 8a01                                      ; export func index
00007ee: 07                                        ; string length
00007ef: 6636 342e 7375 62                        f64.sub  ; export name
00007f6: 00                                        ; export kind
00007f7: 8b01                                      ; export func index
00007f9: 07                                        ; string length
00007fa: 6636 342e 6d75 6c                        f64.mul  ; export name
0000801: 00                                        ; export kind
0000802: 8c01                                      ; export func index
0000804: 07                                        ; string length
0000805: 6636 342e 6469 76                        f64.div  ; export name
000080c: 00                                        ; export kind
000080d: 8d01                                      ; export func index
000080f: 07                                        ; string length
0000810: 6636 342e 6d69 6e                        f64.min  ; export name
0000817: 00                                        ; export kind
0000818: 8e01                                      ; export func index
000081a: 07                                        ; string length
000081b: 6636 342e 6d61 78                        f64.max  ; export name
0000822: 00                                        ; export kind
0000823: 8f01                                      ; export func index
0000825: 0c                                        ; string length
0000826: 6636 342e 636f 7079 7369 676e            f64.copysign  ; export name
0000832: 00                                        ; export kind
0000833: 9001                                      ; export func index
0000835: 0c                                        ; string length
0000836: 6933 322e 7772 6170 2f69 3634            i32.wrap/i64  ; export name
0000842: 00                                        ; export kind
0000843: 9101                                      ; export func index
0000845: 0f                                        ; string length
0000846: 6933 322e 7472 756e 635f 732f 6633 32    i32.trunc_s/f32  ; export name
0000855: 00                                        ; export kind
0000856: 9201                                      ; export func index
0000858: 0f                                        ; string length
0000859: 6933 322e 7472 756e 635f 752f 6633 32    i32.trunc_u/f32  ; export name
0000868: 00                                        ; export kind
0000869: 9301                                      ; export func index
000086b: 0f                                        ; string length
000086c: 6933 322e 7472 756e 635f 732f 6636 34    i32.trunc_s/f64  ; export name
000087b: 00                                        ; export kind
000087c: 9401                                      ; export func index
000087e: 0f                                        ; string length
000087f: 6933 322e 7472 756e 635f 752f 6636 34    i32.trunc_u/f64  ; export name
000088e: 00                                        ; export kind
000088f: 9501                                      ; export func index
0000891: 10                                        ; string length
0000892: 6936 342e 6578 7465 6e64 5f73 2f69 3332  i64.extend_s/i32  ; export name
00008a2: 00                                        ; export kind
00008a3: 9601                                      ; export func index
00008a5: 10                                        ; string length
00008a6: 6936 342e 6578 7465 6e64 5f75 2f69 3332  i64.extend_u/i32  ; export name
00008b6: 00                                        ; export kind
00008b7: 9701                                      ; export func index
00008b9: 0f                                        ; string length
00008ba: 6936 342e 7472 756e 635f 732f 6633 32    i64.trunc_s/f32  ; export name
00008c9: 00                                        ; export kind
00008ca: 9801                                      ; export func index
00008cc: 0f                                        ; string length
00008cd: 6936 342e 7472 756e 635f 752f 6633 32    i64.trunc_u/f32  ; export name
00008dc: 00                                        ; export kind
00008dd: 9901                                      ; export func index
00008df: 0f                                        ; string length
00008e0: 6936 342e 7472 756e 635f 732f 6636 34    i64.trunc_s/f64  ; export name
00008ef: 00                                        ; export kind
00008f0: 9a01                                      ; export func index
00008f2: 0f                                        ; string length
00008f3: 6936 342e 7472 756e 635f 752f 6636 34    i64.trunc_u/f64  ; export name
0000902: 00                                        ; export kind
0000903: 9b01                                      ; export func index
0000905: 11                                        ; string length
0000906: 6633 322e 636f 6e76 6572 745f 732f 6933  f32.convert_s/i3
0000916: 32                                       2  ; export name
0000917: 00                                        ; export kind
0000918: 9c01                                      ; export func index
000091a: 11                                        ; string length
000091b: 6633 322e 636f 6e76 6572 745f 752f 6933  f32.convert_u/i3
000092b: 32                                       2  ; export name
000092c: 00                                        ; export kind
000092d: 9d01                                      ; export func index
000092f: 11                                        ; string length
0000930: 6633 322e 636f 6e76 6572 745f 732f 6936  f32.convert_s/i6
0000940: 34                                       4  ; export name
0000941: 00                                        ; export kind
0000942: 9e01                                      ; export func index
0000944: 11                                        ; string length
0000945: 6633 322e 636f 6e76 6572 745f 752f 6936  f32.convert_u/i6
0000955: 34                                       4  ; export name
0000956: 00                                        ; export kind
0000957: 9f01                                      ; export func index
0000959: 0e                                        ; string length
000095a: 6633 322e 6465 6d6f 7465 2f66 3634       f32.demote/f64  ; export name
0000968: 00                                        ; export kind
0000969: a001                                      ; export func index
000096b: 11                                        ; string length
000096c: 6636 342e 636f 6e76 6572 745f 732f 6933  f64.convert_s/i3
000097c: 32                                       2  ; export name
000097d: 00                                        ; export kind
000097e: a101                                      ; export func index
0000980: 11                                        ; string length
0000981: 6636 342e 636f 6e76 6572 745f 752f 6933  f64.convert_u/i3
0000991: 32                                       2  ; export name
0000992: 00                                        ; export kind
0000993: a201                                      ; export func index
0000995: 11                                        ; string length
0000996: 6636 342e 636f 6e76 6572 745f 732f 6936  f64.convert_s/i6
00009a6: 34                                       4  ; export name
00009a7: 00                                        ; export kind
00009a8: a301                                      ; export func index
00009aa: 11                                        ; string length
00009ab: 6636 342e 636f 6e76 6572 745f 752f 6936  f64.convert_u/i6
00009bb: 34                                       4  ; export name
00009bc: 00                                        ; export kind
00009bd: a401                                      ; export func index
00009bf: 0f                                        ; string length
00009c0: 6636 342e 7072 6f6d 6f74 652f 6633 32    f64.promote/f32  ; export name
00009cf: 00                                        ; export kind
00009d0: a501                                      ; export func index
00009d2: 13                                        ; string length
00009d3: 6933 322e 7265 696e 7465 7270 7265 742f  i32.reinterpret/
00009e3: 6633 32                                  f32  ; export name
00009e6: 00                                        ; export kind
00009e7: a601                                      ; export func index
00009e9: 13                                        ; string length
00009ea: 6633 322e 7265 696e 7465 7270 7265 742f  f32.reinterpret/
00009fa: 6933 32                                  i32  ; export name
00009fd: 00                                        ; export kind
00009fe: a701                                      ; export func index
0000a00: 13                                        ; string length
0000a01: 6936 342e 7265 696e 7465 7270 7265 742f  i64.reinterpret/
0000a11: 6636 34                                  f64  ; export name
0000a14: 00                                        ; export kind
0000a15: a801                                      ; export func index
0000a17: 13                                        ; string length
0000a18: 6636 342e 7265 696e 7465 7270 7265 742f  f64.reinterpret/
0000a28: 6936 34                                  i64  ; export name
0000a2b: 00                                        ; export kind
0000a2c: a901                                      ; export func index
0000a2e: 0d                                        ; string length
0000a2f: 6933 322e 6578 7465 6e64 385f 73         i32.extend8_s  ; export name
0000a3c: 00                                        ; export kind
0000a3d: aa01                                      ; export func index
0000a3f: 0e                                        ; string length
0000a40: 6933 322e 6578 7465 6e64 3136 5f73       i32.extend16_s  ; export name
0000a4e: 00                                        ; export kind
0000a4f: ab01                                      ; export func index
0000a51: 0d                                        ; string length
0000a52: 6936 342e 6578 7465 6e64 385f 73         i64.extend8_s  ; export name
0000a5f: 00                                        ; export kind
0000a60: ac01                                      ; export func index
0000a62: 0e                                        ; string length
0000a63: 6936 342e 6578 7465 6e64 3136 5f73       i64.extend16_s  ; export name
0000a71: 00                                        ; export kind
0000a72: ad01                                      ; export func index
0000a74: 0e                                        ; string length
0000a75: 6936 342e 6578 7465 6e64 3332 5f73       i64.extend32_s  ; export name
0000a83: 00                                        ; export kind
0000a84: ae01                                      ; export func index
0000a86: 06                                        ; string length
0000a87: 616c 6c6f 6361                           alloca  ; export name
0000a8d: 00                                        ; export kind
0000a8e: af01                                      ; export func index
0000a90: 09                                        ; string length
0000a91: 6272 5f75 6e6c 6573 73                   br_unless  ; export name
0000a9a: 00                                        ; export kind
0000a9b: b001                                      ; export func index
0000a9d: 09                                        ; string length
0000a9e: 6361 6c6c 5f68 6f73 74                   call_host  ; export name
0000aa7: 00                                        ; export kind
0000aa8: b101                                      ; export func index
0000aaa: 04                                        ; string length
0000aab: 6461 7461                                data  ; export name
0000aaf: 00                                        ; export kind
0000ab0: b201                                      ; export func index
0000ab2: 09                                        ; string length
0000ab3: 6472 6f70 5f6b 6565 70                   drop_keep  ; export name
0000abc: 00                                        ; export kind
0000abd: b301                                      ; export func index
0000abf: 13                                        ; string length
0000ac0: 6933 322e 7472 756e 635f 733a 7361 742f  i32.trunc_s:sat/
0000ad0: 6633 32                                  f32  ; export name
0000ad3: 00                                        ; export kind
0000ad4: b401                                      ; export func index
0000ad6: 13                                        ; string length
0000ad7: 6933 322e 7472 756e 635f 753a 7361 742f  i32.trunc_u:sat/
0000ae7: 6633 32                                  f32  ; export name
0000aea: 00                                        ; export kind
0000aeb: b501                                      ; export func index
0000aed: 13                                        ; string length
0000aee: 6933 322e 7472 756e 635f 733a 7361 742f  i32.trunc_s:sat/
0000afe: 6636 34                                  f64  ; export name
0000b01: 00                                        ; export kind
0000b02: b601                                      ; export func index
0000b04: 13                                        ; string length
0000b05: 6933 322e 7472 756e 635f 753a 7361 742f  i32.trunc_u:sat/
0000b15: 6636 34                                  f64  ; export name
0000b18: 00                                        ; export kind
0000b19: b701                                      ; export func index
0000b1b: 13                                        ; string length
0000b1c: 6936 342e 7472 756e 635f 733a 7361 742f  i64.trunc_s:sat/
0000b2c: 6633 32                                  f32  ; export name
0000b2f: 00                                        ; export kind
0000b30: b801                                      ; export func index
0000b32: 13                                        ; string length
0000b33: 6936 342e 7472 756e 635f 753a 7361 742f  i64.trunc_u:sat/
0000b43: 6633 32                                  f32  ; export name
0000b46: 00                                        ; export kind
0000b47: b901                                      ; export func index
0000b49: 13                                        ; string length
0000b4a: 6936 342e 7472 756e 635f 733a 7361 742f  i64.trunc_s:sat/
0000b5a: 6636 34                                  f64  ; export name
0000b5d: 00                                        ; export kind
0000b5e: ba01                                      ; export func index
0000b60: 13                                        ; string length
0000b61: 6936 342e 7472 756e 635f 753a 7361 742f  i64.trunc_u:sat/
0000b71: 6636 34                                  f64  ; export name
0000b74: 00                                        ; export kind
0000b75: bb01                                      ; export func index
0000b77: 0b                                        ; string length
0000b78: 6d65 6d6f 7279 2e69 6e69 74              memory.init  ; export name
0000b83: 00                                        ; export kind
0000b84: bc01                                      ; export func index
0000b86: 09                                        ; string length
0000b87: 6461 7461 2e64 726f 70                   data.drop  ; export name
0000b90: 00                                        ; export kind
0000b91: bd01                                      ; export func index
0000b93: 0b                                        ; string length
0000b94: 6d65 6d6f 7279 2e63 6f70 79              memory.copy  ; export name
0000b9f: 00                                        ; export kind
0000ba0: be01                                      ; export func index
0000ba2: 0b                                        ; string length
0000ba3: 6d65 6d6f 7279 2e66 696c 6c              memory.fill  ; export name
0000bae: 00                                        ; export kind
0000baf: bf01                                      ; export func index
0000bb1: 0a                                        ; string length
0000bb2: 7461 626c 652e 696e 6974                 table.init  ; export name
0000bbc: 00                                        ; export kind
0000bbd: c001                                      ; export func index
0000bbf: 09                                        ; string length
0000bc0: 656c 656d 2e64 726f 70                   elem.drop  ; export name
0000bc9: 00                                        ; export kind
0000bca: c101                                      ; export func index
0000bcc: 0a                                        ; string length
0000bcd: 7461 626c 652e 636f 7079                 table.copy  ; export name
0000bd7: 00                                        ; export kind
0000bd8: c201                                      ; export func index
0000bda: 09                                        ; string length
0000bdb: 7631 3238 2e6c 6f61 64                   v128.load  ; export name
0000be4: 00                                        ; export kind
0000be5: c301                                      ; export func index
0000be7: 0a                                        ; string length
0000be8: 7631 3238 2e73 746f 7265                 v128.store  ; export name
0000bf2: 00                                        ; export kind
0000bf3: c401                                      ; export func index
0000bf5: 0a                                        ; string length
0000bf6: 7631 3238 2e63 6f6e 7374                 v128.const  ; export name
0000c00: 00                                        ; export kind
0000c01: c501                                      ; export func index
0000c03: 0b                                        ; string length
0000c04: 6938 7831 362e 7370 6c61 74              i8x16.splat  ; export name
0000c0f: 00                                        ; export kind
0000c10: c601                                      ; export func index
0000c12: 14                                        ; string length
0000c13: 6938 7831 362e 6578 7472 6163 745f 6c61  i8x16.extract_la
0000c23: 6e65 5f73                                ne_s  ; export name
0000c27: 00                                        ; export kind
0000c28: c701                                      ; export func index
0000c2a: 14                                        ; string length
0000c2b: 6938 7831 362e 6578 7472 6163 745f 6c61  i8x16.extract_la
0000c3b: 6e65 5f75                                ne_u  ; export name
0000c3f: 00                                        ; export kind
0000c40: c801                                      ; export func index
0000c42: 12                                        ; string length
0000c43: 6938 7831 362e 7265 706c 6163 655f 6c61  i8x16.replace_la
0000c53: 6e65                                     ne  ; export name
0000c55: 00                                        ; export kind
0000c56: c901                                      ; export func index
0000c58: 0b                                        ; string length
0000c59: 6931 3678 382e 7370 6c61 74              i16x8.splat  ; export name
0000c64: 00                                        ; export kind
0000c65: ca01                                      ; export func index
0000c67: 14                                        ; string length
0000c68: 6931 3678 382e 6578 7472 6163 745f 6c61  i16x8.extract_la
0000c78: 6e65 5f73                                ne_s  ; export name
0000c7c: 00                                        ; export kind
0000c7d: cb01                                      ; export func index
0000c7f: 14                                        ; string length
0000c80: 6931 3678 382e 6578 7472 6163 745f 6c61  i16x8.extract_la
0000c90: 6e65 5f75                                ne_u  ; export name
0000c94: 00                                        ; export kind
0000c95: cc01                                      ; export func index
0000c97: 12                                        ; string length
0000c98: 6931 3678 382e 7265 706c 6163 655f 6c61  i16x8.replace_la
0000ca8: 6e65                                     ne  ; export name
0000caa: 00                                        ; export kind
0000cab: cd01                                      ; export func index
0000cad: 0b                                        ; string length
0000cae: 6933 3278 342e 7370 6c61 74              i32x4.splat  ; export name
0000cb9: 00                                        ; export kind
0000cba: ce01                                      ; export func index
0000cbc: 12                                        ; string length
0000cbd: 6933 3278 342e 6578 7472 6163 745f 6c61  i32x4.extract_la
0000ccd: 6e65                                     ne  ; export name
0000ccf: 00                                        ; export kind
0000cd0: cf01                                      ; export func index
0000cd2: 12                                        ; string length
0000cd3: 6933 3278 342e 7265 706c 6163 655f 6c61  i32x4.replace_la
0000ce3: 6e65                                     ne  ; export name
0000ce5: 00                                        ; export kind
0000ce6: d001                                      ; export func index
0000ce8: 0b                                        ; string length
0000ce9: 6936 3478 322e 7370 6c61 74              i64x2.splat  ; export name
0000cf4: 00                                        ; export kind
0000cf5: d101                                      ; export func index
0000cf7: 12                                        ; string length
0000cf8: 6936 3478 322e 6578 7472 6163 745f 6c61  i64x2.extract_la
0000d08: 6e65                                     ne  ; export name
0000d0a: 00                                        ; export kind
0000d0b: d201                                      ; export func index
0000d0d: 12                                        ; string length
0000d0e: 6936 3478 322e 7265 706c 6163 655f 6c61  i64x2.replace_la
0000d1e: 6e65                                     ne  ; export name
0000d20: 00                                        ; export kind
0000d21: d301                                      ; export func index
0000d23: 0b                                        ; string length
0000d24: 6633 3278 342e 7370 6c61 74              f32x4.splat  ; export name
0000d2f: 00                                        ; export kind
0000d30: d401                                      ; export func index
0000d32: 12                                        ; string length
0000d33: 6633 3278 342e 6578 7472 6163 745f 6c61  f32x4.extract_la
0000d43: 6e65                                     ne  ; export name
0000d45: 00                                        ; export kind
0000d46: d501                                      ; export func index
0000d48: 12                                        ; string length
0000d49: 6633 3278 342e 7265 706c 6163 655f 6c61  f32x4.replace_la
0000d59: 6e65                                     ne  ; export name
0000d5b: 00                                        ; export kind
0000d5c: d601                                      ; export func index
0000d5e: 0b                                        ; string length
0000d5f: 6636 3478 322e 7370 6c61 74              f64x2.splat  ; export name
0000d6a: 00                                        ; export kind
0000d6b: d701                                      ; export func index
0000d6d: 12                                        ; string length
0000d6e: 6636 3478 322e 6578 7472 6163 745f 6c61  f64x2.extract_la
0000d7e: 6e65                                     ne  ; export name
0000d80: 00                                        ; export kind
0000d81: d801                                      ; export func index
0000d83: 12                                        ; string length
0000d84: 6636 3478 322e 7265 706c 6163 655f 6c61  f64x2.replace_la
0000d94: 6e65                                     ne  ; export name
0000d96: 00                                        ; export kind
0000d97: d901                                      ; export func index
0000d99: 08                                        ; string length
0000d9a: 6938 7831 362e 6571                      i8x16.eq  ; export name
0000da2: 00                                        ; export kind
0000da3: da01                                      ; export func index
0000da5: 08                                        ; string length
0000da6: 6938 7831 362e 6e65                      i8x16.ne  ; export name
0000dae: 00                                        ; export kind
0000daf: db01                                      ; export func index
0000db1: 0a                                        ; string length
0000db2: 6938 7831 362e 6c74 5f73                 i8x16.lt_s  ; export name
0000dbc: 00                                        ; export kind
0000dbd: dc01                                      ; export func index
0000dbf: 0a                                        ; string length
0000dc0: 6938 7831 362e 6c74 5f75                 i8x16.lt_u  ; export name
0000dca: 00                                        ; export kind
0000dcb: dd01                                      ; export func index
0000dcd: 0a                                        ; string length
0000dce: 6938 7831 362e 6774 5f73                 i8x16.gt_s  ; export name
0000dd8: 00                                        ; export kind
0000dd9: de01                                      ; export func index
0000ddb: 0a                                        ; string length
0000ddc: 6938 7831 362e 6774 5f75                 i8x16.gt_u  ; export name
0000de6: 00                                        ; export kind
0000de7: df01                                      ; export func index
0000de9: 0a                                        ; string length
0000dea: 6938 7831 362e 6c65 5f73                 i8x16.le_s  ; export name
0000df4: 00                                        ; export kind
0000df5: e001                                      ; export func index
0000df7: 0a                                        ; string length
0000df8: 6938 7831 362e 6c65 5f75                 i8x16.le_u  ; export name
0000e02: 00                                        ; export kind
0000e03: e101                                      ; export func index
0000e05: 0a                                        ; string length
0000e06: 6938 7831 362e 6765 5f73                 i8x16.ge_s  ; export name
0000e10: 00                                        ; export kind
0000e11: e201                                      ; export func index
0000e13: 0a                                        ; string length
0000e14: 6938 7831 362e 6765 5f75                 i8x16.ge_u  ; export name
0000e1e: 00                                        ; export kind
0000e1f: e301                                      ; export func index
0000e21: 08                                        ; string length
0000e22: 6931 3678 382e 6571                      i16x8.eq  ; export name
0000e2a: 00                                        ; export kind
0000e2b: e401                                      ; export func index
0000e2d: 08                                        ; string length
0000e2e: 6931 3678 382e 6e65                      i16x8.ne  ; export name
0000e36: 00                                        ; export kind
0000e37: e501                                      ; export func index
0000e39: 0a                                        ; string length
0000e3a: 6931 3678 382e 6c74 5f73                 i16x8.lt_s  ; export name
0000e44: 00                                        ; export kind
0000e45: e601                                      ; export func index
0000e47: 0a                                        ; string length
0000e48: 6931 3678 382e 6c74 5f75                 i16x8.lt_u  ; export name
0000e52: 00                                        ; export kind
0000e53: e701                                      ; export func index
0000e55: 0a                                        ; string length
0000e56: 6931 3678 382e 6774 5f73                 i16x8.gt_s  ; export name
0000e60: 00                                        ; export kind
0000e61: e801                                      ; export func index
0000e63: 0a                                        ; string length
0000e64: 6931 3678 382e 6774 5f75                 i16x8.gt_u  ; export name
0000e6e: 00                                        ; export kind
0000e6f: e901                                      ; export func index
0000e71: 0a                                        ; string length
0000e72: 6931 3678 382e 6c65 5f73                 i16x8.le_s  ; export name
0000e7c: 00                                        ; export kind
0000e7d: ea01                                      ; export func index
0000e7f: 0a                                        ; string length
0000e80: 6931 3678 382e 6c65 5f75                 i16x8.le_u  ; export name
0000e8a: 00                                        ; export kind
0000e8b: eb01                                      ; export func index
0000e8d: 0a                                        ; string length
0000e8e: 6931 3678 382e 6765 5f73                 i16x8.ge_s  ; export name
0000e98: 00                                        ; export kind
0000e99: ec01                                      ; export func index
0000e9b: 0a                                        ; string length
0000e9c: 6931 3678 382e 6765 5f75                 i16x8.ge_u  ; export name
0000ea6: 00                                        ; export kind
0000ea7: ed01                                      ; export func index
0000ea9: 08                                        ; string length
0000eaa: 6933 3278 342e 6571                      i32x4.eq  ; export name
0000eb2: 00                                        ; export kind
0000eb3: ee01                                      ; export func index
0000eb5: 08                                        ; string length
0000eb6: 6933 3278 342e 6e65                      i32x4.ne  ; export name
0000ebe: 00                                        ; export kind
0000ebf: ef01                                      ; export func index
0000ec1: 0a                                        ; string length
0000ec2: 6933 3278 342e 6c74 5f73                 i32x4.lt_s  ; export name
0000ecc: 00                                        ; export kind
0000ecd: f001                                      ; export func index
0000ecf: 0a                                        ; string length
0000ed0: 6933 3278 342e 6c74 5f75                 i32x4.lt_u  ; export name
0000eda: 00                                        ; export kind
0000edb: f101                                      ; export func index
0000edd: 0a                                        ; string length
0000ede: 6933 3278 342e 6774 5f73                 i32x4.gt_s  ; export name
0000ee8: 00                                        ; export kind
0000ee9: f201                                      ; export func index
0000eeb: 0a                                        ; string length
0000eec: 6933 3278 342e 6774 5f75                 i32x4.gt_u  ; export name
0000ef6: 00                                        ; export kind
0000ef7: f301                                      ; export func index
0000ef9: 0a                                        ; string length
0000efa: 6933 3278 342e 6c65 5f73                 i32x4.le_s  ; export name
0000f04: 00                                        ; export kind
0000f05: f401                                      ; export func index
0000f07: 0a                                        ; string length
0000f08: 6933 3278 342e 6c65 5f75                 i32x4.le_u  ; export name
0000f12: 00                                        ; export kind
0000f13: f501                                      ; export func index
0000f15: 0a                                        ; string length
0000f16: 6933 3278 342e 6765 5f73                 i32x4.ge_s  ; export name
0000f20: 00                                        ; export kind
0000f21: f601                                      ; export func index
0000f23: 0a                                        ; string length
0000f24: 6933 3278 342e 6765 5f75                 i32x4.ge_u  ; export name
0000f2e: 00                                        ; export kind
0000f2f: f701                                      ; export func index
0000f31: 08                                        ; string length
0000f32: 6633 3278 342e 6571                      f32x4.eq  ; export name
0000f3a: 00                                        ; export kind
0000f3b: f801                                      ; export func index
0000f3d: 08                                        ; string length
0000f3e: 6633 3278 342e 6e65                      f32x4.ne  ; export name
0000f46: 00                                        ; export kind
0000f47: f901                                      ; export func index
0000f49: 08                                        ; string length
0000f4a: 6633 3278 342e 6c74                      f32x4.lt  ; export name
0000f52: 00                                        ; export kind
0000f53: fa01                                      ; export func index
0000f55: 08                                        ; string length
0000f56: 6633 3278 342e 6774                      f32x4.gt  ; export name
0000f5e: 00                                        ; export kind
0000f5f: fb01                                      ; export func index
0000f61: 08                                        ; string length
0000f62: 6633 3278 342e 6c65                      f32x4.le  ; export name
0000f6a: 00                                        ; export kind
0000f6b: fc01                                      ; export func index
0000f6d: 08                                        ; string length
0000f6e: 6633 3278 342e 6765                      f32x4.ge  ; export name
0000f76: 00                                        ; export kind
0000f77: fd01                                      ; export func index
0000f79: 08                                        ; string length
0000f7a: 6636 3478 322e 6571                      f64x2.eq  ; export name
0000f82: 00                                        ; export kind
0000f83: fe01                                      ; export func index
0000f85: 08                                        ; string length
0000f86: 6636 3478 322e 6e65                      f64x2.ne  ; export name
0000f8e: 00                                        ; export kind
0000f8f: ff01                                      ; export func index
0000f91: 08                                        ; string length
0000f92: 6636 3478 322e 6c74                      f64x2.lt  ; export name
0000f9a: 00                                        ; export kind
0000f9b: 8002                                      ; export func index
0000f9d: 08                                        ; string length
0000f9e: 6636 3478 322e 6774                      f64x2.gt  ; export name
0000fa6: 00                                        ; export kind
0000fa7: 8102                                      ; export func index
0000fa9: 08                                        ; string length
0000faa: 6636 3478 322e 6c65                      f64x2.le  ; export name
0000fb2: 00                                        ; export kind
0000fb3: 8202                                      ; export func index
0000fb5: 08                                        ; string length
0000fb6: 6636 3478 322e 6765                      f64x2.ge  ; export name
0000fbe: 00                                        ; export kind
0000fbf: 8302                                      ; export func index
0000fc1: 08                                        ; string length
0000fc2: 7631 3238 2e6e 6f74                      v128.not  ; export name
0000fca: 00                                        ; export kind
0000fcb: 8402                                      ; export func index
0000fcd: 08                                        ; string length
0000fce: 7631 3238 2e61 6e64                      v128.and  ; export name
0000fd6: 00                                        ; export kind
0000fd7: 8502                                      ; export func index
0000fd9: 07                                        ; string length
0000fda: 7631 3238 2e6f 72                        v128.or  ; export name
0000fe1: 00                                        ; export kind
0000fe2: 8602                                      ; export func index
0000fe4: 08                                        ; string length
0000fe5: 7631 3238 2e78 6f72                      v128.xor  ; export name
0000fed: 00                                        ; export kind
0000fee: 8702                                      ; export func index
0000ff0: 0e                                        ; string length
0000ff1: 7631 3238 2e62 6974 7365 6c65 6374       v128.bitselect  ; export name
0000fff: 00                                        ; export kind
0001000: 8802                                      ; export func index
0001002: 09                                        ; string length
0001003: 6938 7831 362e 6e65 67                   i8x16.neg  ; export name
000100c: 00                                        ; export kind
000100d: 8902                                      ; export func index
000100f: 0e                                        ; string length
0001010: 6938 7831 362e 616e 795f 7472 7565       i8x16.any_true  ; export name
000101e: 00                                        ; export kind
000101f: 8a02                                      ; export func index
0001021: 0e                                        ; string length
0001022: 6938 7831 362e 616c 6c5f 7472 7565       i8x16.all_true  ; export name
0001030: 00                                        ; export kind
0001031: 8b02                                      ; export func index
0001033: 09                                        ; string length
0001034: 6938 7831 362e 7368 6c                   i8x16.shl  ; export name
000103d: 00                                        ; export kind
000103e: 8c02                                      ; export func index
0001040: 0b                                        ; string length
0001041: 6938 7831 362e 7368 725f 73              i8x16.shr_s  ; export name
000104c: 00                                        ; export kind
000104d: 8d02                                      ; export func index
000104f: 0b                                        ; string length
0001050: 6938 7831 362e 7368 725f 75              i8x16.shr_u  ; export name
000105b: 00                                        ; export kind
000105c: 8e02                                      ; export func index
000105e: 09                                        ; string length
000105f: 6938 7831 362e 6164 64                   i8x16.add  ; export name
0001068: 00                                        ; export kind
0001069: 8f02                                      ; export func index
000106b: 14                                        ; string length
000106c: 6938 7831 362e 6164 645f 7361 7475 7261  i8x16.add_satura
000107c: 7465 5f73                                te_s  ; export name
0001080: 00                                        ; export kind
0001081: 9002                                      ; export func index
0001083: 14                                        ; string length
0001084: 6938 7831 362e 6164 645f 7361 7475 7261  i8x16.add_satura
0001094: 7465 5f75                                te_u  ; export name
0001098: 00                                        ; export kind
0001099: 9102                                      ; export func index
000109b: 09                                        ; string length
000109c: 6938 7831 362e 7375 62                   i8x16.sub  ; export name
00010a5: 00                                        ; export kind
00010a6: 9202                                      ; export func index
00010a8: 14                                        ; string length
00010a9: 6938 7831 362e 7375 625f 7361 7475 7261  i8x16.sub_satura
00010b9: 7465 5f73                                te_s  ; export name
00010bd: 00                                        ; export kind
00010be: 9302                                      ; export func index
00010c0: 14                                        ; string length
00010c1: 6938 7831 362e 7375 625f 7361 7475 7261  i8x16.sub_satura
00010d1: 7465 5f75                                te_u  ; export name
00010d5: 00                                        ; export kind
00010d6: 9402                                      ; export func index
00010d8: 09                                        ; string length
00010d9: 6938 7831 362e 6d75 6c                   i8x16.mul  ; export name
00010e2: 00                                        ; export kind
00010e3: 9502                                      ; export func index
00010e5: 09                                        ; string length
00010e6: 6931 3678 382e 6e65 67                   i16x8.neg  ; export name
00010ef: 00                                        ; export kind
00010f0: 9602                                      ; export func index
00010f2: 0e                                        ; string length
00010f3: 6931 3678 382e 616e 795f 7472 7565       i16x8.any_true  ; export name
0001101: 00                                        ; export kind
0001102: 9702                                      ; export func index
0001104: 0e                                        ; string length
0001105: 6931 3678 382e 616c 6c5f 7472 7565       i16x8.all_true  ; export name
0001113: 00                                        ; export kind
0001114: 9802                                      ; export func index
0001116: 09                                        ; string length
0001117: 6931 3678 382e 7368 6c                   i16x8.shl  ; export name
0001120: 00                                        ; export kind
0001121: 9902                                      ; export func index
0001123: 0b                                        ; string length
0001124: 6931 3678 382e 7368 725f 73              i16x8.shr_s  ; export name
000112f: 00                                        ; export kind
0001130: 9a02                                      ; export func index
0001132: 0b                                        ; string length
0001133: 6931 3678 382e 7368 725f 75              i16x8.shr_u  ; export name
000113e: 00                                        ; export kind
000113f: 9b02                                      ; export func index
0001141: 09                                        ; string length
0001142: 6931 3678 382e 6164 64                   i16x8.add  ; export name
000114b: 00                                        ; export kind
000114c: 9c02                                      ; export func index
000114e: 14                                        ; string length
000114f: 6931 3678 382e 6164 645f 7361 7475 7261  i16x8.add_satura
000115f: 7465 5f73                                te_s  ; export name
0001163: 00                                        ; export kind
0001164: 9d02                                      ; export func index
0001166: 14                                        ; string length
0001167: 6931 3678 382e 6164 645f 7361 7475 7261  i16x8.add_satura
0001177: 7465 5f75                                te_u  ; export name
000117b: 00                                        ; export kind
000117c: 9e02                                      ; export func index
000117e: 09                                        ; string length
000117f: 6931 3678 382e 7375 62                   i16x8.sub  ; export name
0001188: 00                                        ; export kind
0001189: 9f02                                      ; export func index
000118b: 14                                        ; string length
000118c: 6931 3678 382e 7375 625f 7361 7475 7261  i16x8.sub_satura
000119c: 7465 5f73                                te_s  ; export name
00011a0: 00                                        ; export kind
00011a1: a002                                      ; export func index
00011a3: 14                                        ; string length
00011a4: 6931 3678 382e 7375 625f 7361 7475 7261  i16x8.sub_satura
00011b4: 7465 5f75                                te_u  ; export name
00011b8: 00                                        ; export kind
00011b9: a102                                      ; export func index
00011bb: 09                                        ; string length
00011bc: 6931 3678 382e 6d75 6c                   i16x8.mul  ; export name
00011c5: 00                                        ; export kind
00011c6: a202                                      ; export func index
00011c8: 09                                        ; string length
00011c9: 6933 3278 342e 6e65 67                   i32x4.neg  ; export name
00011d2: 00                                        ; export kind
00011d3: a302                                      ; export func index
00011d5: 0e                                        ; string length
00011d6: 6933 3278 342e 616e 795f 7472 7565       i32x4.any_true  ; export name
00011e4: 00                                        ; export kind
00011e5: a402                                      ; export func index
00011e7: 0e                                        ; string length
00011e8: 6933 3278 342e 616c 6c5f 7472 7565       i32x4.all_true  ; export name
00011f6: 00                                        ; export kind
00011f7: a502                                      ; export func index
00011f9: 09                                        ; string length
00011fa: 6933 3278 342e 7368 6c                   i32x4.shl  ; export name
0001203: 00                                        ; export kind
0001204: a602                                      ; export func index
0001206: 0b                                        ; string length
0001207: 6933 3278 342e 7368 725f 73              i32x4.shr_s  ; export name
0001212: 00                                        ; export kind
0001213: a702                                      ; export func index
0001215: 0b                                        ; string length
0001216: 6933 3278 342e 7368 725f 75              i32x4.shr_u  ; export name
0001221: 00                                        ; export kind
0001222: a802                                      ; export func index
0001224: 09                                        ; string length
0001225: 6933 3278 342e 6164 64                   i32x4.add  ; export name
000122e: 00                                        ; export kind
000122f: a902                                      ; export func index
0001231: 09                                        ; string length
0001232: 6933 3278 342e 7375 62                   i32x4.sub  ; export name
000123b: 00                                        ; export kind
000123c: aa02                                      ; export func index
000123e: 09                                        ; string length
000123f: 6933 3278 342e 6d75 6c                   i32x4.mul  ; export name
0001248: 00                                        ; export kind
0001249: ab02                                      ; export func index
000124b: 09                                        ; string length
000124c: 6936 3478 322e 6e65 67                   i64x2.neg  ; export name
0001255: 00                                        ; export kind
0001256: ac02                                      ; export func index
0001258: 0e                                        ; string length
0001259: 6936 3478 322e 616e 795f 7472 7565       i64x2.any_true  ; export name
0001267: 00                                        ; export kind
0001268: ad02                                      ; export func index
000126a: 0e                                        ; string length
000126b: 6936 3478 322e 616c 6c5f 7472 7565       i64x2.all_true  ; export name
0001279: 00                                        ; export kind
000127a: ae02                                      ; export func index
000127c: 09                                        ; string length
000127d: 6936 3478 322e 7368 6c                   i64x2.shl  ; export name
0001286: 00                                        ; export kind
0001287: af02                                      ; export func index
0001289: 0b                                        ; string length
000128a: 6936 3478 322e 7368 725f 73              i64x2.shr_s  ; export name
0001295: 00                                        ; export kind
0001296: b002                                      ; export func index
0001298: 0b                                        ; string length
0001299: 6936 3478 322e 7368 725f 75              i64x2.shr_u  ; export name
00012a4: 00                                        ; export kind
00012a5: b102                                      ; export func index
00012a7: 09                                        ; string length
00012a8: 6936 3478 322e 6164 64                   i64x2.add  ; export name
00012b1: 00                                        ; export kind
00012b2: b202                                      ; export func index
00012b4: 09                                        ; string length
00012b5: 6936 3478 322e 7375 62                   i64x2.sub  ; export name
00012be: 00                                        ; export kind
00012bf: b302                                      ; export func index
00012c1: 09                                        ; string length
00012c2: 6633 3278 342e 6162 73                   f32x4.abs  ; export name
00012cb: 00                                        ; export kind
00012cc: b402                                      ; export func index
00012ce: 09                                        ; string length
00012cf: 6633 3278 342e 6e65 67                   f32x4.neg  ; export name
00012d8: 00                                        ; export kind
00012d9: b502                                      ; export func index
00012db: 0a                                        ; string length
00012dc: 6633 3278 342e 7371 7274                 f32x4.sqrt  ; export name
00012e6: 00                                        ; export kind
00012e7: b602                                      ; export func index
00012e9: 09                                        ; string length
00012ea: 6633 3278 342e 6164 64                   f32x4.add  ; export name
00012f3: 00                                        ; export kind
00012f4: b702                                      ; export func index
00012f6: 09                                        ; string length
00012f7: 6633 3278 342e 7375 62                   f32x4.sub  ; export name
0001300: 00                                        ; export kind
0001301: b802                                      ; export func index
0001303: 09                                        ; string length
0001304: 6633 3278 342e 6d75 6c                   f32x4.mul  ; export name
000130d: 00                                        ; export kind
000130e: b902                                      ; export func index
0001310: 09                                        ; string length
0001311: 6633 3278 342e 6469 76                   f32x4.div  ; export name
000131a: 00                                        ; export kind
000131b: ba02                                      ; export func index
000131d: 09                                        ; string length
000131e: 6633 3278 342e 6d69 6e                   f32x4.min  ; export name
0001327: 00                                        ; export kind
0001328: bb02                                      ; export func index
000132a: 09                                        ; string length
000132b: 6633 3278 342e 6d61 78                   f32x4.max  ; export name
0001334: 00                                        ; export kind
0001335: bc02                                      ; export func index
0001337: 09                                        ; string length
0001338: 6636 3478 322e 6162 73                   f64x2.abs  ; export name
0001341: 00                                        ; export kind
0001342: bd02                                      ; export func index
0001344: 09                                        ; string length
0001345: 6636 3478 322e 6e65 67                   f64x2.neg  ; export name
000134e: 00                                        ; export kind
000134f: be02                                      ; export func index
0001351: 0a                                        ; string length
0001352: 6636 3478 322e 7371 7274                 f64x2.sqrt  ; export name
000135c: 00                                        ; export kind
000135d: bf02                                      ; export func index
000135f: 09                                        ; string length
0001360: 6636 3478 322e 6164 64                   f64x2.add  ; export name
0001369: 00                                        ; export kind
000136a: c002                                      ; export func index
000136c: 09                                        ; string length
000136d: 6636 3478 322e 7375 62                   f64x2.sub  ; export name
0001376: 00                                        ; export kind
0001377: c102                                      ; export func index
0001379: 09                                        ; string length
000137a: 6636 3478 322e 6d75 6c                   f64x2.mul  ; export name
0001383: 00                                        ; export kind
0001384: c202                                      ; export func index
0001386: 09                                        ; string length
0001387: 6636 3478 322e 6469 76                   f64x2.div  ; export name
0001390: 00                                        ; export kind
0001391: c302                                      ; export func index
0001393: 09                                        ; string length
0001394: 6636 3478 322e 6d69 6e                   f64x2.min  ; export name
000139d: 00                                        ; export kind
000139e: c402                                      ; export func index
00013a0: 09                                        ; string length
00013a1: 6636 3478 322e 6d61 78                   f64x2.max  ; export name
00013aa: 00                                        ; export kind
00013ab: c502                                      ; export func index
00013ad: 17                                        ; string length
00013ae: 6933 3278 342e 7472 756e 635f 7361 745f  i32x4.trunc_sat_
00013be: 6633 3278 345f 73                        f32x4_s  ; export name
00013c5: 00                                        ; export kind
00013c6: c602                                      ; export func index
00013c8: 17                                        ; string length
00013c9: 6933 3278 342e 7472 756e 635f 7361 745f  i32x4.trunc_sat_
00013d9: 6633 3278 345f 75                        f32x4_u  ; export name
00013e0: 00                                        ; export kind
00013e1: c702                                      ; export func index
00013e3: 17                                        ; string length
00013e4: 6936 3478 322e 7472 756e 635f 7361 745f  i64x2.trunc_sat_
00013f4: 6636 3478 325f 73                        f64x2_s  ; export name
00013fb: 00                                        ; export kind
00013fc: c802                                      ; export func index
00013fe: 17                                        ; string length
00013ff: 6936 3478 322e 7472 756e 635f 7361 745f  i64x2.trunc_sat_
000140f: 6636 3478 325f 75                        f64x2_u  ; export name
0001416: 00                                        ; export kind
0001417: c902                                      ; export func index
0001419: 15                                        ; string length
000141a: 6633 3278 342e 636f 6e76 6572 745f 6933  f32x4.convert_i3
000142a: 3278 345f 73                             2x4_s  ; export name
000142f: 00                                        ; export kind
0001430: ca02                                      ; export func index
0001432: 15                                        ; string length
0001433: 6633 3278 342e 636f 6e76 6572 745f 6933  f32x4.convert_i3
0001443: 3278 345f 75                             2x4_u  ; export name
0001448: 00                                        ; export kind
0001449: cb02                                      ; export func index
000144b: 15                                        ; string length
000144c: 6636 3478 322e 636f 6e76 6572 745f 6936  f64x2.convert_i6
000145c: 3478 325f 73                             4x2_s  ; export name
0001461: 00                                        ; export kind
0001462: cc02                                      ; export func index
0001464: 15                                        ; string length
0001465: 6636 3478 322e 636f 6e76 6572 745f 6936  f64x2.convert_i6
0001475: 3478 325f 75                             4x2_u  ; export name
000147a: 00                                        ; export kind
000147b: cd02                                      ; export func index
000147d: 0d                                        ; string length
000147e: 7638 7831 362e 7377 697a 7a6c 65         v8x16.swizzle  ; export name
000148b: 00                                        ; export kind
000148c: ce02                                      ; export func index
000148e: 0d                                        ; string length
000148f: 7638 7831 362e 7368 7566 666c 65         v8x16.shuffle  ; export name
000149c: 00                                        ; export kind
000149d: cf02                                      ; export func index
000149f: 10                                        ; string length
00014a0: 6938 7831 362e 6c6f 6164 5f73 706c 6174  i8x16.load_splat  ; export name
00014b0: 00                                        ; export kind
00014b1: d002                                      ; export func index
00014b3: 10                                        ; string length
00014b4: 6931 3678 382e 6c6f 6164 5f73 706c 6174  i16x8.load_splat  ; export name
00014c4: 00                                        ; export kind
00014c5: d102                                      ; export func index
00014c7: 10                                        ; string length
00014c8: 6933 3278 342e 6c6f 6164 5f73 706c 6174  i32x4.load_splat  ; export name
00014d8: 00                                        ; export kind
00014d9: d202                                      ; export func index
00014db: 10                                        ; string length
00014dc: 6936 3478 322e 6c6f 6164 5f73 706c 6174  i64x2.load_splat  ; export name
00014ec: 00                                        ; export kind
00014ed: d302                                      ; export func index
00014ef: 0d                                        ; string length
00014f0: 6174 6f6d 6963 2e6e 6f74 6966 79         atomic.notify  ; export name
00014fd: 00                                        ; export kind
00014fe: d402                                      ; export func index
0001500: 0f                                        ; string length
0001501: 6933 322e 6174 6f6d 6963 2e77 6169 74    i32.atomic.wait  ; export name
0001510: 00                                        ; export kind
0001511: d502                                      ; export func index
0001513: 0f                                        ; string length
0001514: 6936 342e 6174 6f6d 6963 2e77 6169 74    i64.atomic.wait  ; export name
0001523: 00                                        ; export kind
0001524: d602                                      ; export func index
0001526: 0f                                        ; string length
0001527: 6933 322e 6174 6f6d 6963 2e6c 6f61 64    i32.atomic.load  ; export name
0001536: 00                                        ; export kind
0001537: d702                                      ; export func index
0001539: 0f                                        ; string length
000153a: 6936 342e 6174 6f6d 6963 2e6c 6f61 64    i64.atomic.load  ; export name
0001549: 00                                        ; export kind
000154a: d802                                      ; export func index
000154c: 12                                        ; string length
000154d: 6933 322e 6174 6f6d 6963 2e6c 6f61 6438  i32.atomic.load8
000155d: 5f75                                     _u  ; export name
000155f: 00                                        ; export kind
0001560: d902                                      ; export func index
0001562: 13                                        ; string length
0001563: 6933 322e 6174 6f6d 6963 2e6c 6f61 6431  i32.atomic.load1
0001573: 365f 75                                  6_u  ; export name
0001576: 00                                        ; export kind
0001577: da02                                      ; export func index
0001579: 12                                        ; string length
000157a: 6936 342e 6174 6f6d 6963 2e6c 6f61 6438  i64.atomic.load8
000158a: 5f75                                     _u  ; export name
000158c: 00                                        ; export kind
000158d: db02                                      ; export func index
000158f: 13                                        ; string length
0001590: 6936 342e 6174 6f6d 6963 2e6c 6f61 6431  i64.atomic.load1
00015a0: 365f 75                                  6_u  ; export name
00015a3: 00                                        ; export kind
00015a4: dc02                                      ; export func index
00015a6: 13                                        ; string length
00015a7: 6936 342e 6174 6f6d 6963 2e6c 6f61 6433  i64.atomic.load3
00015b7: 325f 75                                  2_u  ; export name
00015ba: 00                                        ; export kind
00015bb: dd02                                      ; export func index
00015bd: 10                                        ; string length
00015be: 6933 322e 6174 6f6d 6963 2e73 746f 7265  i32.atomic.store  ; export name
00015ce: 00                                        ; export kind
00015cf: de02                                      ; export func index
00015d1: 10                                        ; string length
00015d2: 6936 342e 6174 6f6d 6963 2e73 746f 7265  i64.atomic.store  ; export name
00015e2: 00                                        ; export kind
00015e3: df02                                      ; export func index
00015e5: 11                                        ; string length
00015e6: 6933 322e 6174 6f6d 6963 2e73 746f 7265  i32.atomic.store
00015f6: 38                                       8  ; export name
00015f7: 00                                        ; export kind
00015f8: e002                                      ; export func index
00015fa: 12                                        ; string length
00015fb: 6933 322e 6174 6f6d 6963 2e73 746f 7265  i32.atomic.store
000160b: 3136                                     16  ; export name
000160d: 00                                        ; export kind
000160e: e102                                      ; export func index
0001610: 11                                        ; string length
0001611: 6936 342e 6174 6f6d 6963 2e73 746f 7265  i64.atomic.store
0001621: 38                                       8  ; export name
0001622: 00                                        ; export kind
0001623: e202                                      ; export func index
0001625: 12                                        ; string length
0001626: 6936 342e 6174 6f6d 6963 2e73 746f 7265  i64.atomic.store
0001636: 3136                                     16  ; export name
0001638: 00                                        ; export kind
0001639: e302                                      ; export func index
000163b: 12                                        ; string length
000163c: 6936 342e 6174 6f6d 6963 2e73 746f 7265  i64.atomic.store
000164c: 3332                                     32  ; export name
000164e: 00                                        ; export kind
000164f: e402                                      ; export func index
0001651: 12                                        ; string length
0001652: 6933 322e 6174 6f6d 6963 2e72 6d77 2e61  i32.atomic.rmw.a
0001662: 6464                                     dd  ; export name
0001664: 00                                        ; export kind
0001665: e502                                      ; export func index
0001667: 12                                        ; string length
0001668: 6936 342e 6174 6f6d 6963 2e72 6d77 2e61  i64.atomic.rmw.a
0001678: 6464                                     dd  ; export name
000167a: 00                                        ; export kind
000167b: e602                                      ; export func index
000167d: 15                                        ; string length
000167e: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
000168e: 6164 645f 75                             add_u  ; export name
0001693: 00                                        ; export kind
0001694: e702                                      ; export func index
0001696: 16                                        ; string length
0001697: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
00016a7: 2e61 6464 5f75                           .add_u  ; export name
00016ad: 00                                        ; export kind
00016ae: e802                                      ; export func index
00016b0: 15                                        ; string length
00016b1: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
00016c1: 6164 645f 75                             add_u  ; export name
00016c6: 00                                        ; export kind
00016c7: e902                                      ; export func index
00016c9: 16                                        ; string length
00016ca: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
00016da: 2e61 6464 5f75                           .add_u  ; export name
00016e0: 00                                        ; export kind
00016e1: ea02                                      ; export func index
00016e3: 16                                        ; string length
00016e4: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
00016f4: 2e61 6464 5f75                           .add_u  ; export name
00016fa: 00                                        ; export kind
00016fb: eb02                                      ; export func index
00016fd: 12                                        ; string length
00016fe: 6933 322e 6174 6f6d 6963 2e72 6d77 2e73  i32.atomic.rmw.s
000170e: 7562                                     ub  ; export name
0001710: 00                                        ; export kind
0001711: ec02                                      ; export func index
0001713: 12                                        ; string length
0001714: 6936 342e 6174 6f6d 6963 2e72 6d77 2e73  i64.atomic.rmw.s
0001724: 7562                                     ub  ; export name
0001726: 00                                        ; export kind
0001727: ed02                                      ; export func index
0001729: 15                                        ; string length
000172a: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
000173a: 7375 625f 75                             sub_u  ; export name
000173f: 00                                        ; export kind
0001740: ee02                                      ; export func index
0001742: 16                                        ; string length
0001743: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0001753: 2e73 7562 5f75                           .sub_u  ; export name
0001759: 00                                        ; export kind
000175a: ef02                                      ; export func index
000175c: 15                                        ; string length
000175d: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
000176d: 7375 625f 75                             sub_u  ; export name
0001772: 00                                        ; export kind
0001773: f002                                      ; export func index
0001775: 16                                        ; string length
0001776: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0001786: 2e73 7562 5f75                           .sub_u  ; export name
000178c: 00                                        ; export kind
000178d: f102                                      ; export func index
000178f: 16                                        ; string length
0001790: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
00017a0: 2e73 7562 5f75                           .sub_u  ; export name
00017a6: 00                                        ; export kind
00017a7: f202                                      ; export func index
00017a9: 12                                        ; string length
00017aa: 6933 322e 6174 6f6d 6963 2e72 6d77 2e61  i32.atomic.rmw.a
00017ba: 6e64                                     nd  ; export name
00017bc: 00                                        ; export kind
00017bd: f302                                      ; export func index
00017bf: 12                                        ; string length
00017c0: 6936 342e 6174 6f6d 6963 2e72 6d77 2e61  i64.atomic.rmw.a
00017d0: 6e64                                     nd  ; export name
00017d2: 00                                        ; export kind
00017d3: f402                                      ; export func index
00017d5: 15                                        ; string length
00017d6: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
00017e6: 616e 645f 75                             and_u  ; export name
00017eb: 00                                        ; export kind
00017ec: f502                                      ; export func index
00017ee: 16                                        ; string length
00017ef: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
00017ff: 2e61 6e64 5f75                           .and_u  ; export name
0001805: 00                                        ; export kind
0001806: f602                                      ; export func index
0001808: 15                                        ; string length
0001809: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
0001819: 616e 645f 75                             and_u  ; export name
000181e: 00                                        ; export kind
000181f: f702                                      ; export func index
0001821: 16                                        ; string length
0001822: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0001832: 2e61 6e64 5f75                           .and_u  ; export name
0001838: 00                                        ; export kind
0001839: f802                                      ; export func index
000183b: 16                                        ; string length
000183c: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
000184c: 2e61 6e64 5f75                           .and_u  ; export name
0001852: 00                                        ; export kind
0001853: f902                                      ; export func index
0001855: 11                                        ; string length
0001856: 6933 322e 6174 6f6d 6963 2e72 6d77 2e6f  i32.atomic.rmw.o
0001866: 72                                       r  ; export name
0001867: 00                                        ; export kind
0001868: fa02                                      ; export func index
000186a: 11                                        ; string length
000186b: 6936 342e 6174 6f6d 6963 2e72 6d77 2e6f  i64.atomic.rmw.o
000187b: 72                                       r  ; export name
000187c: 00                                        ; export kind
000187d: fb02                                      ; export func index
000187f: 14                                        ; string length
0001880: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
0001890: 6f72 5f75                                or_u  ; export name
0001894: 00                                        ; export kind
0001895: fc02                                      ; export func index
0001897: 15                                        ; string length
0001898: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
00018a8: 2e6f 725f 75                             .or_u  ; export name
00018ad: 00                                        ; export kind
00018ae: fd02                                      ; export func index
00018b0: 14                                        ; string length
00018b1: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
00018c1: 6f72 5f75                                or_u  ; export name
00018c5: 00                                        ; export kind
00018c6: fe02                                      ; export func index
00018c8: 15                                        ; string length
00018c9: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
00018d9: 2e6f 725f 75                             .or_u  ; export name
00018de: 00                                        ; export kind
00018df: ff02                                      ; export func index
00018e1: 15                                        ; string length
00018e2: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
00018f2: 2e6f 725f 75                             .or_u  ; export name
00018f7: 00                                        ; export kind
00018f8: 8003                                      ; export func index
00018fa: 12                                        ; string length
00018fb: 6933 322e 6174 6f6d 6963 2e72 6d77 2e78  i32.atomic.rmw.x
000190b: 6f72                                     or  ; export name
000190d: 00                                        ; export kind
000190e: 8103                                      ; export func index
0001910: 12                                        ; string length
0001911: 6936 342e 6174 6f6d 6963 2e72 6d77 2e78  i64.atomic.rmw.x
0001921: 6f72                                     or  ; export name
0001923: 00                                        ; export kind
0001924: 8203                                      ; export func index
0001926: 15                                        ; string length
0001927: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
0001937: 786f 725f 75                             xor_u  ; export name
000193c: 00                                        ; export kind
000193d: 8303                                      ; export func index
000193f: 16                                        ; string length
0001940: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0001950: 2e78 6f72 5f75                           .xor_u  ; export name
0001956: 00                                        ; export kind
0001957: 8403                                      ; export func index
0001959: 15                                        ; string length
000195a: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
000196a: 786f 725f 75                             xor_u  ; export name
000196f: 00                                        ; export kind
0001970: 8503                                      ; export func index
0001972: 16                                        ; string length
0001973: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0001983: 2e78 6f72 5f75                           .xor_u  ; export name
0001989: 00                                        ; export kind
000198a: 8603                                      ; export func index
000198c: 16                                        ; string length
000198d: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
000199d: 2e78 6f72 5f75                           .xor_u  ; export name
00019a3: 00                                        ; export kind
00019a4: 8703                                      ; export func index
00019a6: 13                                        ; string length
00019a7: 6933 322e 6174 6f6d 6963 2e72 6d77 2e78  i32.atomic.rmw.x
00019b7: 6368 67                                  chg  ; export name
00019ba: 00                                        ; export kind
00019bb: 8803                                      ; export func index
00019bd: 13                                        ; string length
00019be: 6936 342e 6174 6f6d 6963 2e72 6d77 2e78  i64.atomic.rmw.x
00019ce: 6368 67                                  chg  ; export name
00019d1: 00                                        ; export kind
00019d2: 8903                                      ; export func index
00019d4: 16                                        ; string length
00019d5: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
00019e5: 7863 6867 5f75                           xchg_u  ; export name
00019eb: 00                                        ; export kind
00019ec: 8a03                                      ; export func index
00019ee: 17                                        ; string length
00019ef: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
00019ff: 2e78 6368 675f 75                        .xchg_u  ; export name
0001a06: 00                                        ; export kind
0001a07: 8b03                                      ; export func index
0001a09: 16                                        ; string length
0001a0a: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
0001a1a: 7863 6867 5f75                           xchg_u  ; export name
0001a20: 00                                        ; export kind
0001a21: 8c03                                      ; export func index
0001a23: 17                                        ; string length
0001a24: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0001a34: 2e78 6368 675f 75                        .xchg_u  ; export name
0001a3b: 00                                        ; export kind
0001a3c: 8d03                                      ; export func index
0001a3e: 17                                        ; string length
0001a3f: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0001a4f: 2e78 6368 675f 75                        .xchg_u  ; export name
0001a56: 00                                        ; export kind
0001a57: 8e03                                      ; export func index
0001a59: 16                                        ; string length
0001a5a: 6933 322e 6174 6f6d 6963 2e72 6d77 2e63  i32.atomic.rmw.c
0001a6a: 6d70 7863 6867                           mpxchg  ; export name
0001a70: 00                                        ; export kind
0001a71: 8f03                                      ; export func index
0001a73: 16                                        ; string length
0001a74: 6936 342e 6174 6f6d 6963 2e72 6d77 2e63  i64.atomic.rmw.c
0001a84: 6d70 7863 6867                           mpxchg  ; export name
0001a8a: 00                                        ; export kind
0001a8b: 9003                                      ; export func index
0001a8d: 19                                        ; string length
0001a8e: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
0001a9e: 636d 7078 6368 675f 75                   cmpxchg_u  ; export name
0001aa7: 00                                        ; export kind
0001aa8: 9103                                      ; export func index
0001aaa: 1a                                        ; string length
0001aab: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0001abb: 2e63 6d70 7863 6867 5f75                 .cmpxchg_u  ; export name
0001ac5: 00                                        ; export kind
0001ac6: 9203                                      ; export func index
0001ac8: 19                                        ; string length
0001ac9: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
0001ad9: 636d 7078 6368 675f 75                   cmpxchg_u  ; export name
0001ae2: 00                                        ; export kind
0001ae3: 9303                                      ; export func index
0001ae5: 1a                                        ; string length
0001ae6: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0001af6: 2e63 6d70 7863 6867 5f75                 .cmpxchg_u  ; export name
0001b00: 00                                        ; export kind
0001b01: 9403                                      ; export func index
0001b03: 1a                                        ; string length
0001b04: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0001b14: 2e63 6d70 7863 6867 5f75                 .cmpxchg_u  ; export name
0001b1e: 00                                        ; export kind
0001b1f: 9503                                      ; export func index
; move data: [1d3, 1b21) -> [1d4, 1b22)
00001d2: ce32                                      ; FIXUP section size
; section "Elem" (9)
0001b22: 09                                        ; section code
0001b23: 00                                        ; section size (guess)
0001b24: 02                                        ; num elem segments
; elem segment header 0
0001b25: 00                                        ; segment flags
0001b26: 41                                        ; i32.const
0001b27: 00                                        ; i32 literal
0001b28: 0b                                        ; end
0001b29: 02                                        ; num elems
0001b2a: 01                                        ; elem function index
0001b2b: 01                                        ; elem function index
; elem segment header 1
0001b2c: 05                                        ; segment flags
0001b2d: 70                                        ; elem expr list type
0001b2e: 00                                        ; num elems
0001b23: 0b                                        ; FIXUP section size
; section "DataCount" (12)
0001b2f: 0c                                        ; section code
0001b30: 00                                        ; section size (guess)
0001b31: 01                                        ; data count
0001b30: 01                                        ; FIXUP section size
; section "Code" (10)
0001b32: 0a                                        ; section code
0001b33: 00                                        ; section size (guess)
0001b34: 9503                                      ; num functions
; function body 0
0001b36: 00                                        ; func body size (guess)
0001b37: 00                                        ; local decl count
0001b38: 0b                                        ; end
0001b36: 02                                        ; FIXUP func body size
; function body 1
0001b39: 00                                        ; func body size (guess)
0001b3a: 00                                        ; local decl count
0001b3b: 00                                        ; unreachable
0001b3c: 0b                                        ; end
0001b39: 03                                        ; FIXUP func body size
; function body 2
0001b3d: 00                                        ; func body size (guess)
0001b3e: 00                                        ; local decl count
0001b3f: 0c                                        ; br
0001b40: 00                                        ; break depth
0001b41: 0b                                        ; end
0001b3d: 04                                        ; FIXUP func body size
; function body 3
0001b42: 00                                        ; func body size (guess)
0001b43: 00                                        ; local decl count
0001b44: 41                                        ; i32.const
0001b45: 01                                        ; i32 literal
0001b46: 0e                                        ; br_table
0001b47: 00                                        ; num targets
0001b48: 00                                        ; break depth for default
0001b49: 0b                                        ; end
0001b42: 07                                        ; FIXUP func body size
; function body 4
0001b4a: 00                                        ; func body size (guess)
0001b4b: 00                                        ; local decl count
0001b4c: 0f                                        ; return
0001b4d: 0b                                        ; end
0001b4a: 03                                        ; FIXUP func body size
; function body 5
0001b4e: 00                                        ; func body size (guess)
0001b4f: 00                                        ; local decl count
0001b50: 10                                        ; call
0001b51: 01                                        ; function index
0001b52: 0b                                        ; end
0001b4e: 04                                        ; FIXUP func body size
; function body 6
0001b53: 00                                        ; func body size (guess)
0001b54: 00                                        ; local decl count
0001b55: 41                                        ; i32.const
0001b56: 01                                        ; i32 literal
0001b57: 11                                        ; call_indirect
0001b58: 00                                        ; signature index
0001b59: 00                                        ; table index
0001b5a: 0b                                        ; end
0001b53: 07                                        ; FIXUP func body size
; function body 7
0001b5b: 00                                        ; func body size (guess)
0001b5c: 00                                        ; local decl count
0001b5d: 12                                        ; return_call
0001b5e: 01                                        ; function index
0001b5f: 0b                                        ; end
0001b5b: 04                                        ; FIXUP func body size
; function body 8
0001b60: 00                                        ; func body size (guess)
0001b61: 00                                        ; local decl count
0001b62: 41                                        ; i32.const
0001b63: 01                                        ; i32 literal
0001b64: 13                                        ; return_call_indirect
0001b65: 00                                        ; signature index
0001b66: 00                                        ; table index
0001b67: 0b                                        ; end
0001b60: 07                                        ; FIXUP func body size
; function body 9
0001b68: 00                                        ; func body size (guess)
0001b69: 00                                        ; local decl count
0001b6a: 41                                        ; i32.const
0001b6b: 01                                        ; i32 literal
0001b6c: 1a                                        ; drop
0001b6d: 0b                                        ; end
0001b68: 05                                        ; FIXUP func body size
; function body 10
0001b6e: 00                                        ; func body size (guess)
0001b6f: 00                                        ; local decl count
0001b70: 41                                        ; i32.const
0001b71: 01                                        ; i32 literal
0001b72: 41                                        ; i32.const
0001b73: 02                                        ; i32 literal
0001b74: 41                                        ; i32.const
0001b75: 03                                        ; i32 literal
0001b76: 1b                                        ; select
0001b77: 1a                                        ; drop
0001b78: 0b                                        ; end
0001b6e: 0a                                        ; FIXUP func body size
; function body 11
0001b79: 00                                        ; func body size (guess)
0001b7a: 00                                        ; local decl count
0001b7b: 41                                        ; i32.const
0001b7c: 01                                        ; i32 literal
0001b7d: 41                                        ; i32.const
0001b7e: 02                                        ; i32 literal
0001b7f: 41                                        ; i32.const
0001b80: 03                                        ; i32 literal
0001b81: 1c                                        ; select
0001b82: 01                                        ; num result types
0001b83: 7f                                        ; result type
0001b84: 1a                                        ; drop
0001b85: 0b                                        ; end
0001b79: 0c                                        ; FIXUP func body size
; function body 12
0001b86: 00                                        ; func body size (guess)
0001b87: 01                                        ; local decl count
0001b88: 01                                        ; local type count
0001b89: 7f                                        ; i32
0001b8a: 20                                        ; local.get
0001b8b: 00                                        ; local index
0001b8c: 1a                                        ; drop
0001b8d: 0b                                        ; end
0001b86: 07                                        ; FIXUP func body size
; function body 13
0001b8e: 00                                        ; func body size (guess)
0001b8f: 01                                        ; local decl count
0001b90: 01                                        ; local type count
0001b91: 7f                                        ; i32
0001b92: 41                                        ; i32.const
0001b93: 01                                        ; i32 literal
0001b94: 21                                        ; local.set
0001b95: 00                                        ; local index
0001b96: 0b                                        ; end
0001b8e: 08                                        ; FIXUP func body size
; function body 14
0001b97: 00                                        ; func body size (guess)
0001b98: 01                                        ; local decl count
0001b99: 01                                        ; local type count
0001b9a: 7f                                        ; i32
0001b9b: 41                                        ; i32.const
0001b9c: 01                                        ; i32 literal
0001b9d: 22                                        ; local.tee
0001b9e: 00                                        ; local index
0001b9f: 1a                                        ; drop
0001ba0: 0b                                        ; end
0001b97: 09                                        ; FIXUP func body size
; function body 15
0001ba1: 00                                        ; func body size (guess)
0001ba2: 00                                        ; local decl count
0001ba3: 23                                        ; global.get
0001ba4: 00                                        ; global index
0001ba5: 1a                                        ; drop
0001ba6: 0b                                        ; end
0001ba1: 05                                        ; FIXUP func body size
; function body 16
0001ba7: 00                                        ; func body size (guess)
0001ba8: 00                                        ; local decl count
0001ba9: 41                                        ; i32.const
0001baa: 01                                        ; i32 literal
0001bab: 24                                        ; global.set
0001bac: 00                                        ; global index
0001bad: 0b                                        ; end
0001ba7: 06                                        ; FIXUP func body size
; function body 17
0001bae: 00                                        ; func body size (guess)
0001baf: 00                                        ; local decl count
0001bb0: 41                                        ; i32.const
0001bb1: 01                                        ; i32 literal
0001bb2: 28                                        ; i32.load
0001bb3: 02                                        ; alignment
0001bb4: 02                                        ; load offset
0001bb5: 1a                                        ; drop
0001bb6: 0b                                        ; end
0001bae: 08                                        ; FIXUP func body size
; function body 18
0001bb7: 00                                        ; func body size (guess)
0001bb8: 00                                        ; local decl count
0001bb9: 41                                        ; i32.const
0001bba: 01                                        ; i32 literal
0001bbb: 29                                        ; i64.load
0001bbc: 03                                        ; alignment
0001bbd: 02                                        ; load offset
0001bbe: 1a                                        ; drop
0001bbf: 0b                                        ; end
0001bb7: 08                                        ; FIXUP func body size
; function body 19
0001bc0: 00                                        ; func body size (guess)
0001bc1: 00                                        ; local decl count
0001bc2: 41                                        ; i32.const
0001bc3: 01                                        ; i32 literal
0001bc4: 2a                                        ; f32.load
0001bc5: 02                                        ; alignment
0001bc6: 02                                        ; load offset
0001bc7: 1a                                        ; drop
0001bc8: 0b                                        ; end
0001bc0: 08                                        ; FIXUP func body size
; function body 20
0001bc9: 00                                        ; func body size (guess)
0001bca: 00                                        ; local decl count
0001bcb: 41                                        ; i32.const
0001bcc: 01                                        ; i32 literal
0001bcd: 2b                                        ; f64.load
0001bce: 03                                        ; alignment
0001bcf: 02                                        ; load offset
0001bd0: 1a                                        ; drop
0001bd1: 0b                                        ; end
0001bc9: 08                                        ; FIXUP func body size
; function body 21
0001bd2: 00                                        ; func body size (guess)
0001bd3: 00                                        ; local decl count
0001bd4: 41                                        ; i32.const
0001bd5: 01                                        ; i32 literal
0001bd6: 2c                                        ; i32.load8_s
0001bd7: 00                                        ; alignment
0001bd8: 02                                        ; load offset
0001bd9: 1a                                        ; drop
0001bda: 0b                                        ; end
0001bd2: 08                                        ; FIXUP func body size
; function body 22
0001bdb: 00                                        ; func body size (guess)
0001bdc: 00                                        ; local decl count
0001bdd: 41                                        ; i32.const
0001bde: 01                                        ; i32 literal
0001bdf: 2d                                        ; i32.load8_u
0001be0: 00                                        ; alignment
0001be1: 02                                        ; load offset
0001be2: 1a                                        ; drop
0001be3: 0b                                        ; end
0001bdb: 08                                        ; FIXUP func body size
; function body 23
0001be4: 00                                        ; func body size (guess)
0001be5: 00                                        ; local decl count
0001be6: 41                                        ; i32.const
0001be7: 01                                        ; i32 literal
0001be8: 2e                                        ; i32.load16_s
0001be9: 01                                        ; alignment
0001bea: 02                                        ; load offset
0001beb: 1a                                        ; drop
0001bec: 0b                                        ; end
0001be4: 08                                        ; FIXUP func body size
; function body 24
0001bed: 00                                        ; func body size (guess)
0001bee: 00                                        ; local decl count
0001bef: 41                                        ; i32.const
0001bf0: 01                                        ; i32 literal
0001bf1: 2f                                        ; i32.load16_u
0001bf2: 01                                        ; alignment
0001bf3: 02                                        ; load offset
0001bf4: 1a                                        ; drop
0001bf5: 0b                                        ; end
0001bed: 08                                        ; FIXUP func body size
; function body 25
0001bf6: 00                                        ; func body size (guess)
0001bf7: 00                                        ; local decl count
0001bf8: 41                                        ; i32.const
0001bf9: 01                                        ; i32 literal
0001bfa: 30                                        ; i64.load8_s
0001bfb: 00                                        ; alignment
0001bfc: 02                                        ; load offset
0001bfd: 1a                                        ; drop
0001bfe: 0b                                        ; end
0001bf6: 08                                        ; FIXUP func body size
; function body 26
0001bff: 00                                        ; func body size (guess)
0001c00: 00                                        ; local decl count
0001c01: 41                                        ; i32.const
0001c02: 01                                        ; i32 literal
0001c03: 31                                        ; i64.load8_u
0001c04: 00                                        ; alignment
0001c05: 02                                        ; load offset
0001c06: 1a                                        ; drop
0001c07: 0b                                        ; end
0001bff: 08                                        ; FIXUP func body size
; function body 27
0001c08: 00                                        ; func body size (guess)
0001c09: 00                                        ; local decl count
0001c0a: 41                                        ; i32.const
0001c0b: 01                                        ; i32 literal
0001c0c: 32                                        ; i64.load16_s
0001c0d: 01                                        ; alignment
0001c0e: 02                                        ; load offset
0001c0f: 1a                                        ; drop
0001c10: 0b                                        ; end
0001c08: 08                                        ; FIXUP func body size
; function body 28
0001c11: 00                                        ; func body size (guess)
0001c12: 00                                        ; local decl count
0001c13: 41                                        ; i32.const
0001c14: 01                                        ; i32 literal
0001c15: 33                                        ; i64.load16_u
0001c16: 01                                        ; alignment
0001c17: 02                                        ; load offset
0001c18: 1a                                        ; drop
0001c19: 0b                                        ; end
0001c11: 08                                        ; FIXUP func body size
; function body 29
0001c1a: 00                                        ; func body size (guess)
0001c1b: 00                                        ; local decl count
0001c1c: 41                                        ; i32.const
0001c1d: 01                                        ; i32 literal
0001c1e: 34                                        ; i64.load32_s
0001c1f: 02                                        ; alignment
0001c20: 02                                        ; load offset
0001c21: 1a                                        ; drop
0001c22: 0b                                        ; end
0001c1a: 08                                        ; FIXUP func body size
; function body 30
0001c23: 00                                        ; func body size (guess)
0001c24: 00                                        ; local decl count
0001c25: 41                                        ; i32.const
0001c26: 01                                        ; i32 literal
0001c27: 35                                        ; i64.load32_u
0001c28: 02                                        ; alignment
0001c29: 02                                        ; load offset
0001c2a: 1a                                        ; drop
0001c2b: 0b                                        ; end
0001c23: 08                                        ; FIXUP func body size
; function body 31
0001c2c: 00                                        ; func body size (guess)
0001c2d: 00                                        ; local decl count
0001c2e: 41                                        ; i32.const
0001c2f: 01                                        ; i32 literal
0001c30: 41                                        ; i32.const
0001c31: 02                                        ; i32 literal
0001c32: 36                                        ; i32.store
0001c33: 02                                        ; alignment
0001c34: 02                                        ; store offset
0001c35: 0b                                        ; end
0001c2c: 09                                        ; FIXUP func body size
; function body 32
0001c36: 00                                        ; func body size (guess)
0001c37: 00                                        ; local decl count
0001c38: 41                                        ; i32.const
0001c39: 01                                        ; i32 literal
0001c3a: 42                                        ; i64.const
0001c3b: 02                                        ; i64 literal
0001c3c: 37                                        ; i64.store
0001c3d: 03                                        ; alignment
0001c3e: 02                                        ; store offset
0001c3f: 0b                                        ; end
0001c36: 09                                        ; FIXUP func body size
; function body 33
0001c40: 00                                        ; func body size (guess)
0001c41: 00                                        ; local decl count
0001c42: 41                                        ; i32.const
0001c43: 01                                        ; i32 literal
0001c44: 43                                        ; f32.const
0001c45: 0000 0040                                 ; f32 literal
0001c49: 38                                        ; f32.store
0001c4a: 02                                        ; alignment
0001c4b: 02                                        ; store offset
0001c4c: 0b                                        ; end
0001c40: 0c                                        ; FIXUP func body size
; function body 34
0001c4d: 00                                        ; func body size (guess)
0001c4e: 00                                        ; local decl count
0001c4f: 41                                        ; i32.const
0001c50: 01                                        ; i32 literal
0001c51: 44                                        ; f64.const
0001c52: 0000 0000 0000 0040                       ; f64 literal
0001c5a: 39                                        ; f64.store
0001c5b: 03                                        ; alignment
0001c5c: 02                                        ; store offset
0001c5d: 0b                                        ; end
0001c4d: 10                                        ; FIXUP func body size
; function body 35
0001c5e: 00                                        ; func body size (guess)
0001c5f: 00                                        ; local decl count
0001c60: 41                                        ; i32.const
0001c61: 01                                        ; i32 literal
0001c62: 41                                        ; i32.const
0001c63: 02                                        ; i32 literal
0001c64: 3a                                        ; i32.store8
0001c65: 00                                        ; alignment
0001c66: 02                                        ; store offset
0001c67: 0b                                        ; end
0001c5e: 09                                        ; FIXUP func body size
; function body 36
0001c68: 00                                        ; func body size (guess)
0001c69: 00                                        ; local decl count
0001c6a: 41                                        ; i32.const
0001c6b: 01                                        ; i32 literal
0001c6c: 41                                        ; i32.const
0001c6d: 02                                        ; i32 literal
0001c6e: 3b                                        ; i32.store16
0001c6f: 01                                        ; alignment
0001c70: 02                                        ; store offset
0001c71: 0b                                        ; end
0001c68: 09                                        ; FIXUP func body size
; function body 37
0001c72: 00                                        ; func body size (guess)
0001c73: 00                                        ; local decl count
0001c74: 41                                        ; i32.const
0001c75: 01                                        ; i32 literal
0001c76: 42                                        ; i64.const
0001c77: 02                                        ; i64 literal
0001c78: 3c                                        ; i64.store8
0001c79: 00                                        ; alignment
0001c7a: 02                                        ; store offset
0001c7b: 0b                                        ; end
0001c72: 09                                        ; FIXUP func body size
; function body 38
0001c7c: 00                                        ; func body size (guess)
0001c7d: 00                                        ; local decl count
0001c7e: 41                                        ; i32.const
0001c7f: 01                                        ; i32 literal
0001c80: 42                                        ; i64.const
0001c81: 02                                        ; i64 literal
0001c82: 3d                                        ; i64.store16
0001c83: 01                                        ; alignment
0001c84: 02                                        ; store offset
0001c85: 0b                                        ; end
0001c7c: 09                                        ; FIXUP func body size
; function body 39
0001c86: 00                                        ; func body size (guess)
0001c87: 00                                        ; local decl count
0001c88: 41                                        ; i32.const
0001c89: 01                                        ; i32 literal
0001c8a: 42                                        ; i64.const
0001c8b: 02                                        ; i64 literal
0001c8c: 3e                                        ; i64.store32
0001c8d: 02                                        ; alignment
0001c8e: 02                                        ; store offset
0001c8f: 0b                                        ; end
0001c86: 09                                        ; FIXUP func body size
; function body 40
0001c90: 00                                        ; func body size (guess)
0001c91: 00                                        ; local decl count
0001c92: 3f                                        ; memory.size
0001c93: 00                                        ; memory.size reserved
0001c94: 1a                                        ; drop
0001c95: 0b                                        ; end
0001c90: 05                                        ; FIXUP func body size
; function body 41
0001c96: 00                                        ; func body size (guess)
0001c97: 00                                        ; local decl count
0001c98: 41                                        ; i32.const
0001c99: 01                                        ; i32 literal
0001c9a: 40                                        ; memory.grow
0001c9b: 00                                        ; memory.grow reserved
0001c9c: 1a                                        ; drop
0001c9d: 0b                                        ; end
0001c96: 07                                        ; FIXUP func body size
; function body 42
0001c9e: 00                                        ; func body size (guess)
0001c9f: 00                                        ; local decl count
0001ca0: 41                                        ; i32.const
0001ca1: 01                                        ; i32 literal
0001ca2: 1a                                        ; drop
0001ca3: 0b                                        ; end
0001c9e: 05                                        ; FIXUP func body size
; function body 43
0001ca4: 00                                        ; func body size (guess)
0001ca5: 00                                        ; local decl count
0001ca6: 42                                        ; i64.const
0001ca7: 01                                        ; i64 literal
0001ca8: 1a                                        ; drop
0001ca9: 0b                                        ; end
0001ca4: 05                                        ; FIXUP func body size
; function body 44
0001caa: 00                                        ; func body size (guess)
0001cab: 00                                        ; local decl count
0001cac: 43                                        ; f32.const
0001cad: 0000 803f                                 ; f32 literal
0001cb1: 1a                                        ; drop
0001cb2: 0b                                        ; end
0001caa: 08                                        ; FIXUP func body size
; function body 45
0001cb3: 00                                        ; func body size (guess)
0001cb4: 00                                        ; local decl count
0001cb5: 44                                        ; f64.const
0001cb6: 0000 0000 0000 f03f                       ; f64 literal
0001cbe: 1a                                        ; drop
0001cbf: 0b                                        ; end
0001cb3: 0c                                        ; FIXUP func body size
; function body 46
0001cc0: 00                                        ; func body size (guess)
0001cc1: 00                                        ; local decl count
0001cc2: 41                                        ; i32.const
0001cc3: 01                                        ; i32 literal
0001cc4: 45                                        ; i32.eqz
0001cc5: 1a                                        ; drop
0001cc6: 0b                                        ; end
0001cc0: 06                                        ; FIXUP func body size
; function body 47
0001cc7: 00                                        ; func body size (guess)
0001cc8: 00                                        ; local decl count
0001cc9: 41                                        ; i32.const
0001cca: 01                                        ; i32 literal
0001ccb: 41                                        ; i32.const
0001ccc: 02                                        ; i32 literal
0001ccd: 46                                        ; i32.eq
0001cce: 1a                                        ; drop
0001ccf: 0b                                        ; end
0001cc7: 08                                        ; FIXUP func body size
; function body 48
0001cd0: 00                                        ; func body size (guess)
0001cd1: 00                                        ; local decl count
0001cd2: 41                                        ; i32.const
0001cd3: 01                                        ; i32 literal
0001cd4: 41                                        ; i32.const
0001cd5: 02                                        ; i32 literal
0001cd6: 47                                        ; i32.ne
0001cd7: 1a                                        ; drop
0001cd8: 0b                                        ; end
0001cd0: 08                                        ; FIXUP func body size
; function body 49
0001cd9: 00                                        ; func body size (guess)
0001cda: 00                                        ; local decl count
0001cdb: 41                                        ; i32.const
0001cdc: 01                                        ; i32 literal
0001cdd: 41                                        ; i32.const
0001cde: 02                                        ; i32 literal
0001cdf: 48                                        ; i32.lt_s
0001ce0: 1a                                        ; drop
0001ce1: 0b                                        ; end
0001cd9: 08                                        ; FIXUP func body size
; function body 50
0001ce2: 00                                        ; func body size (guess)
0001ce3: 00                                        ; local decl count
0001ce4: 41                                        ; i32.const
0001ce5: 01                                        ; i32 literal
0001ce6: 41                                        ; i32.const
0001ce7: 02                                        ; i32 literal
0001ce8: 49                                        ; i32.lt_u
0001ce9: 1a                                        ; drop
0001cea: 0b                                        ; end
0001ce2: 08                                        ; FIXUP func body size
; function body 51
0001ceb: 00                                        ; func body size (guess)
0001cec: 00                                        ; local decl count
0001ced: 41                                        ; i32.const
0001cee: 01                                        ; i32 literal
0001cef: 41                                        ; i32.const
0001cf0: 02                                        ; i32 literal
0001cf1: 4a                                        ; i32.gt_s
0001cf2: 1a                                        ; drop
0001cf3: 0b                                        ; end
0001ceb: 08                                        ; FIXUP func body size
; function body 52
0001cf4: 00                                        ; func body size (guess)
0001cf5: 00                                        ; local decl count
0001cf6: 41                                        ; i32.const
0001cf7: 01                                        ; i32 literal
0001cf8: 41                                        ; i32.const
0001cf9: 02                                        ; i32 literal
0001cfa: 4b                                        ; i32.gt_u
0001cfb: 1a                                        ; drop
0001cfc: 0b                                        ; end
0001cf4: 08                                        ; FIXUP func body size
; function body 53
0001cfd: 00                                        ; func body size (guess)
0001cfe: 00                                        ; local decl count
0001cff: 41                                        ; i32.const
0001d00: 01                                        ; i32 literal
0001d01: 41                                        ; i32.const
0001d02: 02                                        ; i32 literal
0001d03: 4c                                        ; i32.le_s
0001d04: 1a                                        ; drop
0001d05: 0b                                        ; end
0001cfd: 08                                        ; FIXUP func body size
; function body 54
0001d06: 00                                        ; func body size (guess)
0001d07: 00                                        ; local decl count
0001d08: 41                                        ; i32.const
0001d09: 01                                        ; i32 literal
0001d0a: 41                                        ; i32.const
0001d0b: 02                                        ; i32 literal
0001d0c: 4d                                        ; i32.le_u
0001d0d: 1a                                        ; drop
0001d0e: 0b                                        ; end
0001d06: 08                                        ; FIXUP func body size
; function body 55
0001d0f: 00                                        ; func body size (guess)
0001d10: 00                                        ; local decl count
0001d11: 41                                        ; i32.const
0001d12: 01                                        ; i32 literal
0001d13: 41                                        ; i32.const
0001d14: 02                                        ; i32 literal
0001d15: 4e                                        ; i32.ge_s
0001d16: 1a                                        ; drop
0001d17: 0b                                        ; end
0001d0f: 08                                        ; FIXUP func body size
; function body 56
0001d18: 00                                        ; func body size (guess)
0001d19: 00                                        ; local decl count
0001d1a: 41                                        ; i32.const
0001d1b: 01                                        ; i32 literal
0001d1c: 41                                        ; i32.const
0001d1d: 02                                        ; i32 literal
0001d1e: 4f                                        ; i32.ge_u
0001d1f: 1a                                        ; drop
0001d20: 0b                                        ; end
0001d18: 08                                        ; FIXUP func body size
; function body 57
0001d21: 00                                        ; func body size (guess)
0001d22: 00                                        ; local decl count
0001d23: 42                                        ; i64.const
0001d24: 01                                        ; i64 literal
0001d25: 50                                        ; i64.eqz
0001d26: 1a                                        ; drop
0001d27: 0b                                        ; end
0001d21: 06                                        ; FIXUP func body size
; function body 58
0001d28: 00                                        ; func body size (guess)
0001d29: 00                                        ; local decl count
0001d2a: 42                                        ; i64.const
0001d2b: 01                                        ; i64 literal
0001d2c: 42                                        ; i64.const
0001d2d: 02                                        ; i64 literal
0001d2e: 51                                        ; i64.eq
0001d2f: 1a                                        ; drop
0001d30: 0b                                        ; end
0001d28: 08                                        ; FIXUP func body size
; function body 59
0001d31: 00                                        ; func body size (guess)
0001d32: 00                                        ; local decl count
0001d33: 42                                        ; i64.const
0001d34: 01                                        ; i64 literal
0001d35: 42                                        ; i64.const
0001d36: 02                                        ; i64 literal
0001d37: 52                                        ; i64.ne
0001d38: 1a                                        ; drop
0001d39: 0b                                        ; end
0001d31: 08                                        ; FIXUP func body size
; function body 60
0001d3a: 00                                        ; func body size (guess)
0001d3b: 00                                        ; local decl count
0001d3c: 42                                        ; i64.const
0001d3d: 01                                        ; i64 literal
0001d3e: 42                                        ; i64.const
0001d3f: 02                                        ; i64 literal
0001d40: 53                                        ; i64.lt_s
0001d41: 1a                                        ; drop
0001d42: 0b                                        ; end
0001d3a: 08                                        ; FIXUP func body size
; function body 61
0001d43: 00                                        ; func body size (guess)
0001d44: 00                                        ; local decl count
0001d45: 42                                        ; i64.const
0001d46: 01                                        ; i64 literal
0001d47: 42                                        ; i64.const
0001d48: 02                                        ; i64 literal
0001d49: 54                                        ; i64.lt_u
0001d4a: 1a                                        ; drop
0001d4b: 0b                                        ; end
0001d43: 08                                        ; FIXUP func body size
; function body 62
0001d4c: 00                                        ; func body size (guess)
0001d4d: 00                                        ; local decl count
0001d4e: 42                                        ; i64.const
0001d4f: 01                                        ; i64 literal
0001d50: 42                                        ; i64.const
0001d51: 02                                        ; i64 literal
0001d52: 55                                        ; i64.gt_s
0001d53: 1a                                        ; drop
0001d54: 0b                                        ; end
0001d4c: 08                                        ; FIXUP func body size
; function body 63
0001d55: 00                                        ; func body size (guess)
0001d56: 00                                        ; local decl count
0001d57: 42                                        ; i64.const
0001d58: 01                                        ; i64 literal
0001d59: 42                                        ; i64.const
0001d5a: 02                                        ; i64 literal
0001d5b: 56                                        ; i64.gt_u
0001d5c: 1a                                        ; drop
0001d5d: 0b                                        ; end
0001d55: 08                                        ; FIXUP func body size
; function body 64
0001d5e: 00                                        ; func body size (guess)
0001d5f: 00                                        ; local decl count
0001d60: 42                                        ; i64.const
0001d61: 01                                        ; i64 literal
0001d62: 42                                        ; i64.const
0001d63: 02                                        ; i64 literal
0001d64: 57                                        ; i64.le_s
0001d65: 1a                                        ; drop
0001d66: 0b                                        ; end
0001d5e: 08                                        ; FIXUP func body size
; function body 65
0001d67: 00                                        ; func body size (guess)
0001d68: 00                                        ; local decl count
0001d69: 42                                        ; i64.const
0001d6a: 01                                        ; i64 literal
0001d6b: 42                                        ; i64.const
0001d6c: 02                                        ; i64 literal
0001d6d: 58                                        ; i64.le_u
0001d6e: 1a                                        ; drop
0001d6f: 0b                                        ; end
0001d67: 08                                        ; FIXUP func body size
; function body 66
0001d70: 00                                        ; func body size (guess)
0001d71: 00                                        ; local decl count
0001d72: 42                                        ; i64.const
0001d73: 01                                        ; i64 literal
0001d74: 42                                        ; i64.const
0001d75: 02                                        ; i64 literal
0001d76: 59                                        ; i64.ge_s
0001d77: 1a                                        ; drop
0001d78: 0b                                        ; end
0001d70: 08                                        ; FIXUP func body size
; function body 67
0001d79: 00                                        ; func body size (guess)
0001d7a: 00                                        ; local decl count
0001d7b: 42                                        ; i64.const
0001d7c: 01                                        ; i64 literal
0001d7d: 42                                        ; i64.const
0001d7e: 02                                        ; i64 literal
0001d7f: 5a                                        ; i64.ge_u
0001d80: 1a                                        ; drop
0001d81: 0b                                        ; end
0001d79: 08                                        ; FIXUP func body size
; function body 68
0001d82: 00                                        ; func body size (guess)
0001d83: 00                                        ; local decl count
0001d84: 43                                        ; f32.const
0001d85: 0000 803f                                 ; f32 literal
0001d89: 43                                        ; f32.const
0001d8a: 0000 0040                                 ; f32 literal
0001d8e: 5b                                        ; f32.eq
0001d8f: 1a                                        ; drop
0001d90: 0b                                        ; end
0001d82: 0e                                        ; FIXUP func body size
; function body 69
0001d91: 00                                        ; func body size (guess)
0001d92: 00                                        ; local decl count
0001d93: 43                                        ; f32.const
0001d94: 0000 803f                                 ; f32 literal
0001d98: 43                                        ; f32.const
0001d99: 0000 0040                                 ; f32 literal
0001d9d: 5c                                        ; f32.ne
0001d9e: 1a                                        ; drop
0001d9f: 0b                                        ; end
0001d91: 0e                                        ; FIXUP func body size
; function body 70
0001da0: 00                                        ; func body size (guess)
0001da1: 00                                        ; local decl count
0001da2: 43                                        ; f32.const
0001da3: 0000 803f                                 ; f32 literal
0001da7: 43                                        ; f32.const
0001da8: 0000 0040                                 ; f32 literal
0001dac: 5d                                        ; f32.lt
0001dad: 1a                                        ; drop
0001dae: 0b                                        ; end
0001da0: 0e                                        ; FIXUP func body size
; function body 71
0001daf: 00                                        ; func body size (guess)
0001db0: 00                                        ; local decl count
0001db1: 43                                        ; f32.const
0001db2: 0000 803f                                 ; f32 literal
0001db6: 43                                        ; f32.const
0001db7: 0000 0040                                 ; f32 literal
0001dbb: 5e                                        ; f32.gt
0001dbc: 1a                                        ; drop
0001dbd: 0b                                        ; end
0001daf: 0e                                        ; FIXUP func body size
; function body 72
0001dbe: 00                                        ; func body size (guess)
0001dbf: 00                                        ; local decl count
0001dc0: 43                                        ; f32.const
0001dc1: 0000 803f                                 ; f32 literal
0001dc5: 43                                        ; f32.const
0001dc6: 0000 0040                                 ; f32 literal
0001dca: 5f                                        ; f32.le
0001dcb: 1a                                        ; drop
0001dcc: 0b                                        ; end
0001dbe: 0e                                        ; FIXUP func body size
; function body 73
0001dcd: 00                                        ; func body size (guess)
0001dce: 00                                        ; local decl count
0001dcf: 43                                        ; f32.const
0001dd0: 0000 803f                                 ; f32 literal
0001dd4: 43                                        ; f32.const
0001dd5: 0000 0040                                 ; f32 literal
0001dd9: 60                                        ; f32.ge
0001dda: 1a                                        ; drop
0001ddb: 0b                                        ; end
0001dcd: 0e                                        ; FIXUP func body size
; function body 74
0001ddc: 00                                        ; func body size (guess)
0001ddd: 00                                        ; local decl count
0001dde: 44                                        ; f64.const
0001ddf: 0000 0000 0000 f03f                       ; f64 literal
0001de7: 44                                        ; f64.const
0001de8: 0000 0000 0000 0040                       ; f64 literal
0001df0: 61                                        ; f64.eq
0001df1: 1a                                        ; drop
0001df2: 0b                                        ; end
0001ddc: 16                                        ; FIXUP func body size
; function body 75
0001df3: 00                                        ; func body size (guess)
0001df4: 00                                        ; local decl count
0001df5: 44                                        ; f64.const
0001df6: 0000 0000 0000 f03f                       ; f64 literal
0001dfe: 44                                        ; f64.const
0001dff: 0000 0000 0000 0040                       ; f64 literal
0001e07: 62                                        ; f64.ne
0001e08: 1a                                        ; drop
0001e09: 0b                                        ; end
0001df3: 16                                        ; FIXUP func body size
; function body 76
0001e0a: 00                                        ; func body size (guess)
0001e0b: 00                                        ; local decl count
0001e0c: 44                                        ; f64.const
0001e0d: 0000 0000 0000 f03f                       ; f64 literal
0001e15: 44                                        ; f64.const
0001e16: 0000 0000 0000 0040                       ; f64 literal
0001e1e: 63                                        ; f64.lt
0001e1f: 1a                                        ; drop
0001e20: 0b                                        ; end
0001e0a: 16                                        ; FIXUP func body size
; function body 77
0001e21: 00                                        ; func body size (guess)
0001e22: 00                                        ; local decl count
0001e23: 44                                        ; f64.const
0001e24: 0000 0000 0000 f03f                       ; f64 literal
0001e2c: 44                                        ; f64.const
0001e2d: 0000 0000 0000 0040                       ; f64 literal
0001e35: 64                                        ; f64.gt
0001e36: 1a                                        ; drop
0001e37: 0b                                        ; end
0001e21: 16                                        ; FIXUP func body size
; function body 78
0001e38: 00                                        ; func body size (guess)
0001e39: 00                                        ; local decl count
0001e3a: 44                                        ; f64.const
0001e3b: 0000 0000 0000 f03f                       ; f64 literal
0001e43: 44                                        ; f64.const
0001e44: 0000 0000 0000 0040                       ; f64 literal
0001e4c: 65                                        ; f64.le
0001e4d: 1a                                        ; drop
0001e4e: 0b                                        ; end
0001e38: 16                                        ; FIXUP func body size
; function body 79
0001e4f: 00                                        ; func body size (guess)
0001e50: 00                                        ; local decl count
0001e51: 44                                        ; f64.const
0001e52: 0000 0000 0000 f03f                       ; f64 literal
0001e5a: 44                                        ; f64.const
0001e5b: 0000 0000 0000 0040                       ; f64 literal
0001e63: 66                                        ; f64.ge
0001e64: 1a                                        ; drop
0001e65: 0b                                        ; end
0001e4f: 16                                        ; FIXUP func body size
; function body 80
0001e66: 00                                        ; func body size (guess)
0001e67: 00                                        ; local decl count
0001e68: 41                                        ; i32.const
0001e69: 01                                        ; i32 literal
0001e6a: 67                                        ; i32.clz
0001e6b: 1a                                        ; drop
0001e6c: 0b                                        ; end
0001e66: 06                                        ; FIXUP func body size
; function body 81
0001e6d: 00                                        ; func body size (guess)
0001e6e: 00                                        ; local decl count
0001e6f: 41                                        ; i32.const
0001e70: 01                                        ; i32 literal
0001e71: 68                                        ; i32.ctz
0001e72: 1a                                        ; drop
0001e73: 0b                                        ; end
0001e6d: 06                                        ; FIXUP func body size
; function body 82
0001e74: 00                                        ; func body size (guess)
0001e75: 00                                        ; local decl count
0001e76: 41                                        ; i32.const
0001e77: 01                                        ; i32 literal
0001e78: 69                                        ; i32.popcnt
0001e79: 1a                                        ; drop
0001e7a: 0b                                        ; end
0001e74: 06                                        ; FIXUP func body size
; function body 83
0001e7b: 00                                        ; func body size (guess)
0001e7c: 00                                        ; local decl count
0001e7d: 41                                        ; i32.const
0001e7e: 01                                        ; i32 literal
0001e7f: 41                                        ; i32.const
0001e80: 02                                        ; i32 literal
0001e81: 6a                                        ; i32.add
0001e82: 1a                                        ; drop
0001e83: 0b                                        ; end
0001e7b: 08                                        ; FIXUP func body size
; function body 84
0001e84: 00                                        ; func body size (guess)
0001e85: 00                                        ; local decl count
0001e86: 41                                        ; i32.const
0001e87: 01                                        ; i32 literal
0001e88: 41                                        ; i32.const
0001e89: 02                                        ; i32 literal
0001e8a: 6b                                        ; i32.sub
0001e8b: 1a                                        ; drop
0001e8c: 0b                                        ; end
0001e84: 08                                        ; FIXUP func body size
; function body 85
0001e8d: 00                                        ; func body size (guess)
0001e8e: 00                                        ; local decl count
0001e8f: 41                                        ; i32.const
0001e90: 01                                        ; i32 literal
0001e91: 41                                        ; i32.const
0001e92: 02                                        ; i32 literal
0001e93: 6c                                        ; i32.mul
0001e94: 1a                                        ; drop
0001e95: 0b                                        ; end
0001e8d: 08                                        ; FIXUP func body size
; function body 86
0001e96: 00                                        ; func body size (guess)
0001e97: 00                                        ; local decl count
0001e98: 41                                        ; i32.const
0001e99: 01                                        ; i32 literal
0001e9a: 41                                        ; i32.const
0001e9b: 02                                        ; i32 literal
0001e9c: 6d                                        ; i32.div_s
0001e9d: 1a                                        ; drop
0001e9e: 0b                                        ; end
0001e96: 08                                        ; FIXUP func body size
; function body 87
0001e9f: 00                                        ; func body size (guess)
0001ea0: 00                                        ; local decl count
0001ea1: 41                                        ; i32.const
0001ea2: 01                                        ; i32 literal
0001ea3: 41                                        ; i32.const
0001ea4: 02                                        ; i32 literal
0001ea5: 6e                                        ; i32.div_u
0001ea6: 1a                                        ; drop
0001ea7: 0b                                        ; end
0001e9f: 08                                        ; FIXUP func body size
; function body 88
0001ea8: 00                                        ; func body size (guess)
0001ea9: 00                                        ; local decl count
0001eaa: 41                                        ; i32.const
0001eab: 01                                        ; i32 literal
0001eac: 41                                        ; i32.const
0001ead: 02                                        ; i32 literal
0001eae: 6f                                        ; i32.rem_s
0001eaf: 1a                                        ; drop
0001eb0: 0b                                        ; end
0001ea8: 08                                        ; FIXUP func body size
; function body 89
0001eb1: 00                                        ; func body size (guess)
0001eb2: 00                                        ; local decl count
0001eb3: 41                                        ; i32.const
0001eb4: 01                                        ; i32 literal
0001eb5: 41                                        ; i32.const
0001eb6: 02                                        ; i32 literal
0001eb7: 70                                        ; i32.rem_u
0001eb8: 1a                                        ; drop
0001eb9: 0b                                        ; end
0001eb1: 08                                        ; FIXUP func body size
; function body 90
0001eba: 00                                        ; func body size (guess)
0001ebb: 00                                        ; local decl count
0001ebc: 41                                        ; i32.const
0001ebd: 01                                        ; i32 literal
0001ebe: 41                                        ; i32.const
0001ebf: 02                                        ; i32 literal
0001ec0: 71                                        ; i32.and
0001ec1: 1a                                        ; drop
0001ec2: 0b                                        ; end
0001eba: 08                                        ; FIXUP func body size
; function body 91
0001ec3: 00                                        ; func body size (guess)
0001ec4: 00                                        ; local decl count
0001ec5: 41                                        ; i32.const
0001ec6: 01                                        ; i32 literal
0001ec7: 41                                        ; i32.const
0001ec8: 02                                        ; i32 literal
0001ec9: 72                                        ; i32.or
0001eca: 1a                                        ; drop
0001ecb: 0b                                        ; end
0001ec3: 08                                        ; FIXUP func body size
; function body 92
0001ecc: 00                                        ; func body size (guess)
0001ecd: 00                                        ; local decl count
0001ece: 41                                        ; i32.const
0001ecf: 01                                        ; i32 literal
0001ed0: 41                                        ; i32.const
0001ed1: 02                                        ; i32 literal
0001ed2: 73                                        ; i32.xor
0001ed3: 1a                                        ; drop
0001ed4: 0b                                        ; end
0001ecc: 08                                        ; FIXUP func body size
; function body 93
0001ed5: 00                                        ; func body size (guess)
0001ed6: 00                                        ; local decl count
0001ed7: 41                                        ; i32.const
0001ed8: 01                                        ; i32 literal
0001ed9: 41                                        ; i32.const
0001eda: 02                                        ; i32 literal
0001edb: 74                                        ; i32.shl
0001edc: 1a                                        ; drop
0001edd: 0b                                        ; end
0001ed5: 08                                        ; FIXUP func body size
; function body 94
0001ede: 00                                        ; func body size (guess)
0001edf: 00                                        ; local decl count
0001ee0: 41                                        ; i32.const
0001ee1: 01                                        ; i32 literal
0001ee2: 41                                        ; i32.const
0001ee3: 02                                        ; i32 literal
0001ee4: 75                                        ; i32.shr_s
0001ee5: 1a                                        ; drop
0001ee6: 0b                                        ; end
0001ede: 08                                        ; FIXUP func body size
; function body 95
0001ee7: 00                                        ; func body size (guess)
0001ee8: 00                                        ; local decl count
0001ee9: 41                                        ; i32.const
0001eea: 01                                        ; i32 literal
0001eeb: 41                                        ; i32.const
0001eec: 02                                        ; i32 literal
0001eed: 76                                        ; i32.shr_u
0001eee: 1a                                        ; drop
0001eef: 0b                                        ; end
0001ee7: 08                                        ; FIXUP func body size
; function body 96
0001ef0: 00                                        ; func body size (guess)
0001ef1: 00                                        ; local decl count
0001ef2: 41                                        ; i32.const
0001ef3: 01                                        ; i32 literal
0001ef4: 41                                        ; i32.const
0001ef5: 02                                        ; i32 literal
0001ef6: 77                                        ; i32.rotl
0001ef7: 1a                                        ; drop
0001ef8: 0b                                        ; end
0001ef0: 08                                        ; FIXUP func body size
; function body 97
0001ef9: 00                                        ; func body size (guess)
0001efa: 00                                        ; local decl count
0001efb: 41                                        ; i32.const
0001efc: 01                                        ; i32 literal
0001efd: 41                                        ; i32.const
0001efe: 02                                        ; i32 literal
0001eff: 78                                        ; i32.rotr
0001f00: 1a                                        ; drop
0001f01: 0b                                        ; end
0001ef9: 08                                        ; FIXUP func body size
; function body 98
0001f02: 00                                        ; func body size (guess)
0001f03: 00                                        ; local decl count
0001f04: 42                                        ; i64.const
0001f05: 01                                        ; i64 literal
0001f06: 79                                        ; i64.clz
0001f07: 1a                                        ; drop
0001f08: 0b                                        ; end
0001f02: 06                                        ; FIXUP func body size
; function body 99
0001f09: 00                                        ; func body size (guess)
0001f0a: 00                                        ; local decl count
0001f0b: 42                                        ; i64.const
0001f0c: 01                                        ; i64 literal
0001f0d: 7a                                        ; i64.ctz
0001f0e: 1a                                        ; drop
0001f0f: 0b                                        ; end
0001f09: 06                                        ; FIXUP func body size
; function body 100
0001f10: 00                                        ; func body size (guess)
0001f11: 00                                        ; local decl count
0001f12: 42                                        ; i64.const
0001f13: 01                                        ; i64 literal
0001f14: 7b                                        ; i64.popcnt
0001f15: 1a                                        ; drop
0001f16: 0b                                        ; end
0001f10: 06                                        ; FIXUP func body size
; function body 101
0001f17: 00                                        ; func body size (guess)
0001f18: 00                                        ; local decl count
0001f19: 42                                        ; i64.const
0001f1a: 01                                        ; i64 literal
0001f1b: 42                                        ; i64.const
0001f1c: 02                                        ; i64 literal
0001f1d: 7c                                        ; i64.add
0001f1e: 1a                                        ; drop
0001f1f: 0b                                        ; end
0001f17: 08                                        ; FIXUP func body size
; function body 102
0001f20: 00                                        ; func body size (guess)
0001f21: 00                                        ; local decl count
0001f22: 42                                        ; i64.const
0001f23: 01                                        ; i64 literal
0001f24: 42                                        ; i64.const
0001f25: 02                                        ; i64 literal
0001f26: 7d                                        ; i64.sub
0001f27: 1a                                        ; drop
0001f28: 0b                                        ; end
0001f20: 08                                        ; FIXUP func body size
; function body 103
0001f29: 00                                        ; func body size (guess)
0001f2a: 00                                        ; local decl count
0001f2b: 42                                        ; i64.const
0001f2c: 01                                        ; i64 literal
0001f2d: 42                                        ; i64.const
0001f2e: 02                                        ; i64 literal
0001f2f: 7e                                        ; i64.mul
0001f30: 1a                                        ; drop
0001f31: 0b                                        ; end
0001f29: 08                                        ; FIXUP func body size
; function body 104
0001f32: 00                                        ; func body size (guess)
0001f33: 00                                        ; local decl count
0001f34: 42                                        ; i64.const
0001f35: 01                                        ; i64 literal
0001f36: 42                                        ; i64.const
0001f37: 02                                        ; i64 literal
0001f38: 7f                                        ; i64.div_s
0001f39: 1a                                        ; drop
0001f3a: 0b                                        ; end
0001f32: 08                                        ; FIXUP func body size
; function body 105
0001f3b: 00                                        ; func body size (guess)
0001f3c: 00                                        ; local decl count
0001f3d: 42                                        ; i64.const
0001f3e: 01                                        ; i64 literal
0001f3f: 42                                        ; i64.const
0001f40: 02                                        ; i64 literal
0001f41: 80                                        ; i64.div_u
0001f42: 1a                                        ; drop
0001f43: 0b                                        ; end
0001f3b: 08                                        ; FIXUP func body size
; function body 106
0001f44: 00                                        ; func body size (guess)
0001f45: 00                                        ; local decl count
0001f46: 42                                        ; i64.const
0001f47: 01                                        ; i64 literal
0001f48: 42                                        ; i64.const
0001f49: 02                                        ; i64 literal
0001f4a: 81                                        ; i64.rem_s
0001f4b: 1a                                        ; drop
0001f4c: 0b                                        ; end
0001f44: 08                                        ; FIXUP func body size
; function body 107
0001f4d: 00                                        ; func body size (guess)
0001f4e: 00                                        ; local decl count
0001f4f: 42                                        ; i64.const
0001f50: 01                                        ; i64 literal
0001f51: 42                                        ; i64.const
0001f52: 02                                        ; i64 literal
0001f53: 82                                        ; i64.rem_u
0001f54: 1a                                        ; drop
0001f55: 0b                                        ; end
0001f4d: 08                                        ; FIXUP func body size
; function body 108
0001f56: 00                                        ; func body size (guess)
0001f57: 00                                        ; local decl count
0001f58: 42                                        ; i64.const
0001f59: 01                                        ; i64 literal
0001f5a: 42                                        ; i64.const
0001f5b: 02                                        ; i64 literal
0001f5c: 83                                        ; i64.and
0001f5d: 1a                                        ; drop
0001f5e: 0b                                        ; end
0001f56: 08                                        ; FIXUP func body size
; function body 109
0001f5f: 00                                        ; func body size (guess)
0001f60: 00                                        ; local decl count
0001f61: 42                                        ; i64.const
0001f62: 01                                        ; i64 literal
0001f63: 42                                        ; i64.const
0001f64: 02                                        ; i64 literal
0001f65: 84                                        ; i64.or
0001f66: 1a                                        ; drop
0001f67: 0b                                        ; end
0001f5f: 08                                        ; FIXUP func body size
; function body 110
0001f68: 00                                        ; func body size (guess)
0001f69: 00                                        ; local decl count
0001f6a: 42                                        ; i64.const
0001f6b: 01                                        ; i64 literal
0001f6c: 42                                        ; i64.const
0001f6d: 02                                        ; i64 literal
0001f6e: 85                                        ; i64.xor
0001f6f: 1a                                        ; drop
0001f70: 0b                                        ; end
0001f68: 08                                        ; FIXUP func body size
; function body 111
0001f71: 00                                        ; func body size (guess)
0001f72: 00                                        ; local decl count
0001f73: 42                                        ; i64.const
0001f74: 01                                        ; i64 literal
0001f75: 42                                        ; i64.const
0001f76: 02                                        ; i64 literal
0001f77: 86                                        ; i64.shl
0001f78: 1a                                        ; drop
0001f79: 0b                                        ; end
0001f71: 08                                        ; FIXUP func body size
; function body 112
0001f7a: 00                                        ; func body size (guess)
0001f7b: 00                                        ; local decl count
0001f7c: 42                                        ; i64.const
0001f7d: 01                                        ; i64 literal
0001f7e: 42                                        ; i64.const
0001f7f: 02                                        ; i64 literal
0001f80: 87                                        ; i64.shr_s
0001f81: 1a                                        ; drop
0001f82: 0b                                        ; end
0001f7a: 08                                        ; FIXUP func body size
; function body 113
0001f83: 00                                        ; func body size (guess)
0001f84: 00                                        ; local decl count
0001f85: 42                                        ; i64.const
0001f86: 01                                        ; i64 literal
0001f87: 42                                        ; i64.const
0001f88: 02                                        ; i64 literal
0001f89: 88                                        ; i64.shr_u
0001f8a: 1a                                        ; drop
0001f8b: 0b                                        ; end
0001f83: 08                                        ; FIXUP func body size
; function body 114
0001f8c: 00                                        ; func body size (guess)
0001f8d: 00                                        ; local decl count
0001f8e: 42                                        ; i64.const
0001f8f: 01                                        ; i64 literal
0001f90: 42                                        ; i64.const
0001f91: 02                                        ; i64 literal
0001f92: 89                                        ; i64.rotl
0001f93: 1a                                        ; drop
0001f94: 0b                                        ; end
0001f8c: 08                                        ; FIXUP func body size
; function body 115
0001f95: 00                                        ; func body size (guess)
0001f96: 00                                        ; local decl count
0001f97: 42                                        ; i64.const
0001f98: 01                                        ; i64 literal
0001f99: 42                                        ; i64.const
0001f9a: 02                                        ; i64 literal
0001f9b: 8a                                        ; i64.rotr
0001f9c: 1a                                        ; drop
0001f9d: 0b                                        ; end
0001f95: 08                                        ; FIXUP func body size
; function body 116
0001f9e: 00                                        ; func body size (guess)
0001f9f: 00                                        ; local decl count
0001fa0: 43                                        ; f32.const
0001fa1: 0000 803f                                 ; f32 literal
0001fa5: 8b                                        ; f32.abs
0001fa6: 1a                                        ; drop
0001fa7: 0b                                        ; end
0001f9e: 09                                        ; FIXUP func body size
; function body 117
0001fa8: 00                                        ; func body size (guess)
0001fa9: 00                                        ; local decl count
0001faa: 43                                        ; f32.const
0001fab: 0000 803f                                 ; f32 literal
0001faf: 8c                                        ; f32.neg
0001fb0: 1a                                        ; drop
0001fb1: 0b                                        ; end
0001fa8: 09                                        ; FIXUP func body size
; function body 118
0001fb2: 00                                        ; func body size (guess)
0001fb3: 00                                        ; local decl count
0001fb4: 43                                        ; f32.const
0001fb5: 0000 803f                                 ; f32 literal
0001fb9: 8d                                        ; f32.ceil
0001fba: 1a                                        ; drop
0001fbb: 0b                                        ; end
0001fb2: 09                                        ; FIXUP func body size
; function body 119
0001fbc: 00                                        ; func body size (guess)
0001fbd: 00                                        ; local decl count
0001fbe: 43                                        ; f32.const
0001fbf: 0000 803f                                 ; f32 literal
0001fc3: 8e                                        ; f32.floor
0001fc4: 1a                                        ; drop
0001fc5: 0b                                        ; end
0001fbc: 09                                        ; FIXUP func body size
; function body 120
0001fc6: 00                                        ; func body size (guess)
0001fc7: 00                                        ; local decl count
0001fc8: 43                                        ; f32.const
0001fc9: 0000 803f                                 ; f32 literal
0001fcd: 8f                                        ; f32.trunc
0001fce: 1a                                        ; drop
0001fcf: 0b                                        ; end
0001fc6: 09                                        ; FIXUP func body size
; function body 121
0001fd0: 00                                        ; func body size (guess)
0001fd1: 00                                        ; local decl count
0001fd2: 43                                        ; f32.const
0001fd3: 0000 803f                                 ; f32 literal
0001fd7: 90                                        ; f32.nearest
0001fd8: 1a                                        ; drop
0001fd9: 0b                                        ; end
0001fd0: 09                                        ; FIXUP func body size
; function body 122
0001fda: 00                                        ; func body size (guess)
0001fdb: 00                                        ; local decl count
0001fdc: 43                                        ; f32.const
0001fdd: 0000 803f                                 ; f32 literal
0001fe1: 91                                        ; f32.sqrt
0001fe2: 1a                                        ; drop
0001fe3: 0b                                        ; end
0001fda: 09                                        ; FIXUP func body size
; function body 123
0001fe4: 00                                        ; func body size (guess)
0001fe5: 00                                        ; local decl count
0001fe6: 43                                        ; f32.const
0001fe7: 0000 803f                                 ; f32 literal
0001feb: 43                                        ; f32.const
0001fec: 0000 0040                                 ; f32 literal
0001ff0: 92                                        ; f32.add
0001ff1: 1a                                        ; drop
0001ff2: 0b                                        ; end
0001fe4: 0e                                        ; FIXUP func body size
; function body 124
0001ff3: 00                                        ; func body size (guess)
0001ff4: 00                                        ; local decl count
0001ff5: 43                                        ; f32.const
0001ff6: 0000 803f                                 ; f32 literal
0001ffa: 43                                        ; f32.const
0001ffb: 0000 0040                                 ; f32 literal
0001fff: 93                                        ; f32.sub
0002000: 1a                                        ; drop
0002001: 0b                                        ; end
0001ff3: 0e                                        ; FIXUP func body size
; function body 125
0002002: 00                                        ; func body size (guess)
0002003: 00                                        ; local decl count
0002004: 43                                        ; f32.const
0002005: 0000 803f                                 ; f32 literal
0002009: 43                                        ; f32.const
000200a: 0000 0040                                 ; f32 literal
000200e: 94                                        ; f32.mul
000200f: 1a                                        ; drop
0002010: 0b                                        ; end
0002002: 0e                                        ; FIXUP func body size
; function body 126
0002011: 00                                        ; func body size (guess)
0002012: 00                                        ; local decl count
0002013: 43                                        ; f32.const
0002014: 0000 803f                                 ; f32 literal
0002018: 43                                        ; f32.const
0002019: 0000 0040                                 ; f32 literal
000201d: 95                                        ; f32.div
000201e: 1a                                        ; drop
000201f: 0b                                        ; end
0002011: 0e                                        ; FIXUP func body size
; function body 127
0002020: 00                                        ; func body size (guess)
0002021: 00                                        ; local decl count
0002022: 43                                        ; f32.const
0002023: 0000 803f                                 ; f32 literal
0002027: 43                                        ; f32.const
0002028: 0000 0040                                 ; f32 literal
000202c: 96                                        ; f32.min
000202d: 1a                                        ; drop
000202e: 0b                                        ; end
0002020: 0e                                        ; FIXUP func body size
; function body 128
000202f: 00                                        ; func body size (guess)
0002030: 00                                        ; local decl count
0002031: 43                                        ; f32.const
0002032: 0000 803f                                 ; f32 literal
0002036: 43                                        ; f32.const
0002037: 0000 0040                                 ; f32 literal
000203b: 97                                        ; f32.max
000203c: 1a                                        ; drop
000203d: 0b                                        ; end
000202f: 0e                                        ; FIXUP func body size
; function body 129
000203e: 00                                        ; func body size (guess)
000203f: 00                                        ; local decl count
0002040: 43                                        ; f32.const
0002041: 0000 803f                                 ; f32 literal
0002045: 43                                        ; f32.const
0002046: 0000 0040                                 ; f32 literal
000204a: 98                                        ; f32.copysign
000204b: 1a                                        ; drop
000204c: 0b                                        ; end
000203e: 0e                                        ; FIXUP func body size
; function body 130
000204d: 00                                        ; func body size (guess)
000204e: 00                                        ; local decl count
000204f: 44                                        ; f64.const
0002050: 0000 0000 0000 f03f                       ; f64 literal
0002058: 99                                        ; f64.abs
0002059: 1a                                        ; drop
000205a: 0b                                        ; end
000204d: 0d                                        ; FIXUP func body size
; function body 131
000205b: 00                                        ; func body size (guess)
000205c: 00                                        ; local decl count
000205d: 44                                        ; f64.const
000205e: 0000 0000 0000 f03f                       ; f64 literal
0002066: 9a                                        ; f64.neg
0002067: 1a                                        ; drop
0002068: 0b                                        ; end
000205b: 0d                                        ; FIXUP func body size
; function body 132
0002069: 00                                        ; func body size (guess)
000206a: 00                                        ; local decl count
000206b: 44                                        ; f64.const
000206c: 0000 0000 0000 f03f                       ; f64 literal
0002074: 9b                                        ; f64.ceil
0002075: 1a                                        ; drop
0002076: 0b                                        ; end
0002069: 0d                                        ; FIXUP func body size
; function body 133
0002077: 00                                        ; func body size (guess)
0002078: 00                                        ; local decl count
0002079: 44                                        ; f64.const
000207a: 0000 0000 0000 f03f                       ; f64 literal
0002082: 9c                                        ; f64.floor
0002083: 1a                                        ; drop
0002084: 0b                                        ; end
0002077: 0d                                        ; FIXUP func body size
; function body 134
0002085: 00                                        ; func body size (guess)
0002086: 00                                        ; local decl count
0002087: 44                                        ; f64.const
0002088: 0000 0000 0000 f03f                       ; f64 literal
0002090: 9d                                        ; f64.trunc
0002091: 1a                                        ; drop
0002092: 0b                                        ; end
0002085: 0d                                        ; FIXUP func body size
; function body 135
0002093: 00                                        ; func body size (guess)
0002094: 00                                        ; local decl count
0002095: 44                                        ; f64.const
0002096: 0000 0000 0000 f03f                       ; f64 literal
000209e: 9e                                        ; f64.nearest
000209f: 1a                                        ; drop
00020a0: 0b                                        ; end
0002093: 0d                                        ; FIXUP func body size
; function body 136
00020a1: 00                                        ; func body size (guess)
00020a2: 00                                        ; local decl count
00020a3: 44                                        ; f64.const
00020a4: 0000 0000 0000 f03f                       ; f64 literal
00020ac: 9f                                        ; f64.sqrt
00020ad: 1a                                        ; drop
00020ae: 0b                                        ; end
00020a1: 0d                                        ; FIXUP func body size
; function body 137
00020af: 00                                        ; func body size (guess)
00020b0: 00                                        ; local decl count
00020b1: 44                                        ; f64.const
00020b2: 0000 0000 0000 f03f                       ; f64 literal
00020ba: 44                                        ; f64.const
00020bb: 0000 0000 0000 0040                       ; f64 literal
00020c3: a0                                        ; f64.add
00020c4: 1a                                        ; drop
00020c5: 0b                                        ; end
00020af: 16                                        ; FIXUP func body size
; function body 138
00020c6: 00                                        ; func body size (guess)
00020c7: 00                                        ; local decl count
00020c8: 44                                        ; f64.const
00020c9: 0000 0000 0000 f03f                       ; f64 literal
00020d1: 44                                        ; f64.const
00020d2: 0000 0000 0000 0040                       ; f64 literal
00020da: a1                                        ; f64.sub
00020db: 1a                                        ; drop
00020dc: 0b                                        ; end
00020c6: 16                                        ; FIXUP func body size
; function body 139
00020dd: 00                                        ; func body size (guess)
00020de: 00                                        ; local decl count
00020df: 44                                        ; f64.const
00020e0: 0000 0000 0000 f03f                       ; f64 literal
00020e8: 44                                        ; f64.const
00020e9: 0000 0000 0000 0040                       ; f64 literal
00020f1: a2                                        ; f64.mul
00020f2: 1a                                        ; drop
00020f3: 0b                                        ; end
00020dd: 16                                        ; FIXUP func body size
; function body 140
00020f4: 00                                        ; func body size (guess)
00020f5: 00                                        ; local decl count
00020f6: 44                                        ; f64.const
00020f7: 0000 0000 0000 f03f                       ; f64 literal
00020ff: 44                                        ; f64.const
0002100: 0000 0000 0000 0040                       ; f64 literal
0002108: a3                                        ; f64.div
0002109: 1a                                        ; drop
000210a: 0b                                        ; end
00020f4: 16                                        ; FIXUP func body size
; function body 141
000210b: 00                                        ; func body size (guess)
000210c: 00                                        ; local decl count
000210d: 44                                        ; f64.const
000210e: 0000 0000 0000 f03f                       ; f64 literal
0002116: 44                                        ; f64.const
0002117: 0000 0000 0000 0040                       ; f64 literal
000211f: a4                                        ; f64.min
0002120: 1a                                        ; drop
0002121: 0b                                        ; end
000210b: 16                                        ; FIXUP func body size
; function body 142
0002122: 00                                        ; func body size (guess)
0002123: 00                                        ; local decl count
0002124: 44                                        ; f64.const
0002125: 0000 0000 0000 f03f                       ; f64 literal
000212d: 44                                        ; f64.const
000212e: 0000 0000 0000 0040                       ; f64 literal
0002136: a5                                        ; f64.max
0002137: 1a                                        ; drop
0002138: 0b                                        ; end
0002122: 16                                        ; FIXUP func body size
; function body 143
0002139: 00                                        ; func body size (guess)
000213a: 00                                        ; local decl count
000213b: 44                                        ; f64.const
000213c: 0000 0000 0000 f03f                       ; f64 literal
0002144: 44                                        ; f64.const
0002145: 0000 0000 0000 0040                       ; f64 literal
000214d: a6                                        ; f64.copysign
000214e: 1a                                        ; drop
000214f: 0b                                        ; end
0002139: 16                                        ; FIXUP func body size
; function body 144
0002150: 00                                        ; func body size (guess)
0002151: 00                                        ; local decl count
0002152: 42                                        ; i64.const
0002153: 01                                        ; i64 literal
0002154: a7                                        ; i32.wrap_i64
0002155: 1a                                        ; drop
0002156: 0b                                        ; end
0002150: 06                                        ; FIXUP func body size
; function body 145
0002157: 00                                        ; func body size (guess)
0002158: 00                                        ; local decl count
0002159: 43                                        ; f32.const
000215a: 0000 803f                                 ; f32 literal
000215e: a8                                        ; i32.trunc_f32_s
000215f: 1a                                        ; drop
0002160: 0b                                        ; end
0002157: 09                                        ; FIXUP func body size
; function body 146
0002161: 00                                        ; func body size (guess)
0002162: 00                                        ; local decl count
0002163: 43                                        ; f32.const
0002164: 0000 803f                                 ; f32 literal
0002168: a9                                        ; i32.trunc_f32_u
0002169: 1a                                        ; drop
000216a: 0b                                        ; end
0002161: 09                                        ; FIXUP func body size
; function body 147
000216b: 00                                        ; func body size (guess)
000216c: 00                                        ; local decl count
000216d: 44                                        ; f64.const
000216e: 0000 0000 0000 f03f                       ; f64 literal
0002176: aa                                        ; i32.trunc_f64_s
0002177: 1a                                        ; drop
0002178: 0b                                        ; end
000216b: 0d                                        ; FIXUP func body size
; function body 148
0002179: 00                                        ; func body size (guess)
000217a: 00                                        ; local decl count
000217b: 44                                        ; f64.const
000217c: 0000 0000 0000 f03f                       ; f64 literal
0002184: ab                                        ; i32.trunc_f64_u
0002185: 1a                                        ; drop
0002186: 0b                                        ; end
0002179: 0d                                        ; FIXUP func body size
; function body 149
0002187: 00                                        ; func body size (guess)
0002188: 00                                        ; local decl count
0002189: 41                                        ; i32.const
000218a: 01                                        ; i32 literal
000218b: ac                                        ; i64.extend_i32_s
000218c: 1a                                        ; drop
000218d: 0b                                        ; end
0002187: 06                                        ; FIXUP func body size
; function body 150
000218e: 00                                        ; func body size (guess)
000218f: 00                                        ; local decl count
0002190: 41                                        ; i32.const
0002191: 01                                        ; i32 literal
0002192: ad                                        ; i64.extend_i32_u
0002193: 1a                                        ; drop
0002194: 0b                                        ; end
000218e: 06                                        ; FIXUP func body size
; function body 151
0002195: 00                                        ; func body size (guess)
0002196: 00                                        ; local decl count
0002197: 43                                        ; f32.const
0002198: 0000 803f                                 ; f32 literal
000219c: ae                                        ; i64.trunc_f32_s
000219d: 1a                                        ; drop
000219e: 0b                                        ; end
0002195: 09                                        ; FIXUP func body size
; function body 152
000219f: 00                                        ; func body size (guess)
00021a0: 00                                        ; local decl count
00021a1: 43                                        ; f32.const
00021a2: 0000 803f                                 ; f32 literal
00021a6: af                                        ; i64.trunc_f32_u
00021a7: 1a                                        ; drop
00021a8: 0b                                        ; end
000219f: 09                                        ; FIXUP func body size
; function body 153
00021a9: 00                                        ; func body size (guess)
00021aa: 00                                        ; local decl count
00021ab: 44                                        ; f64.const
00021ac: 0000 0000 0000 f03f                       ; f64 literal
00021b4: b0                                        ; i64.trunc_f64_s
00021b5: 1a                                        ; drop
00021b6: 0b                                        ; end
00021a9: 0d                                        ; FIXUP func body size
; function body 154
00021b7: 00                                        ; func body size (guess)
00021b8: 00                                        ; local decl count
00021b9: 44                                        ; f64.const
00021ba: 0000 0000 0000 f03f                       ; f64 literal
00021c2: b1                                        ; i64.trunc_f64_u
00021c3: 1a                                        ; drop
00021c4: 0b                                        ; end
00021b7: 0d                                        ; FIXUP func body size
; function body 155
00021c5: 00                                        ; func body size (guess)
00021c6: 00                                        ; local decl count
00021c7: 41                                        ; i32.const
00021c8: 01                                        ; i32 literal
00021c9: b2                                        ; f32.convert_i32_s
00021ca: 1a                                        ; drop
00021cb: 0b                                        ; end
00021c5: 06                                        ; FIXUP func body size
; function body 156
00021cc: 00                                        ; func body size (guess)
00021cd: 00                                        ; local decl count
00021ce: 41                                        ; i32.const
00021cf: 01                                        ; i32 literal
00021d0: b3                                        ; f32.convert_i32_u
00021d1: 1a                                        ; drop
00021d2: 0b                                        ; end
00021cc: 06                                        ; FIXUP func body size
; function body 157
00021d3: 00                                        ; func body size (guess)
00021d4: 00                                        ; local decl count
00021d5: 42                                        ; i64.const
00021d6: 01                                        ; i64 literal
00021d7: b4                                        ; f32.convert_i64_s
00021d8: 1a                                        ; drop
00021d9: 0b                                        ; end
00021d3: 06                                        ; FIXUP func body size
; function body 158
00021da: 00                                        ; func body size (guess)
00021db: 00                                        ; local decl count
00021dc: 42                                        ; i64.const
00021dd: 01                                        ; i64 literal
00021de: b5                                        ; f32.convert_i64_u
00021df: 1a                                        ; drop
00021e0: 0b                                        ; end
00021da: 06                                        ; FIXUP func body size
; function body 159
00021e1: 00                                        ; func body size (guess)
00021e2: 00                                        ; local decl count
00021e3: 44                                        ; f64.const
00021e4: 0000 0000 0000 f03f                       ; f64 literal
00021ec: b6                                        ; f32.demote_f64
00021ed: 1a                                        ; drop
00021ee: 0b                                        ; end
00021e1: 0d                                        ; FIXUP func body size
; function body 160
00021ef: 00                                        ; func body size (guess)
00021f0: 00                                        ; local decl count
00021f1: 41                                        ; i32.const
00021f2: 01                                        ; i32 literal
00021f3: b7                                        ; f64.convert_i32_s
00021f4: 1a                                        ; drop
00021f5: 0b                                        ; end
00021ef: 06                                        ; FIXUP func body size
; function body 161
00021f6: 00                                        ; func body size (guess)
00021f7: 00                                        ; local decl count
00021f8: 41                                        ; i32.const
00021f9: 01                                        ; i32 literal
00021fa: b8                                        ; f64.convert_i32_u
00021fb: 1a                                        ; drop
00021fc: 0b                                        ; end
00021f6: 06                                        ; FIXUP func body size
; function body 162
00021fd: 00                                        ; func body size (guess)
00021fe: 00                                        ; local decl count
00021ff: 42                                        ; i64.const
0002200: 01                                        ; i64 literal
0002201: b9                                        ; f64.convert_i64_s
0002202: 1a                                        ; drop
0002203: 0b                                        ; end
00021fd: 06                                        ; FIXUP func body size
; function body 163
0002204: 00                                        ; func body size (guess)
0002205: 00                                        ; local decl count
0002206: 42                                        ; i64.const
0002207: 01                                        ; i64 literal
0002208: ba                                        ; f64.convert_i64_u
0002209: 1a                                        ; drop
000220a: 0b                                        ; end
0002204: 06                                        ; FIXUP func body size
; function body 164
000220b: 00                                        ; func body size (guess)
000220c: 00                                        ; local decl count
000220d: 43                                        ; f32.const
000220e: 0000 803f                                 ; f32 literal
0002212: bb                                        ; f64.promote_f32
0002213: 1a                                        ; drop
0002214: 0b                                        ; end
000220b: 09                                        ; FIXUP func body size
; function body 165
0002215: 00                                        ; func body size (guess)
0002216: 00                                        ; local decl count
0002217: 41                                        ; i32.const
0002218: 01                                        ; i32 literal
0002219: be                                        ; f32.reinterpret_i32
000221a: 1a                                        ; drop
000221b: 0b                                        ; end
0002215: 06                                        ; FIXUP func body size
; function body 166
000221c: 00                                        ; func body size (guess)
000221d: 00                                        ; local decl count
000221e: 43                                        ; f32.const
000221f: 0000 803f                                 ; f32 literal
0002223: bc                                        ; i32.reinterpret_f32
0002224: 1a                                        ; drop
0002225: 0b                                        ; end
000221c: 09                                        ; FIXUP func body size
; function body 167
0002226: 00                                        ; func body size (guess)
0002227: 00                                        ; local decl count
0002228: 42                                        ; i64.const
0002229: 01                                        ; i64 literal
000222a: bf                                        ; f64.reinterpret_i64
000222b: 1a                                        ; drop
000222c: 0b                                        ; end
0002226: 06                                        ; FIXUP func body size
; function body 168
000222d: 00                                        ; func body size (guess)
000222e: 00                                        ; local decl count
000222f: 44                                        ; f64.const
0002230: 0000 0000 0000 f03f                       ; f64 literal
0002238: bd                                        ; i64.reinterpret_f64
0002239: 1a                                        ; drop
000223a: 0b                                        ; end
000222d: 0d                                        ; FIXUP func body size
; function body 169
000223b: 00                                        ; func body size (guess)
000223c: 00                                        ; local decl count
000223d: 41                                        ; i32.const
000223e: 01                                        ; i32 literal
000223f: c0                                        ; i32.extend8_s
0002240: 1a                                        ; drop
0002241: 0b                                        ; end
000223b: 06                                        ; FIXUP func body size
; function body 170
0002242: 00                                        ; func body size (guess)
0002243: 00                                        ; local decl count
0002244: 41                                        ; i32.const
0002245: 01                                        ; i32 literal
0002246: c1                                        ; i32.extend16_s
0002247: 1a                                        ; drop
0002248: 0b                                        ; end
0002242: 06                                        ; FIXUP func body size
; function body 171
0002249: 00                                        ; func body size (guess)
000224a: 00                                        ; local decl count
000224b: 42                                        ; i64.const
000224c: 01                                        ; i64 literal
000224d: c2                                        ; i64.extend8_s
000224e: 1a                                        ; drop
000224f: 0b                                        ; end
0002249: 06                                        ; FIXUP func body size
; function body 172
0002250: 00                                        ; func body size (guess)
0002251: 00                                        ; local decl count
0002252: 42                                        ; i64.const
0002253: 01                                        ; i64 literal
0002254: c3                                        ; i64.extend16_s
0002255: 1a                                        ; drop
0002256: 0b                                        ; end
0002250: 06                                        ; FIXUP func body size
; function body 173
0002257: 00                                        ; func body size (guess)
0002258: 00                                        ; local decl count
0002259: 42                                        ; i64.const
000225a: 01                                        ; i64 literal
000225b: c4                                        ; i64.extend32_s
000225c: 1a                                        ; drop
000225d: 0b                                        ; end
0002257: 06                                        ; FIXUP func body size
; function body 174
000225e: 00                                        ; func body size (guess)
000225f: 01                                        ; local decl count
0002260: 01                                        ; local type count
0002261: 7f                                        ; i32
0002262: 0b                                        ; end
000225e: 04                                        ; FIXUP func body size
; function body 175
0002263: 00                                        ; func body size (guess)
0002264: 00                                        ; local decl count
0002265: 41                                        ; i32.const
0002266: 01                                        ; i32 literal
0002267: 0d                                        ; br_if
0002268: 00                                        ; break depth
0002269: 0b                                        ; end
0002263: 06                                        ; FIXUP func body size
; function body 176
000226a: 00                                        ; func body size (guess)
000226b: 00                                        ; local decl count
000226c: 41                                        ; i32.const
000226d: 01                                        ; i32 literal
000226e: 10                                        ; call
000226f: 00                                        ; function index
0002270: 0b                                        ; end
000226a: 06                                        ; FIXUP func body size
; function body 177
0002271: 00                                        ; func body size (guess)
0002272: 00                                        ; local decl count
0002273: 41                                        ; i32.const
0002274: 01                                        ; i32 literal
0002275: 0e                                        ; br_table
0002276: 00                                        ; num targets
0002277: 00                                        ; break depth for default
0002278: 0b                                        ; end
0002271: 07                                        ; FIXUP func body size
; function body 178
0002279: 00                                        ; func body size (guess)
000227a: 00                                        ; local decl count
000227b: 02                                        ; block
000227c: 7f                                        ; i32
000227d: 41                                        ; i32.const
000227e: 01                                        ; i32 literal
000227f: 41                                        ; i32.const
0002280: 02                                        ; i32 literal
0002281: 0c                                        ; br
0002282: 00                                        ; break depth
0002283: 0b                                        ; end
0002284: 1a                                        ; drop
0002285: 0b                                        ; end
0002279: 0c                                        ; FIXUP func body size
; function body 179
0002286: 00                                        ; func body size (guess)
0002287: 00                                        ; local decl count
0002288: 43                                        ; f32.const
0002289: 0000 803f                                 ; f32 literal
000228d: fc                                        ; prefix
000228e: 00                                        ; i32.trunc_sat_f32_s
000228f: 1a                                        ; drop
0002290: 0b                                        ; end
0002286: 0a                                        ; FIXUP func body size
; function body 180
0002291: 00                                        ; func body size (guess)
0002292: 00                                        ; local decl count
0002293: 43                                        ; f32.const
0002294: 0000 803f                                 ; f32 literal
0002298: fc                                        ; prefix
0002299: 01                                        ; i32.trunc_sat_f32_u
000229a: 1a                                        ; drop
000229b: 0b                                        ; end
0002291: 0a                                        ; FIXUP func body size
; function body 181
000229c: 00                                        ; func body size (guess)
000229d: 00                                        ; local decl count
000229e: 44                                        ; f64.const
000229f: 0000 0000 0000 f03f                       ; f64 literal
00022a7: fc                                        ; prefix
00022a8: 02                                        ; i32.trunc_sat_f64_s
00022a9: 1a                                        ; drop
00022aa: 0b                                        ; end
000229c: 0e                                        ; FIXUP func body size
; function body 182
00022ab: 00                                        ; func body size (guess)
00022ac: 00                                        ; local decl count
00022ad: 44                                        ; f64.const
00022ae: 0000 0000 0000 f03f                       ; f64 literal
00022b6: fc                                        ; prefix
00022b7: 03                                        ; i32.trunc_sat_f64_u
00022b8: 1a                                        ; drop
00022b9: 0b                                        ; end
00022ab: 0e                                        ; FIXUP func body size
; function body 183
00022ba: 00                                        ; func body size (guess)
00022bb: 00                                        ; local decl count
00022bc: 43                                        ; f32.const
00022bd: 0000 803f                                 ; f32 literal
00022c1: fc                                        ; prefix
00022c2: 04                                        ; i64.trunc_sat_f32_s
00022c3: 1a                                        ; drop
00022c4: 0b                                        ; end
00022ba: 0a                                        ; FIXUP func body size
; function body 184
00022c5: 00                                        ; func body size (guess)
00022c6: 00                                        ; local decl count
00022c7: 43                                        ; f32.const
00022c8: 0000 803f                                 ; f32 literal
00022cc: fc                                        ; prefix
00022cd: 05                                        ; i64.trunc_sat_f32_u
00022ce: 1a                                        ; drop
00022cf: 0b                                        ; end
00022c5: 0a                                        ; FIXUP func body size
; function body 185
00022d0: 00                                        ; func body size (guess)
00022d1: 00                                        ; local decl count
00022d2: 44                                        ; f64.const
00022d3: 0000 0000 0000 f03f                       ; f64 literal
00022db: fc                                        ; prefix
00022dc: 06                                        ; i64.trunc_sat_f64_s
00022dd: 1a                                        ; drop
00022de: 0b                                        ; end
00022d0: 0e                                        ; FIXUP func body size
; function body 186
00022df: 00                                        ; func body size (guess)
00022e0: 00                                        ; local decl count
00022e1: 44                                        ; f64.const
00022e2: 0000 0000 0000 f03f                       ; f64 literal
00022ea: fc                                        ; prefix
00022eb: 07                                        ; i64.trunc_sat_f64_u
00022ec: 1a                                        ; drop
00022ed: 0b                                        ; end
00022df: 0e                                        ; FIXUP func body size
; function body 187
00022ee: 00                                        ; func body size (guess)
00022ef: 00                                        ; local decl count
00022f0: 41                                        ; i32.const
00022f1: 01                                        ; i32 literal
00022f2: 41                                        ; i32.const
00022f3: 02                                        ; i32 literal
00022f4: 41                                        ; i32.const
00022f5: 03                                        ; i32 literal
00022f6: fc                                        ; prefix
00022f7: 08                                        ; memory.init
00022f8: 00                                        ; memory.init segment
00022f9: 00                                        ; memory.init reserved
00022fa: 0b                                        ; end
00022ee: 0c                                        ; FIXUP func body size
; function body 188
00022fb: 00                                        ; func body size (guess)
00022fc: 00                                        ; local decl count
00022fd: fc                                        ; prefix
00022fe: 09                                        ; data.drop
00022ff: 00                                        ; data.drop segment
0002300: 0b                                        ; end
00022fb: 05                                        ; FIXUP func body size
; function body 189
0002301: 00                                        ; func body size (guess)
0002302: 00                                        ; local decl count
0002303: 41                                        ; i32.const
0002304: 01                                        ; i32 literal
0002305: 41                                        ; i32.const
0002306: 02                                        ; i32 literal
0002307: 41                                        ; i32.const
0002308: 03                                        ; i32 literal
0002309: fc                                        ; prefix
000230a: 0a                                        ; memory.copy
000230b: 00                                        ; memory.copy reserved
000230c: 00                                        ; memory.copy reserved
000230d: 0b                                        ; end
0002301: 0c                                        ; FIXUP func body size
; function body 190
000230e: 00                                        ; func body size (guess)
000230f: 00                                        ; local decl count
0002310: 41                                        ; i32.const
0002311: 01                                        ; i32 literal
0002312: 41                                        ; i32.const
0002313: 02                                        ; i32 literal
0002314: 41                                        ; i32.const
0002315: 03                                        ; i32 literal
0002316: fc                                        ; prefix
0002317: 0b                                        ; memory.fill
0002318: 00                                        ; memory.fill reserved
0002319: 0b                                        ; end
000230e: 0b                                        ; FIXUP func body size
; function body 191
000231a: 00                                        ; func body size (guess)
000231b: 00                                        ; local decl count
000231c: 41                                        ; i32.const
000231d: 01                                        ; i32 literal
000231e: 41                                        ; i32.const
000231f: 02                                        ; i32 literal
0002320: 41                                        ; i32.const
0002321: 03                                        ; i32 literal
0002322: fc                                        ; prefix
0002323: 0c                                        ; table.init
0002324: 00                                        ; table.init segment
0002325: 00                                        ; table.init table
0002326: 0b                                        ; end
000231a: 0c                                        ; FIXUP func body size
; function body 192
0002327: 00                                        ; func body size (guess)
0002328: 00                                        ; local decl count
0002329: fc                                        ; prefix
000232a: 0d                                        ; elem.drop
000232b: 00                                        ; elem.drop segment
000232c: 0b                                        ; end
0002327: 05                                        ; FIXUP func body size
; function body 193
000232d: 00                                        ; func body size (guess)
000232e: 00                                        ; local decl count
000232f: 41                                        ; i32.const
0002330: 01                                        ; i32 literal
0002331: 41                                        ; i32.const
0002332: 02                                        ; i32 literal
0002333: 41                                        ; i32.const
0002334: 03                                        ; i32 literal
0002335: fc                                        ; prefix
0002336: 0e                                        ; table.copy
0002337: 00                                        ; table.copy dst_table
0002338: 00                                        ; table.copy src_table
0002339: 0b                                        ; end
000232d: 0c                                        ; FIXUP func body size
; function body 194
000233a: 00                                        ; func body size (guess)
000233b: 00                                        ; local decl count
000233c: 41                                        ; i32.const
000233d: 01                                        ; i32 literal
000233e: fd                                        ; prefix
000233f: 00                                        ; v128.load
0002340: 04                                        ; alignment
0002341: 03                                        ; load offset
0002342: 1a                                        ; drop
0002343: 0b                                        ; end
000233a: 09                                        ; FIXUP func body size
; function body 195
0002344: 00                                        ; func body size (guess)
0002345: 00                                        ; local decl count
0002346: 41                                        ; i32.const
0002347: 01                                        ; i32 literal
0002348: fd                                        ; prefix
0002349: 02                                        ; v128.const
000234a: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000235a: fd                                        ; prefix
000235b: 01                                        ; v128.store
000235c: 04                                        ; alignment
000235d: 03                                        ; store offset
000235e: 0b                                        ; end
0002344: 1a                                        ; FIXUP func body size
; function body 196
000235f: 00                                        ; func body size (guess)
0002360: 00                                        ; local decl count
0002361: fd                                        ; prefix
0002362: 02                                        ; v128.const
0002363: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002373: 1a                                        ; drop
0002374: 0b                                        ; end
000235f: 15                                        ; FIXUP func body size
; function body 197
0002375: 00                                        ; func body size (guess)
0002376: 00                                        ; local decl count
0002377: 41                                        ; i32.const
0002378: 01                                        ; i32 literal
0002379: fd                                        ; prefix
000237a: 04                                        ; i8x16.splat
000237b: 1a                                        ; drop
000237c: 0b                                        ; end
0002375: 07                                        ; FIXUP func body size
; function body 198
000237d: 00                                        ; func body size (guess)
000237e: 00                                        ; local decl count
000237f: fd                                        ; prefix
0002380: 02                                        ; v128.const
0002381: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002391: fd                                        ; prefix
0002392: 05                                        ; i8x16.extract_lane_s
0002393: 0f                                        ; Simd Lane literal
0002394: 1a                                        ; drop
0002395: 0b                                        ; end
000237d: 18                                        ; FIXUP func body size
; function body 199
0002396: 00                                        ; func body size (guess)
0002397: 00                                        ; local decl count
0002398: fd                                        ; prefix
0002399: 02                                        ; v128.const
000239a: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00023aa: fd                                        ; prefix
00023ab: 06                                        ; i8x16.extract_lane_u
00023ac: 0f                                        ; Simd Lane literal
00023ad: 1a                                        ; drop
00023ae: 0b                                        ; end
0002396: 18                                        ; FIXUP func body size
; function body 200
00023af: 00                                        ; func body size (guess)
00023b0: 00                                        ; local decl count
00023b1: fd                                        ; prefix
00023b2: 02                                        ; v128.const
00023b3: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00023c3: 41                                        ; i32.const
00023c4: 00                                        ; i32 literal
00023c5: fd                                        ; prefix
00023c6: 07                                        ; i8x16.replace_lane
00023c7: 0f                                        ; Simd Lane literal
00023c8: 1a                                        ; drop
00023c9: 0b                                        ; end
00023af: 1a                                        ; FIXUP func body size
; function body 201
00023ca: 00                                        ; func body size (guess)
00023cb: 00                                        ; local decl count
00023cc: 41                                        ; i32.const
00023cd: 01                                        ; i32 literal
00023ce: fd                                        ; prefix
00023cf: 08                                        ; i16x8.splat
00023d0: 1a                                        ; drop
00023d1: 0b                                        ; end
00023ca: 07                                        ; FIXUP func body size
; function body 202
00023d2: 00                                        ; func body size (guess)
00023d3: 00                                        ; local decl count
00023d4: fd                                        ; prefix
00023d5: 02                                        ; v128.const
00023d6: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00023e6: fd                                        ; prefix
00023e7: 09                                        ; i16x8.extract_lane_s
00023e8: 07                                        ; Simd Lane literal
00023e9: 1a                                        ; drop
00023ea: 0b                                        ; end
00023d2: 18                                        ; FIXUP func body size
; function body 203
00023eb: 00                                        ; func body size (guess)
00023ec: 00                                        ; local decl count
00023ed: fd                                        ; prefix
00023ee: 02                                        ; v128.const
00023ef: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00023ff: fd                                        ; prefix
0002400: 0a                                        ; i16x8.extract_lane_u
0002401: 07                                        ; Simd Lane literal
0002402: 1a                                        ; drop
0002403: 0b                                        ; end
00023eb: 18                                        ; FIXUP func body size
; function body 204
0002404: 00                                        ; func body size (guess)
0002405: 00                                        ; local decl count
0002406: fd                                        ; prefix
0002407: 02                                        ; v128.const
0002408: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002418: 41                                        ; i32.const
0002419: 00                                        ; i32 literal
000241a: fd                                        ; prefix
000241b: 0b                                        ; i16x8.replace_lane
000241c: 07                                        ; Simd Lane literal
000241d: 1a                                        ; drop
000241e: 0b                                        ; end
0002404: 1a                                        ; FIXUP func body size
; function body 205
000241f: 00                                        ; func body size (guess)
0002420: 00                                        ; local decl count
0002421: 41                                        ; i32.const
0002422: 01                                        ; i32 literal
0002423: fd                                        ; prefix
0002424: 0c                                        ; i32x4.splat
0002425: 1a                                        ; drop
0002426: 0b                                        ; end
000241f: 07                                        ; FIXUP func body size
; function body 206
0002427: 00                                        ; func body size (guess)
0002428: 00                                        ; local decl count
0002429: fd                                        ; prefix
000242a: 02                                        ; v128.const
000242b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000243b: fd                                        ; prefix
000243c: 0d                                        ; i32x4.extract_lane
000243d: 03                                        ; Simd Lane literal
000243e: 1a                                        ; drop
000243f: 0b                                        ; end
0002427: 18                                        ; FIXUP func body size
; function body 207
0002440: 00                                        ; func body size (guess)
0002441: 00                                        ; local decl count
0002442: fd                                        ; prefix
0002443: 02                                        ; v128.const
0002444: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002454: 41                                        ; i32.const
0002455: 00                                        ; i32 literal
0002456: fd                                        ; prefix
0002457: 0e                                        ; i32x4.replace_lane
0002458: 03                                        ; Simd Lane literal
0002459: 1a                                        ; drop
000245a: 0b                                        ; end
0002440: 1a                                        ; FIXUP func body size
; function body 208
000245b: 00                                        ; func body size (guess)
000245c: 00                                        ; local decl count
000245d: 42                                        ; i64.const
000245e: 01                                        ; i64 literal
000245f: fd                                        ; prefix
0002460: 0f                                        ; i64x2.splat
0002461: 1a                                        ; drop
0002462: 0b                                        ; end
000245b: 07                                        ; FIXUP func body size
; function body 209
0002463: 00                                        ; func body size (guess)
0002464: 00                                        ; local decl count
0002465: fd                                        ; prefix
0002466: 02                                        ; v128.const
0002467: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002477: fd                                        ; prefix
0002478: 10                                        ; i64x2.extract_lane
0002479: 01                                        ; Simd Lane literal
000247a: 1a                                        ; drop
000247b: 0b                                        ; end
0002463: 18                                        ; FIXUP func body size
; function body 210
000247c: 00                                        ; func body size (guess)
000247d: 00                                        ; local decl count
000247e: fd                                        ; prefix
000247f: 02                                        ; v128.const
0002480: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002490: 42                                        ; i64.const
0002491: 00                                        ; i64 literal
0002492: fd                                        ; prefix
0002493: 11                                        ; i64x2.replace_lane
0002494: 01                                        ; Simd Lane literal
0002495: 1a                                        ; drop
0002496: 0b                                        ; end
000247c: 1a                                        ; FIXUP func body size
; function body 211
0002497: 00                                        ; func body size (guess)
0002498: 00                                        ; local decl count
0002499: 43                                        ; f32.const
000249a: 0000 803f                                 ; f32 literal
000249e: fd                                        ; prefix
000249f: 12                                        ; f32x4.splat
00024a0: 1a                                        ; drop
00024a1: 0b                                        ; end
0002497: 0a                                        ; FIXUP func body size
; function body 212
00024a2: 00                                        ; func body size (guess)
00024a3: 00                                        ; local decl count
00024a4: fd                                        ; prefix
00024a5: 02                                        ; v128.const
00024a6: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00024b6: fd                                        ; prefix
00024b7: 13                                        ; f32x4.extract_lane
00024b8: 03                                        ; Simd Lane literal
00024b9: 1a                                        ; drop
00024ba: 0b                                        ; end
00024a2: 18                                        ; FIXUP func body size
; function body 213
00024bb: 00                                        ; func body size (guess)
00024bc: 00                                        ; local decl count
00024bd: fd                                        ; prefix
00024be: 02                                        ; v128.const
00024bf: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00024cf: 43                                        ; f32.const
00024d0: 0000 0000                                 ; f32 literal
00024d4: fd                                        ; prefix
00024d5: 14                                        ; f32x4.replace_lane
00024d6: 03                                        ; Simd Lane literal
00024d7: 1a                                        ; drop
00024d8: 0b                                        ; end
00024bb: 1d                                        ; FIXUP func body size
; function body 214
00024d9: 00                                        ; func body size (guess)
00024da: 00                                        ; local decl count
00024db: 44                                        ; f64.const
00024dc: 0000 0000 0000 f03f                       ; f64 literal
00024e4: fd                                        ; prefix
00024e5: 15                                        ; f64x2.splat
00024e6: 1a                                        ; drop
00024e7: 0b                                        ; end
00024d9: 0e                                        ; FIXUP func body size
; function body 215
00024e8: 00                                        ; func body size (guess)
00024e9: 00                                        ; local decl count
00024ea: fd                                        ; prefix
00024eb: 02                                        ; v128.const
00024ec: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00024fc: fd                                        ; prefix
00024fd: 16                                        ; f64x2.extract_lane
00024fe: 01                                        ; Simd Lane literal
00024ff: 1a                                        ; drop
0002500: 0b                                        ; end
00024e8: 18                                        ; FIXUP func body size
; function body 216
0002501: 00                                        ; func body size (guess)
0002502: 00                                        ; local decl count
0002503: fd                                        ; prefix
0002504: 02                                        ; v128.const
0002505: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002515: 44                                        ; f64.const
0002516: 0000 0000 0000 0000                       ; f64 literal
000251e: fd                                        ; prefix
000251f: 17                                        ; f64x2.replace_lane
0002520: 01                                        ; Simd Lane literal
0002521: 1a                                        ; drop
0002522: 0b                                        ; end
0002501: 21                                        ; FIXUP func body size
; function body 217
0002523: 00                                        ; func body size (guess)
0002524: 00                                        ; local decl count
0002525: fd                                        ; prefix
0002526: 02                                        ; v128.const
0002527: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002537: fd                                        ; prefix
0002538: 02                                        ; v128.const
0002539: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002549: fd                                        ; prefix
000254a: 18                                        ; i8x16.eq
000254b: 1a                                        ; drop
000254c: 0b                                        ; end
0002523: 29                                        ; FIXUP func body size
; function body 218
000254d: 00                                        ; func body size (guess)
000254e: 00                                        ; local decl count
000254f: fd                                        ; prefix
0002550: 02                                        ; v128.const
0002551: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002561: fd                                        ; prefix
0002562: 02                                        ; v128.const
0002563: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002573: fd                                        ; prefix
0002574: 19                                        ; i8x16.ne
0002575: 1a                                        ; drop
0002576: 0b                                        ; end
000254d: 29                                        ; FIXUP func body size
; function body 219
0002577: 00                                        ; func body size (guess)
0002578: 00                                        ; local decl count
0002579: fd                                        ; prefix
000257a: 02                                        ; v128.const
000257b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000258b: fd                                        ; prefix
000258c: 02                                        ; v128.const
000258d: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000259d: fd                                        ; prefix
000259e: 1a                                        ; i8x16.lt_s
000259f: 1a                                        ; drop
00025a0: 0b                                        ; end
0002577: 29                                        ; FIXUP func body size
; function body 220
00025a1: 00                                        ; func body size (guess)
00025a2: 00                                        ; local decl count
00025a3: fd                                        ; prefix
00025a4: 02                                        ; v128.const
00025a5: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00025b5: fd                                        ; prefix
00025b6: 02                                        ; v128.const
00025b7: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00025c7: fd                                        ; prefix
00025c8: 1b                                        ; i8x16.lt_u
00025c9: 1a                                        ; drop
00025ca: 0b                                        ; end
00025a1: 29                                        ; FIXUP func body size
; function body 221
00025cb: 00                                        ; func body size (guess)
00025cc: 00                                        ; local decl count
00025cd: fd                                        ; prefix
00025ce: 02                                        ; v128.const
00025cf: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00025df: fd                                        ; prefix
00025e0: 02                                        ; v128.const
00025e1: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00025f1: fd                                        ; prefix
00025f2: 1c                                        ; i8x16.gt_s
00025f3: 1a                                        ; drop
00025f4: 0b                                        ; end
00025cb: 29                                        ; FIXUP func body size
; function body 222
00025f5: 00                                        ; func body size (guess)
00025f6: 00                                        ; local decl count
00025f7: fd                                        ; prefix
00025f8: 02                                        ; v128.const
00025f9: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002609: fd                                        ; prefix
000260a: 02                                        ; v128.const
000260b: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000261b: fd                                        ; prefix
000261c: 1d                                        ; i8x16.gt_u
000261d: 1a                                        ; drop
000261e: 0b                                        ; end
00025f5: 29                                        ; FIXUP func body size
; function body 223
000261f: 00                                        ; func body size (guess)
0002620: 00                                        ; local decl count
0002621: fd                                        ; prefix
0002622: 02                                        ; v128.const
0002623: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002633: fd                                        ; prefix
0002634: 02                                        ; v128.const
0002635: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002645: fd                                        ; prefix
0002646: 1e                                        ; i8x16.le_s
0002647: 1a                                        ; drop
0002648: 0b                                        ; end
000261f: 29                                        ; FIXUP func body size
; function body 224
0002649: 00                                        ; func body size (guess)
000264a: 00                                        ; local decl count
000264b: fd                                        ; prefix
000264c: 02                                        ; v128.const
000264d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000265d: fd                                        ; prefix
000265e: 02                                        ; v128.const
000265f: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000266f: fd                                        ; prefix
0002670: 1f                                        ; i8x16.le_u
0002671: 1a                                        ; drop
0002672: 0b                                        ; end
0002649: 29                                        ; FIXUP func body size
; function body 225
0002673: 00                                        ; func body size (guess)
0002674: 00                                        ; local decl count
0002675: fd                                        ; prefix
0002676: 02                                        ; v128.const
0002677: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002687: fd                                        ; prefix
0002688: 02                                        ; v128.const
0002689: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002699: fd                                        ; prefix
000269a: 20                                        ; i8x16.ge_s
000269b: 1a                                        ; drop
000269c: 0b                                        ; end
0002673: 29                                        ; FIXUP func body size
; function body 226
000269d: 00                                        ; func body size (guess)
000269e: 00                                        ; local decl count
000269f: fd                                        ; prefix
00026a0: 02                                        ; v128.const
00026a1: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00026b1: fd                                        ; prefix
00026b2: 02                                        ; v128.const
00026b3: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00026c3: fd                                        ; prefix
00026c4: 21                                        ; i8x16.ge_u
00026c5: 1a                                        ; drop
00026c6: 0b                                        ; end
000269d: 29                                        ; FIXUP func body size
; function body 227
00026c7: 00                                        ; func body size (guess)
00026c8: 00                                        ; local decl count
00026c9: fd                                        ; prefix
00026ca: 02                                        ; v128.const
00026cb: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00026db: fd                                        ; prefix
00026dc: 02                                        ; v128.const
00026dd: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00026ed: fd                                        ; prefix
00026ee: 22                                        ; i16x8.eq
00026ef: 1a                                        ; drop
00026f0: 0b                                        ; end
00026c7: 29                                        ; FIXUP func body size
; function body 228
00026f1: 00                                        ; func body size (guess)
00026f2: 00                                        ; local decl count
00026f3: fd                                        ; prefix
00026f4: 02                                        ; v128.const
00026f5: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002705: fd                                        ; prefix
0002706: 02                                        ; v128.const
0002707: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002717: fd                                        ; prefix
0002718: 23                                        ; i16x8.ne
0002719: 1a                                        ; drop
000271a: 0b                                        ; end
00026f1: 29                                        ; FIXUP func body size
; function body 229
000271b: 00                                        ; func body size (guess)
000271c: 00                                        ; local decl count
000271d: fd                                        ; prefix
000271e: 02                                        ; v128.const
000271f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000272f: fd                                        ; prefix
0002730: 02                                        ; v128.const
0002731: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002741: fd                                        ; prefix
0002742: 24                                        ; i16x8.lt_s
0002743: 1a                                        ; drop
0002744: 0b                                        ; end
000271b: 29                                        ; FIXUP func body size
; function body 230
0002745: 00                                        ; func body size (guess)
0002746: 00                                        ; local decl count
0002747: fd                                        ; prefix
0002748: 02                                        ; v128.const
0002749: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002759: fd                                        ; prefix
000275a: 02                                        ; v128.const
000275b: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000276b: fd                                        ; prefix
000276c: 25                                        ; i16x8.lt_u
000276d: 1a                                        ; drop
000276e: 0b                                        ; end
0002745: 29                                        ; FIXUP func body size
; function body 231
000276f: 00                                        ; func body size (guess)
0002770: 00                                        ; local decl count
0002771: fd                                        ; prefix
0002772: 02                                        ; v128.const
0002773: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002783: fd                                        ; prefix
0002784: 02                                        ; v128.const
0002785: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002795: fd                                        ; prefix
0002796: 26                                        ; i16x8.gt_s
0002797: 1a                                        ; drop
0002798: 0b                                        ; end
000276f: 29                                        ; FIXUP func body size
; function body 232
0002799: 00                                        ; func body size (guess)
000279a: 00                                        ; local decl count
000279b: fd                                        ; prefix
000279c: 02                                        ; v128.const
000279d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00027ad: fd                                        ; prefix
00027ae: 02                                        ; v128.const
00027af: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00027bf: fd                                        ; prefix
00027c0: 27                                        ; i16x8.gt_u
00027c1: 1a                                        ; drop
00027c2: 0b                                        ; end
0002799: 29                                        ; FIXUP func body size
; function body 233
00027c3: 00                                        ; func body size (guess)
00027c4: 00                                        ; local decl count
00027c5: fd                                        ; prefix
00027c6: 02                                        ; v128.const
00027c7: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00027d7: fd                                        ; prefix
00027d8: 02                                        ; v128.const
00027d9: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00027e9: fd                                        ; prefix
00027ea: 28                                        ; i16x8.le_s
00027eb: 1a                                        ; drop
00027ec: 0b                                        ; end
00027c3: 29                                        ; FIXUP func body size
; function body 234
00027ed: 00                                        ; func body size (guess)
00027ee: 00                                        ; local decl count
00027ef: fd                                        ; prefix
00027f0: 02                                        ; v128.const
00027f1: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002801: fd                                        ; prefix
0002802: 02                                        ; v128.const
0002803: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002813: fd                                        ; prefix
0002814: 29                                        ; i16x8.le_u
0002815: 1a                                        ; drop
0002816: 0b                                        ; end
00027ed: 29                                        ; FIXUP func body size
; function body 235
0002817: 00                                        ; func body size (guess)
0002818: 00                                        ; local decl count
0002819: fd                                        ; prefix
000281a: 02                                        ; v128.const
000281b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000282b: fd                                        ; prefix
000282c: 02                                        ; v128.const
000282d: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000283d: fd                                        ; prefix
000283e: 2a                                        ; i16x8.ge_s
000283f: 1a                                        ; drop
0002840: 0b                                        ; end
0002817: 29                                        ; FIXUP func body size
; function body 236
0002841: 00                                        ; func body size (guess)
0002842: 00                                        ; local decl count
0002843: fd                                        ; prefix
0002844: 02                                        ; v128.const
0002845: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002855: fd                                        ; prefix
0002856: 02                                        ; v128.const
0002857: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002867: fd                                        ; prefix
0002868: 2b                                        ; i16x8.ge_u
0002869: 1a                                        ; drop
000286a: 0b                                        ; end
0002841: 29                                        ; FIXUP func body size
; function body 237
000286b: 00                                        ; func body size (guess)
000286c: 00                                        ; local decl count
000286d: fd                                        ; prefix
000286e: 02                                        ; v128.const
000286f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000287f: fd                                        ; prefix
0002880: 02                                        ; v128.const
0002881: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002891: fd                                        ; prefix
0002892: 2c                                        ; i32x4.eq
0002893: 1a                                        ; drop
0002894: 0b                                        ; end
000286b: 29                                        ; FIXUP func body size
; function body 238
0002895: 00                                        ; func body size (guess)
0002896: 00                                        ; local decl count
0002897: fd                                        ; prefix
0002898: 02                                        ; v128.const
0002899: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00028a9: fd                                        ; prefix
00028aa: 02                                        ; v128.const
00028ab: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00028bb: fd                                        ; prefix
00028bc: 2d                                        ; i32x4.ne
00028bd: 1a                                        ; drop
00028be: 0b                                        ; end
0002895: 29                                        ; FIXUP func body size
; function body 239
00028bf: 00                                        ; func body size (guess)
00028c0: 00                                        ; local decl count
00028c1: fd                                        ; prefix
00028c2: 02                                        ; v128.const
00028c3: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00028d3: fd                                        ; prefix
00028d4: 02                                        ; v128.const
00028d5: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00028e5: fd                                        ; prefix
00028e6: 2e                                        ; i32x4.lt_s
00028e7: 1a                                        ; drop
00028e8: 0b                                        ; end
00028bf: 29                                        ; FIXUP func body size
; function body 240
00028e9: 00                                        ; func body size (guess)
00028ea: 00                                        ; local decl count
00028eb: fd                                        ; prefix
00028ec: 02                                        ; v128.const
00028ed: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00028fd: fd                                        ; prefix
00028fe: 02                                        ; v128.const
00028ff: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000290f: fd                                        ; prefix
0002910: 2f                                        ; i32x4.lt_u
0002911: 1a                                        ; drop
0002912: 0b                                        ; end
00028e9: 29                                        ; FIXUP func body size
; function body 241
0002913: 00                                        ; func body size (guess)
0002914: 00                                        ; local decl count
0002915: fd                                        ; prefix
0002916: 02                                        ; v128.const
0002917: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002927: fd                                        ; prefix
0002928: 02                                        ; v128.const
0002929: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002939: fd                                        ; prefix
000293a: 30                                        ; i32x4.gt_s
000293b: 1a                                        ; drop
000293c: 0b                                        ; end
0002913: 29                                        ; FIXUP func body size
; function body 242
000293d: 00                                        ; func body size (guess)
000293e: 00                                        ; local decl count
000293f: fd                                        ; prefix
0002940: 02                                        ; v128.const
0002941: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002951: fd                                        ; prefix
0002952: 02                                        ; v128.const
0002953: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002963: fd                                        ; prefix
0002964: 31                                        ; i32x4.gt_u
0002965: 1a                                        ; drop
0002966: 0b                                        ; end
000293d: 29                                        ; FIXUP func body size
; function body 243
0002967: 00                                        ; func body size (guess)
0002968: 00                                        ; local decl count
0002969: fd                                        ; prefix
000296a: 02                                        ; v128.const
000296b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000297b: fd                                        ; prefix
000297c: 02                                        ; v128.const
000297d: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000298d: fd                                        ; prefix
000298e: 32                                        ; i32x4.le_s
000298f: 1a                                        ; drop
0002990: 0b                                        ; end
0002967: 29                                        ; FIXUP func body size
; function body 244
0002991: 00                                        ; func body size (guess)
0002992: 00                                        ; local decl count
0002993: fd                                        ; prefix
0002994: 02                                        ; v128.const
0002995: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00029a5: fd                                        ; prefix
00029a6: 02                                        ; v128.const
00029a7: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00029b7: fd                                        ; prefix
00029b8: 33                                        ; i32x4.le_u
00029b9: 1a                                        ; drop
00029ba: 0b                                        ; end
0002991: 29                                        ; FIXUP func body size
; function body 245
00029bb: 00                                        ; func body size (guess)
00029bc: 00                                        ; local decl count
00029bd: fd                                        ; prefix
00029be: 02                                        ; v128.const
00029bf: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00029cf: fd                                        ; prefix
00029d0: 02                                        ; v128.const
00029d1: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00029e1: fd                                        ; prefix
00029e2: 34                                        ; i32x4.ge_s
00029e3: 1a                                        ; drop
00029e4: 0b                                        ; end
00029bb: 29                                        ; FIXUP func body size
; function body 246
00029e5: 00                                        ; func body size (guess)
00029e6: 00                                        ; local decl count
00029e7: fd                                        ; prefix
00029e8: 02                                        ; v128.const
00029e9: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00029f9: fd                                        ; prefix
00029fa: 02                                        ; v128.const
00029fb: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002a0b: fd                                        ; prefix
0002a0c: 35                                        ; i32x4.ge_u
0002a0d: 1a                                        ; drop
0002a0e: 0b                                        ; end
00029e5: 29                                        ; FIXUP func body size
; function body 247
0002a0f: 00                                        ; func body size (guess)
0002a10: 00                                        ; local decl count
0002a11: fd                                        ; prefix
0002a12: 02                                        ; v128.const
0002a13: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002a23: fd                                        ; prefix
0002a24: 02                                        ; v128.const
0002a25: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002a35: fd                                        ; prefix
0002a36: 40                                        ; f32x4.eq
0002a37: 1a                                        ; drop
0002a38: 0b                                        ; end
0002a0f: 29                                        ; FIXUP func body size
; function body 248
0002a39: 00                                        ; func body size (guess)
0002a3a: 00                                        ; local decl count
0002a3b: fd                                        ; prefix
0002a3c: 02                                        ; v128.const
0002a3d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002a4d: fd                                        ; prefix
0002a4e: 02                                        ; v128.const
0002a4f: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002a5f: fd                                        ; prefix
0002a60: 41                                        ; f32x4.ne
0002a61: 1a                                        ; drop
0002a62: 0b                                        ; end
0002a39: 29                                        ; FIXUP func body size
; function body 249
0002a63: 00                                        ; func body size (guess)
0002a64: 00                                        ; local decl count
0002a65: fd                                        ; prefix
0002a66: 02                                        ; v128.const
0002a67: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002a77: fd                                        ; prefix
0002a78: 02                                        ; v128.const
0002a79: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002a89: fd                                        ; prefix
0002a8a: 42                                        ; f32x4.lt
0002a8b: 1a                                        ; drop
0002a8c: 0b                                        ; end
0002a63: 29                                        ; FIXUP func body size
; function body 250
0002a8d: 00                                        ; func body size (guess)
0002a8e: 00                                        ; local decl count
0002a8f: fd                                        ; prefix
0002a90: 02                                        ; v128.const
0002a91: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002aa1: fd                                        ; prefix
0002aa2: 02                                        ; v128.const
0002aa3: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002ab3: fd                                        ; prefix
0002ab4: 43                                        ; f32x4.gt
0002ab5: 1a                                        ; drop
0002ab6: 0b                                        ; end
0002a8d: 29                                        ; FIXUP func body size
; function body 251
0002ab7: 00                                        ; func body size (guess)
0002ab8: 00                                        ; local decl count
0002ab9: fd                                        ; prefix
0002aba: 02                                        ; v128.const
0002abb: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002acb: fd                                        ; prefix
0002acc: 02                                        ; v128.const
0002acd: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002add: fd                                        ; prefix
0002ade: 44                                        ; f32x4.le
0002adf: 1a                                        ; drop
0002ae0: 0b                                        ; end
0002ab7: 29                                        ; FIXUP func body size
; function body 252
0002ae1: 00                                        ; func body size (guess)
0002ae2: 00                                        ; local decl count
0002ae3: fd                                        ; prefix
0002ae4: 02                                        ; v128.const
0002ae5: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002af5: fd                                        ; prefix
0002af6: 02                                        ; v128.const
0002af7: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002b07: fd                                        ; prefix
0002b08: 45                                        ; f32x4.ge
0002b09: 1a                                        ; drop
0002b0a: 0b                                        ; end
0002ae1: 29                                        ; FIXUP func body size
; function body 253
0002b0b: 00                                        ; func body size (guess)
0002b0c: 00                                        ; local decl count
0002b0d: fd                                        ; prefix
0002b0e: 02                                        ; v128.const
0002b0f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002b1f: fd                                        ; prefix
0002b20: 02                                        ; v128.const
0002b21: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002b31: fd                                        ; prefix
0002b32: 46                                        ; f64x2.eq
0002b33: 1a                                        ; drop
0002b34: 0b                                        ; end
0002b0b: 29                                        ; FIXUP func body size
; function body 254
0002b35: 00                                        ; func body size (guess)
0002b36: 00                                        ; local decl count
0002b37: fd                                        ; prefix
0002b38: 02                                        ; v128.const
0002b39: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002b49: fd                                        ; prefix
0002b4a: 02                                        ; v128.const
0002b4b: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002b5b: fd                                        ; prefix
0002b5c: 47                                        ; f64x2.ne
0002b5d: 1a                                        ; drop
0002b5e: 0b                                        ; end
0002b35: 29                                        ; FIXUP func body size
; function body 255
0002b5f: 00                                        ; func body size (guess)
0002b60: 00                                        ; local decl count
0002b61: fd                                        ; prefix
0002b62: 02                                        ; v128.const
0002b63: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002b73: fd                                        ; prefix
0002b74: 02                                        ; v128.const
0002b75: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002b85: fd                                        ; prefix
0002b86: 48                                        ; f64x2.lt
0002b87: 1a                                        ; drop
0002b88: 0b                                        ; end
0002b5f: 29                                        ; FIXUP func body size
; function body 256
0002b89: 00                                        ; func body size (guess)
0002b8a: 00                                        ; local decl count
0002b8b: fd                                        ; prefix
0002b8c: 02                                        ; v128.const
0002b8d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002b9d: fd                                        ; prefix
0002b9e: 02                                        ; v128.const
0002b9f: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002baf: fd                                        ; prefix
0002bb0: 49                                        ; f64x2.gt
0002bb1: 1a                                        ; drop
0002bb2: 0b                                        ; end
0002b89: 29                                        ; FIXUP func body size
; function body 257
0002bb3: 00                                        ; func body size (guess)
0002bb4: 00                                        ; local decl count
0002bb5: fd                                        ; prefix
0002bb6: 02                                        ; v128.const
0002bb7: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002bc7: fd                                        ; prefix
0002bc8: 02                                        ; v128.const
0002bc9: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002bd9: fd                                        ; prefix
0002bda: 4a                                        ; f64x2.le
0002bdb: 1a                                        ; drop
0002bdc: 0b                                        ; end
0002bb3: 29                                        ; FIXUP func body size
; function body 258
0002bdd: 00                                        ; func body size (guess)
0002bde: 00                                        ; local decl count
0002bdf: fd                                        ; prefix
0002be0: 02                                        ; v128.const
0002be1: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002bf1: fd                                        ; prefix
0002bf2: 02                                        ; v128.const
0002bf3: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002c03: fd                                        ; prefix
0002c04: 4b                                        ; f64x2.ge
0002c05: 1a                                        ; drop
0002c06: 0b                                        ; end
0002bdd: 29                                        ; FIXUP func body size
; function body 259
0002c07: 00                                        ; func body size (guess)
0002c08: 00                                        ; local decl count
0002c09: fd                                        ; prefix
0002c0a: 02                                        ; v128.const
0002c0b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002c1b: fd                                        ; prefix
0002c1c: 4c                                        ; v128.not
0002c1d: 1a                                        ; drop
0002c1e: 0b                                        ; end
0002c07: 17                                        ; FIXUP func body size
; function body 260
0002c1f: 00                                        ; func body size (guess)
0002c20: 00                                        ; local decl count
0002c21: fd                                        ; prefix
0002c22: 02                                        ; v128.const
0002c23: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002c33: fd                                        ; prefix
0002c34: 02                                        ; v128.const
0002c35: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002c45: fd                                        ; prefix
0002c46: 4d                                        ; v128.and
0002c47: 1a                                        ; drop
0002c48: 0b                                        ; end
0002c1f: 29                                        ; FIXUP func body size
; function body 261
0002c49: 00                                        ; func body size (guess)
0002c4a: 00                                        ; local decl count
0002c4b: fd                                        ; prefix
0002c4c: 02                                        ; v128.const
0002c4d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002c5d: fd                                        ; prefix
0002c5e: 02                                        ; v128.const
0002c5f: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002c6f: fd                                        ; prefix
0002c70: 4e                                        ; v128.or
0002c71: 1a                                        ; drop
0002c72: 0b                                        ; end
0002c49: 29                                        ; FIXUP func body size
; function body 262
0002c73: 00                                        ; func body size (guess)
0002c74: 00                                        ; local decl count
0002c75: fd                                        ; prefix
0002c76: 02                                        ; v128.const
0002c77: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002c87: fd                                        ; prefix
0002c88: 02                                        ; v128.const
0002c89: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002c99: fd                                        ; prefix
0002c9a: 4f                                        ; v128.xor
0002c9b: 1a                                        ; drop
0002c9c: 0b                                        ; end
0002c73: 29                                        ; FIXUP func body size
; function body 263
0002c9d: 00                                        ; func body size (guess)
0002c9e: 00                                        ; local decl count
0002c9f: fd                                        ; prefix
0002ca0: 02                                        ; v128.const
0002ca1: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002cb1: fd                                        ; prefix
0002cb2: 02                                        ; v128.const
0002cb3: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002cc3: fd                                        ; prefix
0002cc4: 02                                        ; v128.const
0002cc5: 0300 0000 0300 0000 0300 0000 0300 0000   ; v128 literal
0002cd5: fd                                        ; prefix
0002cd6: 50                                        ; v128.bitselect
0002cd7: 1a                                        ; drop
0002cd8: 0b                                        ; end
0002c9d: 3b                                        ; FIXUP func body size
; function body 264
0002cd9: 00                                        ; func body size (guess)
0002cda: 00                                        ; local decl count
0002cdb: fd                                        ; prefix
0002cdc: 02                                        ; v128.const
0002cdd: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002ced: fd                                        ; prefix
0002cee: 51                                        ; i8x16.neg
0002cef: 1a                                        ; drop
0002cf0: 0b                                        ; end
0002cd9: 17                                        ; FIXUP func body size
; function body 265
0002cf1: 00                                        ; func body size (guess)
0002cf2: 00                                        ; local decl count
0002cf3: fd                                        ; prefix
0002cf4: 02                                        ; v128.const
0002cf5: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002d05: fd                                        ; prefix
0002d06: 52                                        ; i8x16.any_true
0002d07: 1a                                        ; drop
0002d08: 0b                                        ; end
0002cf1: 17                                        ; FIXUP func body size
; function body 266
0002d09: 00                                        ; func body size (guess)
0002d0a: 00                                        ; local decl count
0002d0b: fd                                        ; prefix
0002d0c: 02                                        ; v128.const
0002d0d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002d1d: fd                                        ; prefix
0002d1e: 53                                        ; i8x16.all_true
0002d1f: 1a                                        ; drop
0002d20: 0b                                        ; end
0002d09: 17                                        ; FIXUP func body size
; function body 267
0002d21: 00                                        ; func body size (guess)
0002d22: 00                                        ; local decl count
0002d23: fd                                        ; prefix
0002d24: 02                                        ; v128.const
0002d25: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002d35: 41                                        ; i32.const
0002d36: 00                                        ; i32 literal
0002d37: fd                                        ; prefix
0002d38: 54                                        ; i8x16.shl
0002d39: 1a                                        ; drop
0002d3a: 0b                                        ; end
0002d21: 19                                        ; FIXUP func body size
; function body 268
0002d3b: 00                                        ; func body size (guess)
0002d3c: 00                                        ; local decl count
0002d3d: fd                                        ; prefix
0002d3e: 02                                        ; v128.const
0002d3f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002d4f: 41                                        ; i32.const
0002d50: 00                                        ; i32 literal
0002d51: fd                                        ; prefix
0002d52: 55                                        ; i8x16.shr_s
0002d53: 1a                                        ; drop
0002d54: 0b                                        ; end
0002d3b: 19                                        ; FIXUP func body size
; function body 269
0002d55: 00                                        ; func body size (guess)
0002d56: 00                                        ; local decl count
0002d57: fd                                        ; prefix
0002d58: 02                                        ; v128.const
0002d59: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002d69: 41                                        ; i32.const
0002d6a: 00                                        ; i32 literal
0002d6b: fd                                        ; prefix
0002d6c: 56                                        ; i8x16.shr_u
0002d6d: 1a                                        ; drop
0002d6e: 0b                                        ; end
0002d55: 19                                        ; FIXUP func body size
; function body 270
0002d6f: 00                                        ; func body size (guess)
0002d70: 00                                        ; local decl count
0002d71: fd                                        ; prefix
0002d72: 02                                        ; v128.const
0002d73: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002d83: fd                                        ; prefix
0002d84: 02                                        ; v128.const
0002d85: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002d95: fd                                        ; prefix
0002d96: 57                                        ; i8x16.add
0002d97: 1a                                        ; drop
0002d98: 0b                                        ; end
0002d6f: 29                                        ; FIXUP func body size
; function body 271
0002d99: 00                                        ; func body size (guess)
0002d9a: 00                                        ; local decl count
0002d9b: fd                                        ; prefix
0002d9c: 02                                        ; v128.const
0002d9d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002dad: fd                                        ; prefix
0002dae: 02                                        ; v128.const
0002daf: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002dbf: fd                                        ; prefix
0002dc0: 58                                        ; i8x16.add_saturate_s
0002dc1: 1a                                        ; drop
0002dc2: 0b                                        ; end
0002d99: 29                                        ; FIXUP func body size
; function body 272
0002dc3: 00                                        ; func body size (guess)
0002dc4: 00                                        ; local decl count
0002dc5: fd                                        ; prefix
0002dc6: 02                                        ; v128.const
0002dc7: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002dd7: fd                                        ; prefix
0002dd8: 02                                        ; v128.const
0002dd9: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002de9: fd                                        ; prefix
0002dea: 59                                        ; i8x16.add_saturate_u
0002deb: 1a                                        ; drop
0002dec: 0b                                        ; end
0002dc3: 29                                        ; FIXUP func body size
; function body 273
0002ded: 00                                        ; func body size (guess)
0002dee: 00                                        ; local decl count
0002def: fd                                        ; prefix
0002df0: 02                                        ; v128.const
0002df1: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002e01: fd                                        ; prefix
0002e02: 02                                        ; v128.const
0002e03: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002e13: fd                                        ; prefix
0002e14: 5a                                        ; i8x16.sub
0002e15: 1a                                        ; drop
0002e16: 0b                                        ; end
0002ded: 29                                        ; FIXUP func body size
; function body 274
0002e17: 00                                        ; func body size (guess)
0002e18: 00                                        ; local decl count
0002e19: fd                                        ; prefix
0002e1a: 02                                        ; v128.const
0002e1b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002e2b: fd                                        ; prefix
0002e2c: 02                                        ; v128.const
0002e2d: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002e3d: fd                                        ; prefix
0002e3e: 5b                                        ; i8x16.sub_saturate_s
0002e3f: 1a                                        ; drop
0002e40: 0b                                        ; end
0002e17: 29                                        ; FIXUP func body size
; function body 275
0002e41: 00                                        ; func body size (guess)
0002e42: 00                                        ; local decl count
0002e43: fd                                        ; prefix
0002e44: 02                                        ; v128.const
0002e45: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002e55: fd                                        ; prefix
0002e56: 02                                        ; v128.const
0002e57: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002e67: fd                                        ; prefix
0002e68: 5c                                        ; i8x16.sub_saturate_u
0002e69: 1a                                        ; drop
0002e6a: 0b                                        ; end
0002e41: 29                                        ; FIXUP func body size
; function body 276
0002e6b: 00                                        ; func body size (guess)
0002e6c: 00                                        ; local decl count
0002e6d: fd                                        ; prefix
0002e6e: 02                                        ; v128.const
0002e6f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002e7f: fd                                        ; prefix
0002e80: 02                                        ; v128.const
0002e81: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002e91: fd                                        ; prefix
0002e92: 5d                                        ; i8x16.mul
0002e93: 1a                                        ; drop
0002e94: 0b                                        ; end
0002e6b: 29                                        ; FIXUP func body size
; function body 277
0002e95: 00                                        ; func body size (guess)
0002e96: 00                                        ; local decl count
0002e97: fd                                        ; prefix
0002e98: 02                                        ; v128.const
0002e99: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002ea9: fd                                        ; prefix
0002eaa: 62                                        ; i16x8.neg
0002eab: 1a                                        ; drop
0002eac: 0b                                        ; end
0002e95: 17                                        ; FIXUP func body size
; function body 278
0002ead: 00                                        ; func body size (guess)
0002eae: 00                                        ; local decl count
0002eaf: fd                                        ; prefix
0002eb0: 02                                        ; v128.const
0002eb1: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002ec1: fd                                        ; prefix
0002ec2: 63                                        ; i16x8.any_true
0002ec3: 1a                                        ; drop
0002ec4: 0b                                        ; end
0002ead: 17                                        ; FIXUP func body size
; function body 279
0002ec5: 00                                        ; func body size (guess)
0002ec6: 00                                        ; local decl count
0002ec7: fd                                        ; prefix
0002ec8: 02                                        ; v128.const
0002ec9: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002ed9: fd                                        ; prefix
0002eda: 64                                        ; i16x8.all_true
0002edb: 1a                                        ; drop
0002edc: 0b                                        ; end
0002ec5: 17                                        ; FIXUP func body size
; function body 280
0002edd: 00                                        ; func body size (guess)
0002ede: 00                                        ; local decl count
0002edf: fd                                        ; prefix
0002ee0: 02                                        ; v128.const
0002ee1: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002ef1: 41                                        ; i32.const
0002ef2: 00                                        ; i32 literal
0002ef3: fd                                        ; prefix
0002ef4: 65                                        ; i16x8.shl
0002ef5: 1a                                        ; drop
0002ef6: 0b                                        ; end
0002edd: 19                                        ; FIXUP func body size
; function body 281
0002ef7: 00                                        ; func body size (guess)
0002ef8: 00                                        ; local decl count
0002ef9: fd                                        ; prefix
0002efa: 02                                        ; v128.const
0002efb: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002f0b: 41                                        ; i32.const
0002f0c: 00                                        ; i32 literal
0002f0d: fd                                        ; prefix
0002f0e: 66                                        ; i16x8.shr_s
0002f0f: 1a                                        ; drop
0002f10: 0b                                        ; end
0002ef7: 19                                        ; FIXUP func body size
; function body 282
0002f11: 00                                        ; func body size (guess)
0002f12: 00                                        ; local decl count
0002f13: fd                                        ; prefix
0002f14: 02                                        ; v128.const
0002f15: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002f25: 41                                        ; i32.const
0002f26: 00                                        ; i32 literal
0002f27: fd                                        ; prefix
0002f28: 67                                        ; i16x8.shr_u
0002f29: 1a                                        ; drop
0002f2a: 0b                                        ; end
0002f11: 19                                        ; FIXUP func body size
; function body 283
0002f2b: 00                                        ; func body size (guess)
0002f2c: 00                                        ; local decl count
0002f2d: fd                                        ; prefix
0002f2e: 02                                        ; v128.const
0002f2f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002f3f: fd                                        ; prefix
0002f40: 02                                        ; v128.const
0002f41: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002f51: fd                                        ; prefix
0002f52: 68                                        ; i16x8.add
0002f53: 1a                                        ; drop
0002f54: 0b                                        ; end
0002f2b: 29                                        ; FIXUP func body size
; function body 284
0002f55: 00                                        ; func body size (guess)
0002f56: 00                                        ; local decl count
0002f57: fd                                        ; prefix
0002f58: 02                                        ; v128.const
0002f59: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002f69: fd                                        ; prefix
0002f6a: 02                                        ; v128.const
0002f6b: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002f7b: fd                                        ; prefix
0002f7c: 69                                        ; i16x8.add_saturate_s
0002f7d: 1a                                        ; drop
0002f7e: 0b                                        ; end
0002f55: 29                                        ; FIXUP func body size
; function body 285
0002f7f: 00                                        ; func body size (guess)
0002f80: 00                                        ; local decl count
0002f81: fd                                        ; prefix
0002f82: 02                                        ; v128.const
0002f83: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002f93: fd                                        ; prefix
0002f94: 02                                        ; v128.const
0002f95: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002fa5: fd                                        ; prefix
0002fa6: 6a                                        ; i16x8.add_saturate_u
0002fa7: 1a                                        ; drop
0002fa8: 0b                                        ; end
0002f7f: 29                                        ; FIXUP func body size
; function body 286
0002fa9: 00                                        ; func body size (guess)
0002faa: 00                                        ; local decl count
0002fab: fd                                        ; prefix
0002fac: 02                                        ; v128.const
0002fad: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002fbd: fd                                        ; prefix
0002fbe: 02                                        ; v128.const
0002fbf: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002fcf: fd                                        ; prefix
0002fd0: 6b                                        ; i16x8.sub
0002fd1: 1a                                        ; drop
0002fd2: 0b                                        ; end
0002fa9: 29                                        ; FIXUP func body size
; function body 287
0002fd3: 00                                        ; func body size (guess)
0002fd4: 00                                        ; local decl count
0002fd5: fd                                        ; prefix
0002fd6: 02                                        ; v128.const
0002fd7: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002fe7: fd                                        ; prefix
0002fe8: 02                                        ; v128.const
0002fe9: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002ff9: fd                                        ; prefix
0002ffa: 6c                                        ; i16x8.sub_saturate_s
0002ffb: 1a                                        ; drop
0002ffc: 0b                                        ; end
0002fd3: 29                                        ; FIXUP func body size
; function body 288
0002ffd: 00                                        ; func body size (guess)
0002ffe: 00                                        ; local decl count
0002fff: fd                                        ; prefix
0003000: 02                                        ; v128.const
0003001: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003011: fd                                        ; prefix
0003012: 02                                        ; v128.const
0003013: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003023: fd                                        ; prefix
0003024: 6d                                        ; i16x8.sub_saturate_u
0003025: 1a                                        ; drop
0003026: 0b                                        ; end
0002ffd: 29                                        ; FIXUP func body size
; function body 289
0003027: 00                                        ; func body size (guess)
0003028: 00                                        ; local decl count
0003029: fd                                        ; prefix
000302a: 02                                        ; v128.const
000302b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000303b: fd                                        ; prefix
000303c: 02                                        ; v128.const
000303d: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000304d: fd                                        ; prefix
000304e: 6e                                        ; i16x8.mul
000304f: 1a                                        ; drop
0003050: 0b                                        ; end
0003027: 29                                        ; FIXUP func body size
; function body 290
0003051: 00                                        ; func body size (guess)
0003052: 00                                        ; local decl count
0003053: fd                                        ; prefix
0003054: 02                                        ; v128.const
0003055: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003065: fd                                        ; prefix
0003066: 73                                        ; i32x4.neg
0003067: 1a                                        ; drop
0003068: 0b                                        ; end
0003051: 17                                        ; FIXUP func body size
; function body 291
0003069: 00                                        ; func body size (guess)
000306a: 00                                        ; local decl count
000306b: fd                                        ; prefix
000306c: 02                                        ; v128.const
000306d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000307d: fd                                        ; prefix
000307e: 74                                        ; i32x4.any_true
000307f: 1a                                        ; drop
0003080: 0b                                        ; end
0003069: 17                                        ; FIXUP func body size
; function body 292
0003081: 00                                        ; func body size (guess)
0003082: 00                                        ; local decl count
0003083: fd                                        ; prefix
0003084: 02                                        ; v128.const
0003085: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003095: fd                                        ; prefix
0003096: 75                                        ; i32x4.all_true
0003097: 1a                                        ; drop
0003098: 0b                                        ; end
0003081: 17                                        ; FIXUP func body size
; function body 293
0003099: 00                                        ; func body size (guess)
000309a: 00                                        ; local decl count
000309b: fd                                        ; prefix
000309c: 02                                        ; v128.const
000309d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00030ad: 41                                        ; i32.const
00030ae: 00                                        ; i32 literal
00030af: fd                                        ; prefix
00030b0: 76                                        ; i32x4.shl
00030b1: 1a                                        ; drop
00030b2: 0b                                        ; end
0003099: 19                                        ; FIXUP func body size
; function body 294
00030b3: 00                                        ; func body size (guess)
00030b4: 00                                        ; local decl count
00030b5: fd                                        ; prefix
00030b6: 02                                        ; v128.const
00030b7: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00030c7: 41                                        ; i32.const
00030c8: 00                                        ; i32 literal
00030c9: fd                                        ; prefix
00030ca: 77                                        ; i32x4.shr_s
00030cb: 1a                                        ; drop
00030cc: 0b                                        ; end
00030b3: 19                                        ; FIXUP func body size
; function body 295
00030cd: 00                                        ; func body size (guess)
00030ce: 00                                        ; local decl count
00030cf: fd                                        ; prefix
00030d0: 02                                        ; v128.const
00030d1: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00030e1: 41                                        ; i32.const
00030e2: 00                                        ; i32 literal
00030e3: fd                                        ; prefix
00030e4: 78                                        ; i32x4.shr_u
00030e5: 1a                                        ; drop
00030e6: 0b                                        ; end
00030cd: 19                                        ; FIXUP func body size
; function body 296
00030e7: 00                                        ; func body size (guess)
00030e8: 00                                        ; local decl count
00030e9: fd                                        ; prefix
00030ea: 02                                        ; v128.const
00030eb: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00030fb: fd                                        ; prefix
00030fc: 02                                        ; v128.const
00030fd: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000310d: fd                                        ; prefix
000310e: 79                                        ; i32x4.add
000310f: 1a                                        ; drop
0003110: 0b                                        ; end
00030e7: 29                                        ; FIXUP func body size
; function body 297
0003111: 00                                        ; func body size (guess)
0003112: 00                                        ; local decl count
0003113: fd                                        ; prefix
0003114: 02                                        ; v128.const
0003115: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003125: fd                                        ; prefix
0003126: 02                                        ; v128.const
0003127: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003137: fd                                        ; prefix
0003138: 7c                                        ; i32x4.sub
0003139: 1a                                        ; drop
000313a: 0b                                        ; end
0003111: 29                                        ; FIXUP func body size
; function body 298
000313b: 00                                        ; func body size (guess)
000313c: 00                                        ; local decl count
000313d: fd                                        ; prefix
000313e: 02                                        ; v128.const
000313f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000314f: fd                                        ; prefix
0003150: 02                                        ; v128.const
0003151: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003161: fd                                        ; prefix
0003162: 7f                                        ; i32x4.mul
0003163: 1a                                        ; drop
0003164: 0b                                        ; end
000313b: 29                                        ; FIXUP func body size
; function body 299
0003165: 00                                        ; func body size (guess)
0003166: 00                                        ; local decl count
0003167: fd                                        ; prefix
0003168: 02                                        ; v128.const
0003169: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003179: fd                                        ; prefix
000317a: 8401                                      ; i64x2.neg
000317c: 1a                                        ; drop
000317d: 0b                                        ; end
0003165: 18                                        ; FIXUP func body size
; function body 300
000317e: 00                                        ; func body size (guess)
000317f: 00                                        ; local decl count
0003180: fd                                        ; prefix
0003181: 02                                        ; v128.const
0003182: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003192: fd                                        ; prefix
0003193: 8501                                      ; i64x2.any_true
0003195: 1a                                        ; drop
0003196: 0b                                        ; end
000317e: 18                                        ; FIXUP func body size
; function body 301
0003197: 00                                        ; func body size (guess)
0003198: 00                                        ; local decl count
0003199: fd                                        ; prefix
000319a: 02                                        ; v128.const
000319b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00031ab: fd                                        ; prefix
00031ac: 8601                                      ; i64x2.all_true
00031ae: 1a                                        ; drop
00031af: 0b                                        ; end
0003197: 18                                        ; FIXUP func body size
; function body 302
00031b0: 00                                        ; func body size (guess)
00031b1: 00                                        ; local decl count
00031b2: fd                                        ; prefix
00031b3: 02                                        ; v128.const
00031b4: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00031c4: 41                                        ; i32.const
00031c5: 00                                        ; i32 literal
00031c6: fd                                        ; prefix
00031c7: 8701                                      ; i64x2.shl
00031c9: 1a                                        ; drop
00031ca: 0b                                        ; end
00031b0: 1a                                        ; FIXUP func body size
; function body 303
00031cb: 00                                        ; func body size (guess)
00031cc: 00                                        ; local decl count
00031cd: fd                                        ; prefix
00031ce: 02                                        ; v128.const
00031cf: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00031df: 41                                        ; i32.const
00031e0: 00                                        ; i32 literal
00031e1: fd                                        ; prefix
00031e2: 8801                                      ; i64x2.shr_s
00031e4: 1a                                        ; drop
00031e5: 0b                                        ; end
00031cb: 1a                                        ; FIXUP func body size
; function body 304
00031e6: 00                                        ; func body size (guess)
00031e7: 00                                        ; local decl count
00031e8: fd                                        ; prefix
00031e9: 02                                        ; v128.const
00031ea: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00031fa: 41                                        ; i32.const
00031fb: 00                                        ; i32 literal
00031fc: fd                                        ; prefix
00031fd: 8901                                      ; i64x2.shr_u
00031ff: 1a                                        ; drop
0003200: 0b                                        ; end
00031e6: 1a                                        ; FIXUP func body size
; function body 305
0003201: 00                                        ; func body size (guess)
0003202: 00                                        ; local decl count
0003203: fd                                        ; prefix
0003204: 02                                        ; v128.const
0003205: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003215: fd                                        ; prefix
0003216: 02                                        ; v128.const
0003217: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003227: fd                                        ; prefix
0003228: 8a01                                      ; i64x2.add
000322a: 1a                                        ; drop
000322b: 0b                                        ; end
0003201: 2a                                        ; FIXUP func body size
; function body 306
000322c: 00                                        ; func body size (guess)
000322d: 00                                        ; local decl count
000322e: fd                                        ; prefix
000322f: 02                                        ; v128.const
0003230: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003240: fd                                        ; prefix
0003241: 02                                        ; v128.const
0003242: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003252: fd                                        ; prefix
0003253: 8d01                                      ; i64x2.sub
0003255: 1a                                        ; drop
0003256: 0b                                        ; end
000322c: 2a                                        ; FIXUP func body size
; function body 307
0003257: 00                                        ; func body size (guess)
0003258: 00                                        ; local decl count
0003259: fd                                        ; prefix
000325a: 02                                        ; v128.const
000325b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000326b: fd                                        ; prefix
000326c: 9501                                      ; f32x4.abs
000326e: 1a                                        ; drop
000326f: 0b                                        ; end
0003257: 18                                        ; FIXUP func body size
; function body 308
0003270: 00                                        ; func body size (guess)
0003271: 00                                        ; local decl count
0003272: fd                                        ; prefix
0003273: 02                                        ; v128.const
0003274: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003284: fd                                        ; prefix
0003285: 9601                                      ; f32x4.neg
0003287: 1a                                        ; drop
0003288: 0b                                        ; end
0003270: 18                                        ; FIXUP func body size
; function body 309
0003289: 00                                        ; func body size (guess)
000328a: 00                                        ; local decl count
000328b: fd                                        ; prefix
000328c: 02                                        ; v128.const
000328d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000329d: fd                                        ; prefix
000329e: 9701                                      ; f32x4.sqrt
00032a0: 1a                                        ; drop
00032a1: 0b                                        ; end
0003289: 18                                        ; FIXUP func body size
; function body 310
00032a2: 00                                        ; func body size (guess)
00032a3: 00                                        ; local decl count
00032a4: fd                                        ; prefix
00032a5: 02                                        ; v128.const
00032a6: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00032b6: fd                                        ; prefix
00032b7: 02                                        ; v128.const
00032b8: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00032c8: fd                                        ; prefix
00032c9: 9a01                                      ; f32x4.add
00032cb: 1a                                        ; drop
00032cc: 0b                                        ; end
00032a2: 2a                                        ; FIXUP func body size
; function body 311
00032cd: 00                                        ; func body size (guess)
00032ce: 00                                        ; local decl count
00032cf: fd                                        ; prefix
00032d0: 02                                        ; v128.const
00032d1: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00032e1: fd                                        ; prefix
00032e2: 02                                        ; v128.const
00032e3: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00032f3: fd                                        ; prefix
00032f4: 9b01                                      ; f32x4.sub
00032f6: 1a                                        ; drop
00032f7: 0b                                        ; end
00032cd: 2a                                        ; FIXUP func body size
; function body 312
00032f8: 00                                        ; func body size (guess)
00032f9: 00                                        ; local decl count
00032fa: fd                                        ; prefix
00032fb: 02                                        ; v128.const
00032fc: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000330c: fd                                        ; prefix
000330d: 02                                        ; v128.const
000330e: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000331e: fd                                        ; prefix
000331f: 9c01                                      ; f32x4.mul
0003321: 1a                                        ; drop
0003322: 0b                                        ; end
00032f8: 2a                                        ; FIXUP func body size
; function body 313
0003323: 00                                        ; func body size (guess)
0003324: 00                                        ; local decl count
0003325: fd                                        ; prefix
0003326: 02                                        ; v128.const
0003327: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003337: fd                                        ; prefix
0003338: 02                                        ; v128.const
0003339: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003349: fd                                        ; prefix
000334a: 9d01                                      ; f32x4.div
000334c: 1a                                        ; drop
000334d: 0b                                        ; end
0003323: 2a                                        ; FIXUP func body size
; function body 314
000334e: 00                                        ; func body size (guess)
000334f: 00                                        ; local decl count
0003350: fd                                        ; prefix
0003351: 02                                        ; v128.const
0003352: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003362: fd                                        ; prefix
0003363: 02                                        ; v128.const
0003364: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003374: fd                                        ; prefix
0003375: 9e01                                      ; f32x4.min
0003377: 1a                                        ; drop
0003378: 0b                                        ; end
000334e: 2a                                        ; FIXUP func body size
; function body 315
0003379: 00                                        ; func body size (guess)
000337a: 00                                        ; local decl count
000337b: fd                                        ; prefix
000337c: 02                                        ; v128.const
000337d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000338d: fd                                        ; prefix
000338e: 02                                        ; v128.const
000338f: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000339f: fd                                        ; prefix
00033a0: 9f01                                      ; f32x4.max
00033a2: 1a                                        ; drop
00033a3: 0b                                        ; end
0003379: 2a                                        ; FIXUP func body size
; function body 316
00033a4: 00                                        ; func body size (guess)
00033a5: 00                                        ; local decl count
00033a6: fd                                        ; prefix
00033a7: 02                                        ; v128.const
00033a8: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00033b8: fd                                        ; prefix
00033b9: a001                                      ; f64x2.abs
00033bb: 1a                                        ; drop
00033bc: 0b                                        ; end
00033a4: 18                                        ; FIXUP func body size
; function body 317
00033bd: 00                                        ; func body size (guess)
00033be: 00                                        ; local decl count
00033bf: fd                                        ; prefix
00033c0: 02                                        ; v128.const
00033c1: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00033d1: fd                                        ; prefix
00033d2: a101                                      ; f64x2.neg
00033d4: 1a                                        ; drop
00033d5: 0b                                        ; end
00033bd: 18                                        ; FIXUP func body size
; function body 318
00033d6: 00                                        ; func body size (guess)
00033d7: 00                                        ; local decl count
00033d8: fd                                        ; prefix
00033d9: 02                                        ; v128.const
00033da: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00033ea: fd                                        ; prefix
00033eb: a201                                      ; f64x2.sqrt
00033ed: 1a                                        ; drop
00033ee: 0b                                        ; end
00033d6: 18                                        ; FIXUP func body size
; function body 319
00033ef: 00                                        ; func body size (guess)
00033f0: 00                                        ; local decl count
00033f1: fd                                        ; prefix
00033f2: 02                                        ; v128.const
00033f3: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003403: fd                                        ; prefix
0003404: 02                                        ; v128.const
0003405: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003415: fd                                        ; prefix
0003416: a501                                      ; f64x2.add
0003418: 1a                                        ; drop
0003419: 0b                                        ; end
00033ef: 2a                                        ; FIXUP func body size
; function body 320
000341a: 00                                        ; func body size (guess)
000341b: 00                                        ; local decl count
000341c: fd                                        ; prefix
000341d: 02                                        ; v128.const
000341e: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000342e: fd                                        ; prefix
000342f: 02                                        ; v128.const
0003430: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003440: fd                                        ; prefix
0003441: a601                                      ; f64x2.sub
0003443: 1a                                        ; drop
0003444: 0b                                        ; end
000341a: 2a                                        ; FIXUP func body size
; function body 321
0003445: 00                                        ; func body size (guess)
0003446: 00                                        ; local decl count
0003447: fd                                        ; prefix
0003448: 02                                        ; v128.const
0003449: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003459: fd                                        ; prefix
000345a: 02                                        ; v128.const
000345b: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000346b: fd                                        ; prefix
000346c: a701                                      ; f64x2.mul
000346e: 1a                                        ; drop
000346f: 0b                                        ; end
0003445: 2a                                        ; FIXUP func body size
; function body 322
0003470: 00                                        ; func body size (guess)
0003471: 00                                        ; local decl count
0003472: fd                                        ; prefix
0003473: 02                                        ; v128.const
0003474: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003484: fd                                        ; prefix
0003485: 02                                        ; v128.const
0003486: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003496: fd                                        ; prefix
0003497: a801                                      ; f64x2.div
0003499: 1a                                        ; drop
000349a: 0b                                        ; end
0003470: 2a                                        ; FIXUP func body size
; function body 323
000349b: 00                                        ; func body size (guess)
000349c: 00                                        ; local decl count
000349d: fd                                        ; prefix
000349e: 02                                        ; v128.const
000349f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00034af: fd                                        ; prefix
00034b0: 02                                        ; v128.const
00034b1: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00034c1: fd                                        ; prefix
00034c2: a901                                      ; f64x2.min
00034c4: 1a                                        ; drop
00034c5: 0b                                        ; end
000349b: 2a                                        ; FIXUP func body size
; function body 324
00034c6: 00                                        ; func body size (guess)
00034c7: 00                                        ; local decl count
00034c8: fd                                        ; prefix
00034c9: 02                                        ; v128.const
00034ca: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00034da: fd                                        ; prefix
00034db: 02                                        ; v128.const
00034dc: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00034ec: fd                                        ; prefix
00034ed: aa01                                      ; f64x2.max
00034ef: 1a                                        ; drop
00034f0: 0b                                        ; end
00034c6: 2a                                        ; FIXUP func body size
; function body 325
00034f1: 00                                        ; func body size (guess)
00034f2: 00                                        ; local decl count
00034f3: fd                                        ; prefix
00034f4: 02                                        ; v128.const
00034f5: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003505: fd                                        ; prefix
0003506: ab01                                      ; i32x4.trunc_sat_f32x4_s
0003508: 1a                                        ; drop
0003509: 0b                                        ; end
00034f1: 18                                        ; FIXUP func body size
; function body 326
000350a: 00                                        ; func body size (guess)
000350b: 00                                        ; local decl count
000350c: fd                                        ; prefix
000350d: 02                                        ; v128.const
000350e: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000351e: fd                                        ; prefix
000351f: ac01                                      ; i32x4.trunc_sat_f32x4_u
0003521: 1a                                        ; drop
0003522: 0b                                        ; end
000350a: 18                                        ; FIXUP func body size
; function body 327
0003523: 00                                        ; func body size (guess)
0003524: 00                                        ; local decl count
0003525: fd                                        ; prefix
0003526: 02                                        ; v128.const
0003527: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003537: fd                                        ; prefix
0003538: ad01                                      ; i64x2.trunc_sat_f64x2_s
000353a: 1a                                        ; drop
000353b: 0b                                        ; end
0003523: 18                                        ; FIXUP func body size
; function body 328
000353c: 00                                        ; func body size (guess)
000353d: 00                                        ; local decl count
000353e: fd                                        ; prefix
000353f: 02                                        ; v128.const
0003540: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003550: fd                                        ; prefix
0003551: ae01                                      ; i64x2.trunc_sat_f64x2_u
0003553: 1a                                        ; drop
0003554: 0b                                        ; end
000353c: 18                                        ; FIXUP func body size
; function body 329
0003555: 00                                        ; func body size (guess)
0003556: 00                                        ; local decl count
0003557: fd                                        ; prefix
0003558: 02                                        ; v128.const
0003559: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003569: fd                                        ; prefix
000356a: af01                                      ; f32x4.convert_i32x4_s
000356c: 1a                                        ; drop
000356d: 0b                                        ; end
0003555: 18                                        ; FIXUP func body size
; function body 330
000356e: 00                                        ; func body size (guess)
000356f: 00                                        ; local decl count
0003570: fd                                        ; prefix
0003571: 02                                        ; v128.const
0003572: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003582: fd                                        ; prefix
0003583: b001                                      ; f32x4.convert_i32x4_u
0003585: 1a                                        ; drop
0003586: 0b                                        ; end
000356e: 18                                        ; FIXUP func body size
; function body 331
0003587: 00                                        ; func body size (guess)
0003588: 00                                        ; local decl count
0003589: fd                                        ; prefix
000358a: 02                                        ; v128.const
000358b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000359b: fd                                        ; prefix
000359c: b101                                      ; f64x2.convert_i64x2_s
000359e: 1a                                        ; drop
000359f: 0b                                        ; end
0003587: 18                                        ; FIXUP func body size
; function body 332
00035a0: 00                                        ; func body size (guess)
00035a1: 00                                        ; local decl count
00035a2: fd                                        ; prefix
00035a3: 02                                        ; v128.const
00035a4: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00035b4: fd                                        ; prefix
00035b5: b201                                      ; f64x2.convert_i64x2_u
00035b7: 1a                                        ; drop
00035b8: 0b                                        ; end
00035a0: 18                                        ; FIXUP func body size
; function body 333
00035b9: 00                                        ; func body size (guess)
00035ba: 00                                        ; local decl count
00035bb: fd                                        ; prefix
00035bc: 02                                        ; v128.const
00035bd: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00035cd: fd                                        ; prefix
00035ce: 02                                        ; v128.const
00035cf: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00035df: fd                                        ; prefix
00035e0: c001                                      ; v8x16.swizzle
00035e2: 1a                                        ; drop
00035e3: 0b                                        ; end
00035b9: 2a                                        ; FIXUP func body size
; function body 334
00035e4: 00                                        ; func body size (guess)
00035e5: 00                                        ; local decl count
00035e6: fd                                        ; prefix
00035e7: 02                                        ; v128.const
00035e8: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00035f8: fd                                        ; prefix
00035f9: 02                                        ; v128.const
00035fa: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000360a: fd                                        ; prefix
000360b: c101                                      ; v8x16.shuffle
000360d: 0101 0101 0101 0101 0101 0101 0101 0101   ; Simd Lane[16] literal
000361d: 1a                                        ; drop
000361e: 0b                                        ; end
00035e4: 3a                                        ; FIXUP func body size
; function body 335
000361f: 00                                        ; func body size (guess)
0003620: 00                                        ; local decl count
0003621: 41                                        ; i32.const
0003622: 01                                        ; i32 literal
0003623: fd                                        ; prefix
0003624: c201                                      ; i8x16.load_splat
0003626: 00                                        ; alignment
0003627: 00                                        ; load offset
0003628: 1a                                        ; drop
0003629: 0b                                        ; end
000361f: 0a                                        ; FIXUP func body size
; function body 336
000362a: 00                                        ; func body size (guess)
000362b: 00                                        ; local decl count
000362c: 41                                        ; i32.const
000362d: 01                                        ; i32 literal
000362e: fd                                        ; prefix
000362f: c301                                      ; i16x8.load_splat
0003631: 01                                        ; alignment
0003632: 00                                        ; load offset
0003633: 1a                                        ; drop
0003634: 0b                                        ; end
000362a: 0a                                        ; FIXUP func body size
; function body 337
0003635: 00                                        ; func body size (guess)
0003636: 00                                        ; local decl count
0003637: 41                                        ; i32.const
0003638: 01                                        ; i32 literal
0003639: fd                                        ; prefix
000363a: c401                                      ; i32x4.load_splat
000363c: 02                                        ; alignment
000363d: 00                                        ; load offset
000363e: 1a                                        ; drop
000363f: 0b                                        ; end
0003635: 0a                                        ; FIXUP func body size
; function body 338
0003640: 00                                        ; func body size (guess)
0003641: 00                                        ; local decl count
0003642: 41                                        ; i32.const
0003643: 01                                        ; i32 literal
0003644: fd                                        ; prefix
0003645: c501                                      ; i64x2.load_splat
0003647: 03                                        ; alignment
0003648: 00                                        ; load offset
0003649: 1a                                        ; drop
000364a: 0b                                        ; end
0003640: 0a                                        ; FIXUP func body size
; function body 339
000364b: 00                                        ; func body size (guess)
000364c: 00                                        ; local decl count
000364d: 41                                        ; i32.const
000364e: 01                                        ; i32 literal
000364f: 41                                        ; i32.const
0003650: 02                                        ; i32 literal
0003651: fe                                        ; prefix
0003652: 00                                        ; atomic.notify
0003653: 02                                        ; alignment
0003654: 03                                        ; memory offset
0003655: 1a                                        ; drop
0003656: 0b                                        ; end
000364b: 0b                                        ; FIXUP func body size
; function body 340
0003657: 00                                        ; func body size (guess)
0003658: 00                                        ; local decl count
0003659: 41                                        ; i32.const
000365a: 01                                        ; i32 literal
000365b: 41                                        ; i32.const
000365c: 02                                        ; i32 literal
000365d: 42                                        ; i64.const
000365e: 03                                        ; i64 literal
000365f: fe                                        ; prefix
0003660: 01                                        ; i32.atomic.wait
0003661: 02                                        ; alignment
0003662: 03                                        ; memory offset
0003663: 1a                                        ; drop
0003664: 0b                                        ; end
0003657: 0d                                        ; FIXUP func body size
; function body 341
0003665: 00                                        ; func body size (guess)
0003666: 00                                        ; local decl count
0003667: 41                                        ; i32.const
0003668: 01                                        ; i32 literal
0003669: 42                                        ; i64.const
000366a: 02                                        ; i64 literal
000366b: 42                                        ; i64.const
000366c: 03                                        ; i64 literal
000366d: fe                                        ; prefix
000366e: 02                                        ; i64.atomic.wait
000366f: 03                                        ; alignment
0003670: 03                                        ; memory offset
0003671: 1a                                        ; drop
0003672: 0b                                        ; end
0003665: 0d                                        ; FIXUP func body size
; function body 342
0003673: 00                                        ; func body size (guess)
0003674: 00                                        ; local decl count
0003675: 41                                        ; i32.const
0003676: 01                                        ; i32 literal
0003677: fe                                        ; prefix
0003678: 10                                        ; i32.atomic.load
0003679: 02                                        ; alignment
000367a: 03                                        ; memory offset
000367b: 1a                                        ; drop
000367c: 0b                                        ; end
0003673: 09                                        ; FIXUP func body size
; function body 343
000367d: 00                                        ; func body size (guess)
000367e: 00                                        ; local decl count
000367f: 41                                        ; i32.const
0003680: 01                                        ; i32 literal
0003681: fe                                        ; prefix
0003682: 11                                        ; i64.atomic.load
0003683: 03                                        ; alignment
0003684: 07                                        ; memory offset
0003685: 1a                                        ; drop
0003686: 0b                                        ; end
000367d: 09                                        ; FIXUP func body size
; function body 344
0003687: 00                                        ; func body size (guess)
0003688: 00                                        ; local decl count
0003689: 41                                        ; i32.const
000368a: 01                                        ; i32 literal
000368b: fe                                        ; prefix
000368c: 12                                        ; i32.atomic.load8_u
000368d: 00                                        ; alignment
000368e: 03                                        ; memory offset
000368f: 1a                                        ; drop
0003690: 0b                                        ; end
0003687: 09                                        ; FIXUP func body size
; function body 345
0003691: 00                                        ; func body size (guess)
0003692: 00                                        ; local decl count
0003693: 41                                        ; i32.const
0003694: 01                                        ; i32 literal
0003695: fe                                        ; prefix
0003696: 13                                        ; i32.atomic.load16_u
0003697: 01                                        ; alignment
0003698: 03                                        ; memory offset
0003699: 1a                                        ; drop
000369a: 0b                                        ; end
0003691: 09                                        ; FIXUP func body size
; function body 346
000369b: 00                                        ; func body size (guess)
000369c: 00                                        ; local decl count
000369d: 41                                        ; i32.const
000369e: 01                                        ; i32 literal
000369f: fe                                        ; prefix
00036a0: 14                                        ; i64.atomic.load8_u
00036a1: 00                                        ; alignment
00036a2: 03                                        ; memory offset
00036a3: 1a                                        ; drop
00036a4: 0b                                        ; end
000369b: 09                                        ; FIXUP func body size
; function body 347
00036a5: 00                                        ; func body size (guess)
00036a6: 00                                        ; local decl count
00036a7: 41                                        ; i32.const
00036a8: 01                                        ; i32 literal
00036a9: fe                                        ; prefix
00036aa: 15                                        ; i64.atomic.load16_u
00036ab: 01                                        ; alignment
00036ac: 03                                        ; memory offset
00036ad: 1a                                        ; drop
00036ae: 0b                                        ; end
00036a5: 09                                        ; FIXUP func body size
; function body 348
00036af: 00                                        ; func body size (guess)
00036b0: 00                                        ; local decl count
00036b1: 41                                        ; i32.const
00036b2: 01                                        ; i32 literal
00036b3: fe                                        ; prefix
00036b4: 16                                        ; i64.atomic.load32_u
00036b5: 02                                        ; alignment
00036b6: 03                                        ; memory offset
00036b7: 1a                                        ; drop
00036b8: 0b                                        ; end
00036af: 09                                        ; FIXUP func body size
; function body 349
00036b9: 00                                        ; func body size (guess)
00036ba: 00                                        ; local decl count
00036bb: 41                                        ; i32.const
00036bc: 01                                        ; i32 literal
00036bd: 41                                        ; i32.const
00036be: 02                                        ; i32 literal
00036bf: fe                                        ; prefix
00036c0: 17                                        ; i32.atomic.store
00036c1: 02                                        ; alignment
00036c2: 03                                        ; memory offset
00036c3: 0b                                        ; end
00036b9: 0a                                        ; FIXUP func body size
; function body 350
00036c4: 00                                        ; func body size (guess)
00036c5: 00                                        ; local decl count
00036c6: 41                                        ; i32.const
00036c7: 01                                        ; i32 literal
00036c8: 42                                        ; i64.const
00036c9: 02                                        ; i64 literal
00036ca: fe                                        ; prefix
00036cb: 18                                        ; i64.atomic.store
00036cc: 03                                        ; alignment
00036cd: 07                                        ; memory offset
00036ce: 0b                                        ; end
00036c4: 0a                                        ; FIXUP func body size
; function body 351
00036cf: 00                                        ; func body size (guess)
00036d0: 00                                        ; local decl count
00036d1: 41                                        ; i32.const
00036d2: 01                                        ; i32 literal
00036d3: 41                                        ; i32.const
00036d4: 02                                        ; i32 literal
00036d5: fe                                        ; prefix
00036d6: 19                                        ; i32.atomic.store8
00036d7: 00                                        ; alignment
00036d8: 03                                        ; memory offset
00036d9: 0b                                        ; end
00036cf: 0a                                        ; FIXUP func body size
; function body 352
00036da: 00                                        ; func body size (guess)
00036db: 00                                        ; local decl count
00036dc: 41                                        ; i32.const
00036dd: 01                                        ; i32 literal
00036de: 41                                        ; i32.const
00036df: 02                                        ; i32 literal
00036e0: fe                                        ; prefix
00036e1: 1a                                        ; i32.atomic.store16
00036e2: 01                                        ; alignment
00036e3: 03                                        ; memory offset
00036e4: 0b                                        ; end
00036da: 0a                                        ; FIXUP func body size
; function body 353
00036e5: 00                                        ; func body size (guess)
00036e6: 00                                        ; local decl count
00036e7: 41                                        ; i32.const
00036e8: 01                                        ; i32 literal
00036e9: 42                                        ; i64.const
00036ea: 02                                        ; i64 literal
00036eb: fe                                        ; prefix
00036ec: 1b                                        ; i64.atomic.store8
00036ed: 00                                        ; alignment
00036ee: 03                                        ; memory offset
00036ef: 0b                                        ; end
00036e5: 0a                                        ; FIXUP func body size
; function body 354
00036f0: 00                                        ; func body size (guess)
00036f1: 00                                        ; local decl count
00036f2: 41                                        ; i32.const
00036f3: 01                                        ; i32 literal
00036f4: 42                                        ; i64.const
00036f5: 02                                        ; i64 literal
00036f6: fe                                        ; prefix
00036f7: 1c                                        ; i64.atomic.store16
00036f8: 01                                        ; alignment
00036f9: 03                                        ; memory offset
00036fa: 0b                                        ; end
00036f0: 0a                                        ; FIXUP func body size
; function body 355
00036fb: 00                                        ; func body size (guess)
00036fc: 00                                        ; local decl count
00036fd: 41                                        ; i32.const
00036fe: 01                                        ; i32 literal
00036ff: 42                                        ; i64.const
0003700: 02                                        ; i64 literal
0003701: fe                                        ; prefix
0003702: 1d                                        ; i64.atomic.store32
0003703: 02                                        ; alignment
0003704: 03                                        ; memory offset
0003705: 0b                                        ; end
00036fb: 0a                                        ; FIXUP func body size
; function body 356
0003706: 00                                        ; func body size (guess)
0003707: 00                                        ; local decl count
0003708: 41                                        ; i32.const
0003709: 01                                        ; i32 literal
000370a: 41                                        ; i32.const
000370b: 02                                        ; i32 literal
000370c: fe                                        ; prefix
000370d: 1e                                        ; i32.atomic.rmw.add
000370e: 02                                        ; alignment
000370f: 03                                        ; memory offset
0003710: 1a                                        ; drop
0003711: 0b                                        ; end
0003706: 0b                                        ; FIXUP func body size
; function body 357
0003712: 00                                        ; func body size (guess)
0003713: 00                                        ; local decl count
0003714: 41                                        ; i32.const
0003715: 01                                        ; i32 literal
0003716: 42                                        ; i64.const
0003717: 02                                        ; i64 literal
0003718: fe                                        ; prefix
0003719: 1f                                        ; i64.atomic.rmw.add
000371a: 03                                        ; alignment
000371b: 07                                        ; memory offset
000371c: 1a                                        ; drop
000371d: 0b                                        ; end
0003712: 0b                                        ; FIXUP func body size
; function body 358
000371e: 00                                        ; func body size (guess)
000371f: 00                                        ; local decl count
0003720: 41                                        ; i32.const
0003721: 01                                        ; i32 literal
0003722: 41                                        ; i32.const
0003723: 02                                        ; i32 literal
0003724: fe                                        ; prefix
0003725: 20                                        ; i32.atomic.rmw8.add_u
0003726: 00                                        ; alignment
0003727: 03                                        ; memory offset
0003728: 1a                                        ; drop
0003729: 0b                                        ; end
000371e: 0b                                        ; FIXUP func body size
; function body 359
000372a: 00                                        ; func body size (guess)
000372b: 00                                        ; local decl count
000372c: 41                                        ; i32.const
000372d: 01                                        ; i32 literal
000372e: 41                                        ; i32.const
000372f: 02                                        ; i32 literal
0003730: fe                                        ; prefix
0003731: 21                                        ; i32.atomic.rmw16.add_u
0003732: 01                                        ; alignment
0003733: 03                                        ; memory offset
0003734: 1a                                        ; drop
0003735: 0b                                        ; end
000372a: 0b                                        ; FIXUP func body size
; function body 360
0003736: 00                                        ; func body size (guess)
0003737: 00                                        ; local decl count
0003738: 41                                        ; i32.const
0003739: 01                                        ; i32 literal
000373a: 42                                        ; i64.const
000373b: 02                                        ; i64 literal
000373c: fe                                        ; prefix
000373d: 22                                        ; i64.atomic.rmw8.add_u
000373e: 00                                        ; alignment
000373f: 03                                        ; memory offset
0003740: 1a                                        ; drop
0003741: 0b                                        ; end
0003736: 0b                                        ; FIXUP func body size
; function body 361
0003742: 00                                        ; func body size (guess)
0003743: 00                                        ; local decl count
0003744: 41                                        ; i32.const
0003745: 01                                        ; i32 literal
0003746: 42                                        ; i64.const
0003747: 02                                        ; i64 literal
0003748: fe                                        ; prefix
0003749: 23                                        ; i64.atomic.rmw16.add_u
000374a: 01                                        ; alignment
000374b: 03                                        ; memory offset
000374c: 1a                                        ; drop
000374d: 0b                                        ; end
0003742: 0b                                        ; FIXUP func body size
; function body 362
000374e: 00                                        ; func body size (guess)
000374f: 00                                        ; local decl count
0003750: 41                                        ; i32.const
0003751: 01                                        ; i32 literal
0003752: 42                                        ; i64.const
0003753: 02                                        ; i64 literal
0003754: fe                                        ; prefix
0003755: 24                                        ; i64.atomic.rmw32.add_u
0003756: 02                                        ; alignment
0003757: 03                                        ; memory offset
0003758: 1a                                        ; drop
0003759: 0b                                        ; end
000374e: 0b                                        ; FIXUP func body size
; function body 363
000375a: 00                                        ; func body size (guess)
000375b: 00                                        ; local decl count
000375c: 41                                        ; i32.const
000375d: 01                                        ; i32 literal
000375e: 41                                        ; i32.const
000375f: 02                                        ; i32 literal
0003760: fe                                        ; prefix
0003761: 25                                        ; i32.atomic.rmw.sub
0003762: 02                                        ; alignment
0003763: 03                                        ; memory offset
0003764: 1a                                        ; drop
0003765: 0b                                        ; end
000375a: 0b                                        ; FIXUP func body size
; function body 364
0003766: 00                                        ; func body size (guess)
0003767: 00                                        ; local decl count
0003768: 41                                        ; i32.const
0003769: 01                                        ; i32 literal
000376a: 42                                        ; i64.const
000376b: 02                                        ; i64 literal
000376c: fe                                        ; prefix
000376d: 26                                        ; i64.atomic.rmw.sub
000376e: 03                                        ; alignment
000376f: 07                                        ; memory offset
0003770: 1a                                        ; drop
0003771: 0b                                        ; end
0003766: 0b                                        ; FIXUP func body size
; function body 365
0003772: 00                                        ; func body size (guess)
0003773: 00                                        ; local decl count
0003774: 41                                        ; i32.const
0003775: 01                                        ; i32 literal
0003776: 41                                        ; i32.const
0003777: 02                                        ; i32 literal
0003778: fe                                        ; prefix
0003779: 27                                        ; i32.atomic.rmw8.sub_u
000377a: 00                                        ; alignment
000377b: 03                                        ; memory offset
000377c: 1a                                        ; drop
000377d: 0b                                        ; end
0003772: 0b                                        ; FIXUP func body size
; function body 366
000377e: 00                                        ; func body size (guess)
000377f: 00                                        ; local decl count
0003780: 41                                        ; i32.const
0003781: 01                                        ; i32 literal
0003782: 41                                        ; i32.const
0003783: 02                                        ; i32 literal
0003784: fe                                        ; prefix
0003785: 28                                        ; i32.atomic.rmw16.sub_u
0003786: 01                                        ; alignment
0003787: 03                                        ; memory offset
0003788: 1a                                        ; drop
0003789: 0b                                        ; end
000377e: 0b                                        ; FIXUP func body size
; function body 367
000378a: 00                                        ; func body size (guess)
000378b: 00                                        ; local decl count
000378c: 41                                        ; i32.const
000378d: 01                                        ; i32 literal
000378e: 42                                        ; i64.const
000378f: 02                                        ; i64 literal
0003790: fe                                        ; prefix
0003791: 29                                        ; i64.atomic.rmw8.sub_u
0003792: 00                                        ; alignment
0003793: 03                                        ; memory offset
0003794: 1a                                        ; drop
0003795: 0b                                        ; end
000378a: 0b                                        ; FIXUP func body size
; function body 368
0003796: 00                                        ; func body size (guess)
0003797: 00                                        ; local decl count
0003798: 41                                        ; i32.const
0003799: 01                                        ; i32 literal
000379a: 42                                        ; i64.const
000379b: 02                                        ; i64 literal
000379c: fe                                        ; prefix
000379d: 2a                                        ; i64.atomic.rmw16.sub_u
000379e: 01                                        ; alignment
000379f: 03                                        ; memory offset
00037a0: 1a                                        ; drop
00037a1: 0b                                        ; end
0003796: 0b                                        ; FIXUP func body size
; function body 369
00037a2: 00                                        ; func body size (guess)
00037a3: 00                                        ; local decl count
00037a4: 41                                        ; i32.const
00037a5: 01                                        ; i32 literal
00037a6: 42                                        ; i64.const
00037a7: 02                                        ; i64 literal
00037a8: fe                                        ; prefix
00037a9: 2b                                        ; i64.atomic.rmw32.sub_u
00037aa: 02                                        ; alignment
00037ab: 03                                        ; memory offset
00037ac: 1a                                        ; drop
00037ad: 0b                                        ; end
00037a2: 0b                                        ; FIXUP func body size
; function body 370
00037ae: 00                                        ; func body size (guess)
00037af: 00                                        ; local decl count
00037b0: 41                                        ; i32.const
00037b1: 01                                        ; i32 literal
00037b2: 41                                        ; i32.const
00037b3: 02                                        ; i32 literal
00037b4: fe                                        ; prefix
00037b5: 2c                                        ; i32.atomic.rmw.and
00037b6: 02                                        ; alignment
00037b7: 03                                        ; memory offset
00037b8: 1a                                        ; drop
00037b9: 0b                                        ; end
00037ae: 0b                                        ; FIXUP func body size
; function body 371
00037ba: 00                                        ; func body size (guess)
00037bb: 00                                        ; local decl count
00037bc: 41                                        ; i32.const
00037bd: 01                                        ; i32 literal
00037be: 42                                        ; i64.const
00037bf: 02                                        ; i64 literal
00037c0: fe                                        ; prefix
00037c1: 2d                                        ; i64.atomic.rmw.and
00037c2: 03                                        ; alignment
00037c3: 07                                        ; memory offset
00037c4: 1a                                        ; drop
00037c5: 0b                                        ; end
00037ba: 0b                                        ; FIXUP func body size
; function body 372
00037c6: 00                                        ; func body size (guess)
00037c7: 00                                        ; local decl count
00037c8: 41                                        ; i32.const
00037c9: 01                                        ; i32 literal
00037ca: 41                                        ; i32.const
00037cb: 02                                        ; i32 literal
00037cc: fe                                        ; prefix
00037cd: 2e                                        ; i32.atomic.rmw8.and_u
00037ce: 00                                        ; alignment
00037cf: 03                                        ; memory offset
00037d0: 1a                                        ; drop
00037d1: 0b                                        ; end
00037c6: 0b                                        ; FIXUP func body size
; function body 373
00037d2: 00                                        ; func body size (guess)
00037d3: 00                                        ; local decl count
00037d4: 41                                        ; i32.const
00037d5: 01                                        ; i32 literal
00037d6: 41                                        ; i32.const
00037d7: 02                                        ; i32 literal
00037d8: fe                                        ; prefix
00037d9: 2f                                        ; i32.atomic.rmw16.and_u
00037da: 01                                        ; alignment
00037db: 03                                        ; memory offset
00037dc: 1a                                        ; drop
00037dd: 0b                                        ; end
00037d2: 0b                                        ; FIXUP func body size
; function body 374
00037de: 00                                        ; func body size (guess)
00037df: 00                                        ; local decl count
00037e0: 41                                        ; i32.const
00037e1: 01                                        ; i32 literal
00037e2: 42                                        ; i64.const
00037e3: 02                                        ; i64 literal
00037e4: fe                                        ; prefix
00037e5: 30                                        ; i64.atomic.rmw8.and_u
00037e6: 00                                        ; alignment
00037e7: 03                                        ; memory offset
00037e8: 1a                                        ; drop
00037e9: 0b                                        ; end
00037de: 0b                                        ; FIXUP func body size
; function body 375
00037ea: 00                                        ; func body size (guess)
00037eb: 00                                        ; local decl count
00037ec: 41                                        ; i32.const
00037ed: 01                                        ; i32 literal
00037ee: 42                                        ; i64.const
00037ef: 02                                        ; i64 literal
00037f0: fe                                        ; prefix
00037f1: 31                                        ; i64.atomic.rmw16.and_u
00037f2: 01                                        ; alignment
00037f3: 03                                        ; memory offset
00037f4: 1a                                        ; drop
00037f5: 0b                                        ; end
00037ea: 0b                                        ; FIXUP func body size
; function body 376
00037f6: 00                                        ; func body size (guess)
00037f7: 00                                        ; local decl count
00037f8: 41                                        ; i32.const
00037f9: 01                                        ; i32 literal
00037fa: 42                                        ; i64.const
00037fb: 02                                        ; i64 literal
00037fc: fe                                        ; prefix
00037fd: 32                                        ; i64.atomic.rmw32.and_u
00037fe: 02                                        ; alignment
00037ff: 03                                        ; memory offset
0003800: 1a                                        ; drop
0003801: 0b                                        ; end
00037f6: 0b                                        ; FIXUP func body size
; function body 377
0003802: 00                                        ; func body size (guess)
0003803: 00                                        ; local decl count
0003804: 41                                        ; i32.const
0003805: 01                                        ; i32 literal
0003806: 41                                        ; i32.const
0003807: 02                                        ; i32 literal
0003808: fe                                        ; prefix
0003809: 33                                        ; i32.atomic.rmw.or
000380a: 02                                        ; alignment
000380b: 03                                        ; memory offset
000380c: 1a                                        ; drop
000380d: 0b                                        ; end
0003802: 0b                                        ; FIXUP func body size
; function body 378
000380e: 00                                        ; func body size (guess)
000380f: 00                                        ; local decl count
0003810: 41                                        ; i32.const
0003811: 01                                        ; i32 literal
0003812: 42                                        ; i64.const
0003813: 02                                        ; i64 literal
0003814: fe                                        ; prefix
0003815: 34                                        ; i64.atomic.rmw.or
0003816: 03                                        ; alignment
0003817: 07                                        ; memory offset
0003818: 1a                                        ; drop
0003819: 0b                                        ; end
000380e: 0b                                        ; FIXUP func body size
; function body 379
000381a: 00                                        ; func body size (guess)
000381b: 00                                        ; local decl count
000381c: 41                                        ; i32.const
000381d: 01                                        ; i32 literal
000381e: 41                                        ; i32.const
000381f: 02                                        ; i32 literal
0003820: fe                                        ; prefix
0003821: 35                                        ; i32.atomic.rmw8.or_u
0003822: 00                                        ; alignment
0003823: 03                                        ; memory offset
0003824: 1a                                        ; drop
0003825: 0b                                        ; end
000381a: 0b                                        ; FIXUP func body size
; function body 380
0003826: 00                                        ; func body size (guess)
0003827: 00                                        ; local decl count
0003828: 41                                        ; i32.const
0003829: 01                                        ; i32 literal
000382a: 41                                        ; i32.const
000382b: 02                                        ; i32 literal
000382c: fe                                        ; prefix
000382d: 36                                        ; i32.atomic.rmw16.or_u
000382e: 01                                        ; alignment
000382f: 03                                        ; memory offset
0003830: 1a                                        ; drop
0003831: 0b                                        ; end
0003826: 0b                                        ; FIXUP func body size
; function body 381
0003832: 00                                        ; func body size (guess)
0003833: 00                                        ; local decl count
0003834: 41                                        ; i32.const
0003835: 01                                        ; i32 literal
0003836: 42                                        ; i64.const
0003837: 02                                        ; i64 literal
0003838: fe                                        ; prefix
0003839: 37                                        ; i64.atomic.rmw8.or_u
000383a: 00                                        ; alignment
000383b: 03                                        ; memory offset
000383c: 1a                                        ; drop
000383d: 0b                                        ; end
0003832: 0b                                        ; FIXUP func body size
; function body 382
000383e: 00                                        ; func body size (guess)
000383f: 00                                        ; local decl count
0003840: 41                                        ; i32.const
0003841: 01                                        ; i32 literal
0003842: 42                                        ; i64.const
0003843: 02                                        ; i64 literal
0003844: fe                                        ; prefix
0003845: 38                                        ; i64.atomic.rmw16.or_u
0003846: 01                                        ; alignment
0003847: 03                                        ; memory offset
0003848: 1a                                        ; drop
0003849: 0b                                        ; end
000383e: 0b                                        ; FIXUP func body size
; function body 383
000384a: 00                                        ; func body size (guess)
000384b: 00                                        ; local decl count
000384c: 41                                        ; i32.const
000384d: 01                                        ; i32 literal
000384e: 42                                        ; i64.const
000384f: 02                                        ; i64 literal
0003850: fe                                        ; prefix
0003851: 39                                        ; i64.atomic.rmw32.or_u
0003852: 02                                        ; alignment
0003853: 03                                        ; memory offset
0003854: 1a                                        ; drop
0003855: 0b                                        ; end
000384a: 0b                                        ; FIXUP func body size
; function body 384
0003856: 00                                        ; func body size (guess)
0003857: 00                                        ; local decl count
0003858: 41                                        ; i32.const
0003859: 01                                        ; i32 literal
000385a: 41                                        ; i32.const
000385b: 02                                        ; i32 literal
000385c: fe                                        ; prefix
000385d: 3a                                        ; i32.atomic.rmw.xor
000385e: 02                                        ; alignment
000385f: 03                                        ; memory offset
0003860: 1a                                        ; drop
0003861: 0b                                        ; end
0003856: 0b                                        ; FIXUP func body size
; function body 385
0003862: 00                                        ; func body size (guess)
0003863: 00                                        ; local decl count
0003864: 41                                        ; i32.const
0003865: 01                                        ; i32 literal
0003866: 42                                        ; i64.const
0003867: 02                                        ; i64 literal
0003868: fe                                        ; prefix
0003869: 3b                                        ; i64.atomic.rmw.xor
000386a: 03                                        ; alignment
000386b: 07                                        ; memory offset
000386c: 1a                                        ; drop
000386d: 0b                                        ; end
0003862: 0b                                        ; FIXUP func body size
; function body 386
000386e: 00                                        ; func body size (guess)
000386f: 00                                        ; local decl count
0003870: 41                                        ; i32.const
0003871: 01                                        ; i32 literal
0003872: 41                                        ; i32.const
0003873: 02                                        ; i32 literal
0003874: fe                                        ; prefix
0003875: 3c                                        ; i32.atomic.rmw8.xor_u
0003876: 00                                        ; alignment
0003877: 03                                        ; memory offset
0003878: 1a                                        ; drop
0003879: 0b                                        ; end
000386e: 0b                                        ; FIXUP func body size
; function body 387
000387a: 00                                        ; func body size (guess)
000387b: 00                                        ; local decl count
000387c: 41                                        ; i32.const
000387d: 01                                        ; i32 literal
000387e: 41                                        ; i32.const
000387f: 02                                        ; i32 literal
0003880: fe                                        ; prefix
0003881: 3d                                        ; i32.atomic.rmw16.xor_u
0003882: 01                                        ; alignment
0003883: 03                                        ; memory offset
0003884: 1a                                        ; drop
0003885: 0b                                        ; end
000387a: 0b                                        ; FIXUP func body size
; function body 388
0003886: 00                                        ; func body size (guess)
0003887: 00                                        ; local decl count
0003888: 41                                        ; i32.const
0003889: 01                                        ; i32 literal
000388a: 42                                        ; i64.const
000388b: 02                                        ; i64 literal
000388c: fe                                        ; prefix
000388d: 3e                                        ; i64.atomic.rmw8.xor_u
000388e: 00                                        ; alignment
000388f: 03                                        ; memory offset
0003890: 1a                                        ; drop
0003891: 0b                                        ; end
0003886: 0b                                        ; FIXUP func body size
; function body 389
0003892: 00                                        ; func body size (guess)
0003893: 00                                        ; local decl count
0003894: 41                                        ; i32.const
0003895: 01                                        ; i32 literal
0003896: 42                                        ; i64.const
0003897: 02                                        ; i64 literal
0003898: fe                                        ; prefix
0003899: 3f                                        ; i64.atomic.rmw16.xor_u
000389a: 01                                        ; alignment
000389b: 03                                        ; memory offset
000389c: 1a                                        ; drop
000389d: 0b                                        ; end
0003892: 0b                                        ; FIXUP func body size
; function body 390
000389e: 00                                        ; func body size (guess)
000389f: 00                                        ; local decl count
00038a0: 41                                        ; i32.const
00038a1: 01                                        ; i32 literal
00038a2: 42                                        ; i64.const
00038a3: 02                                        ; i64 literal
00038a4: fe                                        ; prefix
00038a5: 40                                        ; i64.atomic.rmw32.xor_u
00038a6: 02                                        ; alignment
00038a7: 03                                        ; memory offset
00038a8: 1a                                        ; drop
00038a9: 0b                                        ; end
000389e: 0b                                        ; FIXUP func body size
; function body 391
00038aa: 00                                        ; func body size (guess)
00038ab: 00                                        ; local decl count
00038ac: 41                                        ; i32.const
00038ad: 01                                        ; i32 literal
00038ae: 41                                        ; i32.const
00038af: 02                                        ; i32 literal
00038b0: fe                                        ; prefix
00038b1: 41                                        ; i32.atomic.rmw.xchg
00038b2: 02                                        ; alignment
00038b3: 03                                        ; memory offset
00038b4: 1a                                        ; drop
00038b5: 0b                                        ; end
00038aa: 0b                                        ; FIXUP func body size
; function body 392
00038b6: 00                                        ; func body size (guess)
00038b7: 00                                        ; local decl count
00038b8: 41                                        ; i32.const
00038b9: 01                                        ; i32 literal
00038ba: 42                                        ; i64.const
00038bb: 02                                        ; i64 literal
00038bc: fe                                        ; prefix
00038bd: 42                                        ; i64.atomic.rmw.xchg
00038be: 03                                        ; alignment
00038bf: 07                                        ; memory offset
00038c0: 1a                                        ; drop
00038c1: 0b                                        ; end
00038b6: 0b                                        ; FIXUP func body size
; function body 393
00038c2: 00                                        ; func body size (guess)
00038c3: 00                                        ; local decl count
00038c4: 41                                        ; i32.const
00038c5: 01                                        ; i32 literal
00038c6: 41                                        ; i32.const
00038c7: 02                                        ; i32 literal
00038c8: fe                                        ; prefix
00038c9: 43                                        ; i32.atomic.rmw8.xchg_u
00038ca: 00                                        ; alignment
00038cb: 03                                        ; memory offset
00038cc: 1a                                        ; drop
00038cd: 0b                                        ; end
00038c2: 0b                                        ; FIXUP func body size
; function body 394
00038ce: 00                                        ; func body size (guess)
00038cf: 00                                        ; local decl count
00038d0: 41                                        ; i32.const
00038d1: 01                                        ; i32 literal
00038d2: 41                                        ; i32.const
00038d3: 02                                        ; i32 literal
00038d4: fe                                        ; prefix
00038d5: 44                                        ; i32.atomic.rmw16.xchg_u
00038d6: 01                                        ; alignment
00038d7: 03                                        ; memory offset
00038d8: 1a                                        ; drop
00038d9: 0b                                        ; end
00038ce: 0b                                        ; FIXUP func body size
; function body 395
00038da: 00                                        ; func body size (guess)
00038db: 00                                        ; local decl count
00038dc: 41                                        ; i32.const
00038dd: 01                                        ; i32 literal
00038de: 42                                        ; i64.const
00038df: 02                                        ; i64 literal
00038e0: fe                                        ; prefix
00038e1: 45                                        ; i64.atomic.rmw8.xchg_u
00038e2: 00                                        ; alignment
00038e3: 03                                        ; memory offset
00038e4: 1a                                        ; drop
00038e5: 0b                                        ; end
00038da: 0b                                        ; FIXUP func body size
; function body 396
00038e6: 00                                        ; func body size (guess)
00038e7: 00                                        ; local decl count
00038e8: 41                                        ; i32.const
00038e9: 01                                        ; i32 literal
00038ea: 42                                        ; i64.const
00038eb: 02                                        ; i64 literal
00038ec: fe                                        ; prefix
00038ed: 46                                        ; i64.atomic.rmw16.xchg_u
00038ee: 01                                        ; alignment
00038ef: 03                                        ; memory offset
00038f0: 1a                                        ; drop
00038f1: 0b                                        ; end
00038e6: 0b                                        ; FIXUP func body size
; function body 397
00038f2: 00                                        ; func body size (guess)
00038f3: 00                                        ; local decl count
00038f4: 41                                        ; i32.const
00038f5: 01                                        ; i32 literal
00038f6: 42                                        ; i64.const
00038f7: 02                                        ; i64 literal
00038f8: fe                                        ; prefix
00038f9: 47                                        ; i64.atomic.rmw32.xchg_u
00038fa: 02                                        ; alignment
00038fb: 03                                        ; memory offset
00038fc: 1a                                        ; drop
00038fd: 0b                                        ; end
00038f2: 0b                                        ; FIXUP func body size
; function body 398
00038fe: 00                                        ; func body size (guess)
00038ff: 00                                        ; local decl count
0003900: 41                                        ; i32.const
0003901: 01                                        ; i32 literal
0003902: 41                                        ; i32.const
0003903: 02                                        ; i32 literal
0003904: 41                                        ; i32.const
0003905: 03                                        ; i32 literal
0003906: fe                                        ; prefix
0003907: 48                                        ; i32.atomic.rmw.cmpxchg
0003908: 02                                        ; alignment
0003909: 03                                        ; memory offset
000390a: 1a                                        ; drop
000390b: 0b                                        ; end
00038fe: 0d                                        ; FIXUP func body size
; function body 399
000390c: 00                                        ; func body size (guess)
000390d: 00                                        ; local decl count
000390e: 41                                        ; i32.const
000390f: 01                                        ; i32 literal
0003910: 42                                        ; i64.const
0003911: 02                                        ; i64 literal
0003912: 42                                        ; i64.const
0003913: 03                                        ; i64 literal
0003914: fe                                        ; prefix
0003915: 49                                        ; i64.atomic.rmw.cmpxchg
0003916: 03                                        ; alignment
0003917: 07                                        ; memory offset
0003918: 1a                                        ; drop
0003919: 0b                                        ; end
000390c: 0d                                        ; FIXUP func body size
; function body 400
000391a: 00                                        ; func body size (guess)
000391b: 00                                        ; local decl count
000391c: 41                                        ; i32.const
000391d: 01                                        ; i32 literal
000391e: 41                                        ; i32.const
000391f: 02                                        ; i32 literal
0003920: 41                                        ; i32.const
0003921: 03                                        ; i32 literal
0003922: fe                                        ; prefix
0003923: 4a                                        ; i32.atomic.rmw8.cmpxchg_u
0003924: 00                                        ; alignment
0003925: 03                                        ; memory offset
0003926: 1a                                        ; drop
0003927: 0b                                        ; end
000391a: 0d                                        ; FIXUP func body size
; function body 401
0003928: 00                                        ; func body size (guess)
0003929: 00                                        ; local decl count
000392a: 41                                        ; i32.const
000392b: 01                                        ; i32 literal
000392c: 41                                        ; i32.const
000392d: 02                                        ; i32 literal
000392e: 41                                        ; i32.const
000392f: 03                                        ; i32 literal
0003930: fe                                        ; prefix
0003931: 4b                                        ; i32.atomic.rmw16.cmpxchg_u
0003932: 01                                        ; alignment
0003933: 03                                        ; memory offset
0003934: 1a                                        ; drop
0003935: 0b                                        ; end
0003928: 0d                                        ; FIXUP func body size
; function body 402
0003936: 00                                        ; func body size (guess)
0003937: 00                                        ; local decl count
0003938: 41                                        ; i32.const
0003939: 01                                        ; i32 literal
000393a: 42                                        ; i64.const
000393b: 02                                        ; i64 literal
000393c: 42                                        ; i64.const
000393d: 03                                        ; i64 literal
000393e: fe                                        ; prefix
000393f: 4c                                        ; i64.atomic.rmw8.cmpxchg_u
0003940: 00                                        ; alignment
0003941: 03                                        ; memory offset
0003942: 1a                                        ; drop
0003943: 0b                                        ; end
0003936: 0d                                        ; FIXUP func body size
; function body 403
0003944: 00                                        ; func body size (guess)
0003945: 00                                        ; local decl count
0003946: 41                                        ; i32.const
0003947: 01                                        ; i32 literal
0003948: 42                                        ; i64.const
0003949: 02                                        ; i64 literal
000394a: 42                                        ; i64.const
000394b: 03                                        ; i64 literal
000394c: fe                                        ; prefix
000394d: 4d                                        ; i64.atomic.rmw16.cmpxchg_u
000394e: 01                                        ; alignment
000394f: 03                                        ; memory offset
0003950: 1a                                        ; drop
0003951: 0b                                        ; end
0003944: 0d                                        ; FIXUP func body size
; function body 404
0003952: 00                                        ; func body size (guess)
0003953: 00                                        ; local decl count
0003954: 41                                        ; i32.const
0003955: 01                                        ; i32 literal
0003956: 42                                        ; i64.const
0003957: 02                                        ; i64 literal
0003958: 42                                        ; i64.const
0003959: 03                                        ; i64 literal
000395a: fe                                        ; prefix
000395b: 4e                                        ; i64.atomic.rmw32.cmpxchg_u
000395c: 02                                        ; alignment
000395d: 03                                        ; memory offset
000395e: 1a                                        ; drop
000395f: 0b                                        ; end
0003952: 0d                                        ; FIXUP func body size
; move data: [1b34, 3960) -> [1b35, 3961)
0001b33: ac3c                                      ; FIXUP section size
; section "Data" (11)
0003961: 0b                                        ; section code
0003962: 00                                        ; section size (guess)
0003963: 01                                        ; num data segments
; data segment header 0
0003964: 01                                        ; segment flags
0003965: 00                                        ; data segment size
; data segment data 0
0003962: 03                                        ; FIXUP section size
BeginModule(version: 1)
  BeginTypeSection(8)
    OnTypeCount(2)
    OnType(index: 0, params: [], results: [])
    OnType(index: 1, params: [i32], results: [])
  EndTypeSection
  BeginImportSection(14)
    OnImportCount(1)
    OnImport(index: 0, kind: func, module: "host", field: "print")
    OnImportFunc(import_index: 0, func_index: 0, sig_index: 1)
  EndImportSection
  BeginFunctionSection(407)
    OnFunctionCount(405)
    OnFunction(index: 1, sig_index: 0)
    OnFunction(index: 2, sig_index: 0)
    OnFunction(index: 3, sig_index: 0)
    OnFunction(index: 4, sig_index: 0)
    OnFunction(index: 5, sig_index: 0)
    OnFunction(index: 6, sig_index: 0)
    OnFunction(index: 7, sig_index: 0)
    OnFunction(index: 8, sig_index: 0)
    OnFunction(index: 9, sig_index: 0)
    OnFunction(index: 10, sig_index: 0)
    OnFunction(index: 11, sig_index: 0)
    OnFunction(index: 12, sig_index: 0)
    OnFunction(index: 13, sig_index: 0)
    OnFunction(index: 14, sig_index: 0)
    OnFunction(index: 15, sig_index: 0)
    OnFunction(index: 16, sig_index: 0)
    OnFunction(index: 17, sig_index: 0)
    OnFunction(index: 18, sig_index: 0)
    OnFunction(index: 19, sig_index: 0)
    OnFunction(index: 20, sig_index: 0)
    OnFunction(index: 21, sig_index: 0)
    OnFunction(index: 22, sig_index: 0)
    OnFunction(index: 23, sig_index: 0)
    OnFunction(index: 24, sig_index: 0)
    OnFunction(index: 25, sig_index: 0)
    OnFunction(index: 26, sig_index: 0)
    OnFunction(index: 27, sig_index: 0)
    OnFunction(index: 28, sig_index: 0)
    OnFunction(index: 29, sig_index: 0)
    OnFunction(index: 30, sig_index: 0)
    OnFunction(index: 31, sig_index: 0)
    OnFunction(index: 32, sig_index: 0)
    OnFunction(index: 33, sig_index: 0)
    OnFunction(index: 34, sig_index: 0)
    OnFunction(index: 35, sig_index: 0)
    OnFunction(index: 36, sig_index: 0)
    OnFunction(index: 37, sig_index: 0)
    OnFunction(index: 38, sig_index: 0)
    OnFunction(index: 39, sig_index: 0)
    OnFunction(index: 40, sig_index: 0)
    OnFunction(index: 41, sig_index: 0)
    OnFunction(index: 42, sig_index: 0)
    OnFunction(index: 43, sig_index: 0)
    OnFunction(index: 44, sig_index: 0)
    OnFunction(index: 45, sig_index: 0)
    OnFunction(index: 46, sig_index: 0)
    OnFunction(index: 47, sig_index: 0)
    OnFunction(index: 48, sig_index: 0)
    OnFunction(index: 49, sig_index: 0)
    OnFunction(index: 50, sig_index: 0)
    OnFunction(index: 51, sig_index: 0)
    OnFunction(index: 52, sig_index: 0)
    OnFunction(index: 53, sig_index: 0)
    OnFunction(index: 54, sig_index: 0)
    OnFunction(index: 55, sig_index: 0)
    OnFunction(index: 56, sig_index: 0)
    OnFunction(index: 57, sig_index: 0)
    OnFunction(index: 58, sig_index: 0)
    OnFunction(index: 59, sig_index: 0)
    OnFunction(index: 60, sig_index: 0)
    OnFunction(index: 61, sig_index: 0)
    OnFunction(index: 62, sig_index: 0)
    OnFunction(index: 63, sig_index: 0)
    OnFunction(index: 64, sig_index: 0)
    OnFunction(index: 65, sig_index: 0)
    OnFunction(index: 66, sig_index: 0)
    OnFunction(index: 67, sig_index: 0)
    OnFunction(index: 68, sig_index: 0)
    OnFunction(index: 69, sig_index: 0)
    OnFunction(index: 70, sig_index: 0)
    OnFunction(index: 71, sig_index: 0)
    OnFunction(index: 72, sig_index: 0)
    OnFunction(index: 73, sig_index: 0)
    OnFunction(index: 74, sig_index: 0)
    OnFunction(index: 75, sig_index: 0)
    OnFunction(index: 76, sig_index: 0)
    OnFunction(index: 77, sig_index: 0)
    OnFunction(index: 78, sig_index: 0)
    OnFunction(index: 79, sig_index: 0)
    OnFunction(index: 80, sig_index: 0)
    OnFunction(index: 81, sig_index: 0)
    OnFunction(index: 82, sig_index: 0)
    OnFunction(index: 83, sig_index: 0)
    OnFunction(index: 84, sig_index: 0)
    OnFunction(index: 85, sig_index: 0)
    OnFunction(index: 86, sig_index: 0)
    OnFunction(index: 87, sig_index: 0)
    OnFunction(index: 88, sig_index: 0)
    OnFunction(index: 89, sig_index: 0)
    OnFunction(index: 90, sig_index: 0)
    OnFunction(index: 91, sig_index: 0)
    OnFunction(index: 92, sig_index: 0)
    OnFunction(index: 93, sig_index: 0)
    OnFunction(index: 94, sig_index: 0)
    OnFunction(index: 95, sig_index: 0)
    OnFunction(index: 96, sig_index: 0)
    OnFunction(index: 97, sig_index: 0)
    OnFunction(index: 98, sig_index: 0)
    OnFunction(index: 99, sig_index: 0)
    OnFunction(index: 100, sig_index: 0)
    OnFunction(index: 101, sig_index: 0)
    OnFunction(index: 102, sig_index: 0)
    OnFunction(index: 103, sig_index: 0)
    OnFunction(index: 104, sig_index: 0)
    OnFunction(index: 105, sig_index: 0)
    OnFunction(index: 106, sig_index: 0)
    OnFunction(index: 107, sig_index: 0)
    OnFunction(index: 108, sig_index: 0)
    OnFunction(index: 109, sig_index: 0)
    OnFunction(index: 110, sig_index: 0)
    OnFunction(index: 111, sig_index: 0)
    OnFunction(index: 112, sig_index: 0)
    OnFunction(index: 113, sig_index: 0)
    OnFunction(index: 114, sig_index: 0)
    OnFunction(index: 115, sig_index: 0)
    OnFunction(index: 116, sig_index: 0)
    OnFunction(index: 117, sig_index: 0)
    OnFunction(index: 118, sig_index: 0)
    OnFunction(index: 119, sig_index: 0)
    OnFunction(index: 120, sig_index: 0)
    OnFunction(index: 121, sig_index: 0)
    OnFunction(index: 122, sig_index: 0)
    OnFunction(index: 123, sig_index: 0)
    OnFunction(index: 124, sig_index: 0)
    OnFunction(index: 125, sig_index: 0)
    OnFunction(index: 126, sig_index: 0)
    OnFunction(index: 127, sig_index: 0)
    OnFunction(index: 128, sig_index: 0)
    OnFunction(index: 129, sig_index: 0)
    OnFunction(index: 130, sig_index: 0)
    OnFunction(index: 131, sig_index: 0)
    OnFunction(index: 132, sig_index: 0)
    OnFunction(index: 133, sig_index: 0)
    OnFunction(index: 134, sig_index: 0)
    OnFunction(index: 135, sig_index: 0)
    OnFunction(index: 136, sig_index: 0)
    OnFunction(index: 137, sig_index: 0)
    OnFunction(index: 138, sig_index: 0)
    OnFunction(index: 139, sig_index: 0)
    OnFunction(index: 140, sig_index: 0)
    OnFunction(index: 141, sig_index: 0)
    OnFunction(index: 142, sig_index: 0)
    OnFunction(index: 143, sig_index: 0)
    OnFunction(index: 144, sig_index: 0)
    OnFunction(index: 145, sig_index: 0)
    OnFunction(index: 146, sig_index: 0)
    OnFunction(index: 147, sig_index: 0)
    OnFunction(index: 148, sig_index: 0)
    OnFunction(index: 149, sig_index: 0)
    OnFunction(index: 150, sig_index: 0)
    OnFunction(index: 151, sig_index: 0)
    OnFunction(index: 152, sig_index: 0)
    OnFunction(index: 153, sig_index: 0)
    OnFunction(index: 154, sig_index: 0)
    OnFunction(index: 155, sig_index: 0)
    OnFunction(index: 156, sig_index: 0)
    OnFunction(index: 157, sig_index: 0)
    OnFunction(index: 158, sig_index: 0)
    OnFunction(index: 159, sig_index: 0)
    OnFunction(index: 160, sig_index: 0)
    OnFunction(index: 161, sig_index: 0)
    OnFunction(index: 162, sig_index: 0)
    OnFunction(index: 163, sig_index: 0)
    OnFunction(index: 164, sig_index: 0)
    OnFunction(index: 165, sig_index: 0)
    OnFunction(index: 166, sig_index: 0)
    OnFunction(index: 167, sig_index: 0)
    OnFunction(index: 168, sig_index: 0)
    OnFunction(index: 169, sig_index: 0)
    OnFunction(index: 170, sig_index: 0)
    OnFunction(index: 171, sig_index: 0)
    OnFunction(index: 172, sig_index: 0)
    OnFunction(index: 173, sig_index: 0)
    OnFunction(index: 174, sig_index: 0)
    OnFunction(index: 175, sig_index: 0)
    OnFunction(index: 176, sig_index: 0)
    OnFunction(index: 177, sig_index: 0)
    OnFunction(index: 178, sig_index: 0)
    OnFunction(index: 179, sig_index: 0)
    OnFunction(index: 180, sig_index: 0)
    OnFunction(index: 181, sig_index: 0)
    OnFunction(index: 182, sig_index: 0)
    OnFunction(index: 183, sig_index: 0)
    OnFunction(index: 184, sig_index: 0)
    OnFunction(index: 185, sig_index: 0)
    OnFunction(index: 186, sig_index: 0)
    OnFunction(index: 187, sig_index: 0)
    OnFunction(index: 188, sig_index: 0)
    OnFunction(index: 189, sig_index: 0)
    OnFunction(index: 190, sig_index: 0)
    OnFunction(index: 191, sig_index: 0)
    OnFunction(index: 192, sig_index: 0)
    OnFunction(index: 193, sig_index: 0)
    OnFunction(index: 194, sig_index: 0)
    OnFunction(index: 195, sig_index: 0)
    OnFunction(index: 196, sig_index: 0)
    OnFunction(index: 197, sig_index: 0)
    OnFunction(index: 198, sig_index: 0)
    OnFunction(index: 199, sig_index: 0)
    OnFunction(index: 200, sig_index: 0)
    OnFunction(index: 201, sig_index: 0)
    OnFunction(index: 202, sig_index: 0)
    OnFunction(index: 203, sig_index: 0)
    OnFunction(index: 204, sig_index: 0)
    OnFunction(index: 205, sig_index: 0)
    OnFunction(index: 206, sig_index: 0)
    OnFunction(index: 207, sig_index: 0)
    OnFunction(index: 208, sig_index: 0)
    OnFunction(index: 209, sig_index: 0)
    OnFunction(index: 210, sig_index: 0)
    OnFunction(index: 211, sig_index: 0)
    OnFunction(index: 212, sig_index: 0)
    OnFunction(index: 213, sig_index: 0)
    OnFunction(index: 214, sig_index: 0)
    OnFunction(index: 215, sig_index: 0)
    OnFunction(index: 216, sig_index: 0)
    OnFunction(index: 217, sig_index: 0)
    OnFunction(index: 218, sig_index: 0)
    OnFunction(index: 219, sig_index: 0)
    OnFunction(index: 220, sig_index: 0)
    OnFunction(index: 221, sig_index: 0)
    OnFunction(index: 222, sig_index: 0)
    OnFunction(index: 223, sig_index: 0)
    OnFunction(index: 224, sig_index: 0)
    OnFunction(index: 225, sig_index: 0)
    OnFunction(index: 226, sig_index: 0)
    OnFunction(index: 227, sig_index: 0)
    OnFunction(index: 228, sig_index: 0)
    OnFunction(index: 229, sig_index: 0)
    OnFunction(index: 230, sig_index: 0)
    OnFunction(index: 231, sig_index: 0)
    OnFunction(index: 232, sig_index: 0)
    OnFunction(index: 233, sig_index: 0)
    OnFunction(index: 234, sig_index: 0)
    OnFunction(index: 235, sig_index: 0)
    OnFunction(index: 236, sig_index: 0)
    OnFunction(index: 237, sig_index: 0)
    OnFunction(index: 238, sig_index: 0)
    OnFunction(index: 239, sig_index: 0)
    OnFunction(index: 240, sig_index: 0)
    OnFunction(index: 241, sig_index: 0)
    OnFunction(index: 242, sig_index: 0)
    OnFunction(index: 243, sig_index: 0)
    OnFunction(index: 244, sig_index: 0)
    OnFunction(index: 245, sig_index: 0)
    OnFunction(index: 246, sig_index: 0)
    OnFunction(index: 247, sig_index: 0)
    OnFunction(index: 248, sig_index: 0)
    OnFunction(index: 249, sig_index: 0)
    OnFunction(index: 250, sig_index: 0)
    OnFunction(index: 251, sig_index: 0)
    OnFunction(index: 252, sig_index: 0)
    OnFunction(index: 253, sig_index: 0)
    OnFunction(index: 254, sig_index: 0)
    OnFunction(index: 255, sig_index: 0)
    OnFunction(index: 256, sig_index: 0)
    OnFunction(index: 257, sig_index: 0)
    OnFunction(index: 258, sig_index: 0)
    OnFunction(index: 259, sig_index: 0)
    OnFunction(index: 260, sig_index: 0)
    OnFunction(index: 261, sig_index: 0)
    OnFunction(index: 262, sig_index: 0)
    OnFunction(index: 263, sig_index: 0)
    OnFunction(index: 264, sig_index: 0)
    OnFunction(index: 265, sig_index: 0)
    OnFunction(index: 266, sig_index: 0)
    OnFunction(index: 267, sig_index: 0)
    OnFunction(index: 268, sig_index: 0)
    OnFunction(index: 269, sig_index: 0)
    OnFunction(index: 270, sig_index: 0)
    OnFunction(index: 271, sig_index: 0)
    OnFunction(index: 272, sig_index: 0)
    OnFunction(index: 273, sig_index: 0)
    OnFunction(index: 274, sig_index: 0)
    OnFunction(index: 275, sig_index: 0)
    OnFunction(index: 276, sig_index: 0)
    OnFunction(index: 277, sig_index: 0)
    OnFunction(index: 278, sig_index: 0)
    OnFunction(index: 279, sig_index: 0)
    OnFunction(index: 280, sig_index: 0)
    OnFunction(index: 281, sig_index: 0)
    OnFunction(index: 282, sig_index: 0)
    OnFunction(index: 283, sig_index: 0)
    OnFunction(index: 284, sig_index: 0)
    OnFunction(index: 285, sig_index: 0)
    OnFunction(index: 286, sig_index: 0)
    OnFunction(index: 287, sig_index: 0)
    OnFunction(index: 288, sig_index: 0)
    OnFunction(index: 289, sig_index: 0)
    OnFunction(index: 290, sig_index: 0)
    OnFunction(index: 291, sig_index: 0)
    OnFunction(index: 292, sig_index: 0)
    OnFunction(index: 293, sig_index: 0)
    OnFunction(index: 294, sig_index: 0)
    OnFunction(index: 295, sig_index: 0)
    OnFunction(index: 296, sig_index: 0)
    OnFunction(index: 297, sig_index: 0)
    OnFunction(index: 298, sig_index: 0)
    OnFunction(index: 299, sig_index: 0)
    OnFunction(index: 300, sig_index: 0)
    OnFunction(index: 301, sig_index: 0)
    OnFunction(index: 302, sig_index: 0)
    OnFunction(index: 303, sig_index: 0)
    OnFunction(index: 304, sig_index: 0)
    OnFunction(index: 305, sig_index: 0)
    OnFunction(index: 306, sig_index: 0)
    OnFunction(index: 307, sig_index: 0)
    OnFunction(index: 308, sig_index: 0)
    OnFunction(index: 309, sig_index: 0)
    OnFunction(index: 310, sig_index: 0)
    OnFunction(index: 311, sig_index: 0)
    OnFunction(index: 312, sig_index: 0)
    OnFunction(index: 313, sig_index: 0)
    OnFunction(index: 314, sig_index: 0)
    OnFunction(index: 315, sig_index: 0)
    OnFunction(index: 316, sig_index: 0)
    OnFunction(index: 317, sig_index: 0)
    OnFunction(index: 318, sig_index: 0)
    OnFunction(index: 319, sig_index: 0)
    OnFunction(index: 320, sig_index: 0)
    OnFunction(index: 321, sig_index: 0)
    OnFunction(index: 322, sig_index: 0)
    OnFunction(index: 323, sig_index: 0)
    OnFunction(index: 324, sig_index: 0)
    OnFunction(index: 325, sig_index: 0)
    OnFunction(index: 326, sig_index: 0)
    OnFunction(index: 327, sig_index: 0)
    OnFunction(index: 328, sig_index: 0)
    OnFunction(index: 329, sig_index: 0)
    OnFunction(index: 330, sig_index: 0)
    OnFunction(index: 331, sig_index: 0)
    OnFunction(index: 332, sig_index: 0)
    OnFunction(index: 333, sig_index: 0)
    OnFunction(index: 334, sig_index: 0)
    OnFunction(index: 335, sig_index: 0)
    OnFunction(index: 336, sig_index: 0)
    OnFunction(index: 337, sig_index: 0)
    OnFunction(index: 338, sig_index: 0)
    OnFunction(index: 339, sig_index: 0)
    OnFunction(index: 340, sig_index: 0)
    OnFunction(index: 341, sig_index: 0)
    OnFunction(index: 342, sig_index: 0)
    OnFunction(index: 343, sig_index: 0)
    OnFunction(index: 344, sig_index: 0)
    OnFunction(index: 345, sig_index: 0)
    OnFunction(index: 346, sig_index: 0)
    OnFunction(index: 347, sig_index: 0)
    OnFunction(index: 348, sig_index: 0)
    OnFunction(index: 349, sig_index: 0)
    OnFunction(index: 350, sig_index: 0)
    OnFunction(index: 351, sig_index: 0)
    OnFunction(index: 352, sig_index: 0)
    OnFunction(index: 353, sig_index: 0)
    OnFunction(index: 354, sig_index: 0)
    OnFunction(index: 355, sig_index: 0)
    OnFunction(index: 356, sig_index: 0)
    OnFunction(index: 357, sig_index: 0)
    OnFunction(index: 358, sig_index: 0)
    OnFunction(index: 359, sig_index: 0)
    OnFunction(index: 360, sig_index: 0)
    OnFunction(index: 361, sig_index: 0)
    OnFunction(index: 362, sig_index: 0)
    OnFunction(index: 363, sig_index: 0)
    OnFunction(index: 364, sig_index: 0)
    OnFunction(index: 365, sig_index: 0)
    OnFunction(index: 366, sig_index: 0)
    OnFunction(index: 367, sig_index: 0)
    OnFunction(index: 368, sig_index: 0)
    OnFunction(index: 369, sig_index: 0)
    OnFunction(index: 370, sig_index: 0)
    OnFunction(index: 371, sig_index: 0)
    OnFunction(index: 372, sig_index: 0)
    OnFunction(index: 373, sig_index: 0)
    OnFunction(index: 374, sig_index: 0)
    OnFunction(index: 375, sig_index: 0)
    OnFunction(index: 376, sig_index: 0)
    OnFunction(index: 377, sig_index: 0)
    OnFunction(index: 378, sig_index: 0)
    OnFunction(index: 379, sig_index: 0)
    OnFunction(index: 380, sig_index: 0)
    OnFunction(index: 381, sig_index: 0)
    OnFunction(index: 382, sig_index: 0)
    OnFunction(index: 383, sig_index: 0)
    OnFunction(index: 384, sig_index: 0)
    OnFunction(index: 385, sig_index: 0)
    OnFunction(index: 386, sig_index: 0)
    OnFunction(index: 387, sig_index: 0)
    OnFunction(index: 388, sig_index: 0)
    OnFunction(index: 389, sig_index: 0)
    OnFunction(index: 390, sig_index: 0)
    OnFunction(index: 391, sig_index: 0)
    OnFunction(index: 392, sig_index: 0)
    OnFunction(index: 393, sig_index: 0)
    OnFunction(index: 394, sig_index: 0)
    OnFunction(index: 395, sig_index: 0)
    OnFunction(index: 396, sig_index: 0)
    OnFunction(index: 397, sig_index: 0)
    OnFunction(index: 398, sig_index: 0)
    OnFunction(index: 399, sig_index: 0)
    OnFunction(index: 400, sig_index: 0)
    OnFunction(index: 401, sig_index: 0)
    OnFunction(index: 402, sig_index: 0)
    OnFunction(index: 403, sig_index: 0)
    OnFunction(index: 404, sig_index: 0)
    OnFunction(index: 405, sig_index: 0)
  EndFunctionSection
  BeginTableSection(5)
    OnTableCount(1)
    OnTable(index: 0, elem_type: funcref, initial: 2, max: 2)
  EndTableSection
  BeginMemorySection(4)
    OnMemoryCount(1)
    OnMemory(index: 0, initial: 1, max: 1)
  EndMemorySection
  BeginGlobalSection(6)
    OnGlobalCount(1)
    BeginGlobal(index: 0, type: i32, mutable: true)
    BeginGlobalInitExpr(0)
    OnInitExprI32ConstExpr(index: 0, value: 0)
    EndGlobalInitExpr(0)
    EndGlobal(0)
  EndGlobalSection
  BeginExportSection(6478)
    OnExportCount(404)
    OnExport(index: 0, kind: func, item_index: 2, name: "unreachable")
    OnExport(index: 1, kind: func, item_index: 3, name: "br")
    OnExport(index: 2, kind: func, item_index: 4, name: "br_table")
    OnExport(index: 3, kind: func, item_index: 5, name: "return")
    OnExport(index: 4, kind: func, item_index: 6, name: "call")
    OnExport(index: 5, kind: func, item_index: 7, name: "call_indirect")
    OnExport(index: 6, kind: func, item_index: 8, name: "return_call")
    OnExport(index: 7, kind: func, item_index: 9, name: "return_call_indirect")
    OnExport(index: 8, kind: func, item_index: 10, name: "drop")
    OnExport(index: 9, kind: func, item_index: 11, name: "select")
    OnExport(index: 10, kind: func, item_index: 12, name: "select_t")
    OnExport(index: 11, kind: func, item_index: 13, name: "get_local")
    OnExport(index: 12, kind: func, item_index: 14, name: "set_local")
    OnExport(index: 13, kind: func, item_index: 15, name: "tee_local")
    OnExport(index: 14, kind: func, item_index: 16, name: "get_global")
    OnExport(index: 15, kind: func, item_index: 17, name: "set_global")
    OnExport(index: 16, kind: func, item_index: 18, name: "i32.load")
    OnExport(index: 17, kind: func, item_index: 19, name: "i64.load")
    OnExport(index: 18, kind: func, item_index: 20, name: "f32.load")
    OnExport(index: 19, kind: func, item_index: 21, name: "f64.load")
    OnExport(index: 20, kind: func, item_index: 22, name: "i32.load8_s")
    OnExport(index: 21, kind: func, item_index: 23, name: "i32.load8_u")
    OnExport(index: 22, kind: func, item_index: 24, name: "i32.load16_s")
    OnExport(index: 23, kind: func, item_index: 25, name: "i32.load16_u")
    OnExport(index: 24, kind: func, item_index: 26, name: "i64.load8_s")
    OnExport(index: 25, kind: func, item_index: 27, name: "i64.load8_u")
    OnExport(index: 26, kind: func, item_index: 28, name: "i64.load16_s")
    OnExport(index: 27, kind: func, item_index: 29, name: "i64.load16_u")
    OnExport(index: 28, kind: func, item_index: 30, name: "i64.load32_s")
    OnExport(index: 29, kind: func, item_index: 31, name: "i64.load32_u")
    OnExport(index: 30, kind: func, item_index: 32, name: "i32.store")
    OnExport(index: 31, kind: func, item_index: 33, name: "i64.store")
    OnExport(index: 32, kind: func, item_index: 34, name: "f32.store")
    OnExport(index: 33, kind: func, item_index: 35, name: "f64.store")
    OnExport(index: 34, kind: func, item_index: 36, name: "i32.store8")
    OnExport(index: 35, kind: func, item_index: 37, name: "i32.store16")
    OnExport(index: 36, kind: func, item_index: 38, name: "i64.store8")
    OnExport(index: 37, kind: func, item_index: 39, name: "i64.store16")
    OnExport(index: 38, kind: func, item_index: 40, name: "i64.store32")
    OnExport(index: 39, kind: func, item_index: 41, name: "current_memory")
    OnExport(index: 40, kind: func, item_index: 42, name: "grow_memory")
    OnExport(index: 41, kind: func, item_index: 43, name: "i32.const")
    OnExport(index: 42, kind: func, item_index: 44, name: "i64.const")
    OnExport(index: 43, kind: func, item_index: 45, name: "f32.const")
    OnExport(index: 44, kind: func, item_index: 46, name: "f64.const")
    OnExport(index: 45, kind: func, item_index: 47, name: "i32.eqz")
    OnExport(index: 46, kind: func, item_index: 48, name: "i32.eq")
    OnExport(index: 47, kind: func, item_index: 49, name: "i32.ne")
    OnExport(index: 48, kind: func, item_index: 50, name: "i32.lt_s")
    OnExport(index: 49, kind: func, item_index: 51, name: "i32.lt_u")
    OnExport(index: 50, kind: func, item_index: 52, name: "i32.gt_s")
    OnExport(index: 51, kind: func, item_index: 53, name: "i32.gt_u")
    OnExport(index: 52, kind: func, item_index: 54, name: "i32.le_s")
    OnExport(index: 53, kind: func, item_index: 55, name: "i32.le_u")
    OnExport(index: 54, kind: func, item_index: 56, name: "i32.ge_s")
    OnExport(index: 55, kind: func, item_index: 57, name: "i32.ge_u")
    OnExport(index: 56, kind: func, item_index: 58, name: "i64.eqz")
    OnExport(index: 57, kind: func, item_index: 59, name: "i64.eq")
    OnExport(index: 58, kind: func, item_index: 60, name: "i64.ne")
    OnExport(index: 59, kind: func, item_index: 61, name: "i64.lt_s")
    OnExport(index: 60, kind: func, item_index: 62, name: "i64.lt_u")
    OnExport(index: 61, kind: func, item_index: 63, name: "i64.gt_s")
    OnExport(index: 62, kind: func, item_index: 64, name: "i64.gt_u")
    OnExport(index: 63, kind: func, item_index: 65, name: "i64.le_s")
    OnExport(index: 64, kind: func, item_index: 66, name: "i64.le_u")
    OnExport(index: 65, kind: func, item_index: 67, name: "i64.ge_s")
    OnExport(index: 66, kind: func, item_index: 68, name: "i64.ge_u")
    OnExport(index: 67, kind: func, item_index: 69, name: "f32.eq")
    OnExport(index: 68, kind: func, item_index: 70, name: "f32.ne")
    OnExport(index: 69, kind: func, item_index: 71, name: "f32.lt")
    OnExport(index: 70, kind: func, item_index: 72, name: "f32.gt")
    OnExport(index: 71, kind: func, item_index: 73, name: "f32.le")
    OnExport(index: 72, kind: func, item_index: 74, name: "f32.ge")
    OnExport(index: 73, kind: func, item_index: 75, name: "f64.eq")
    OnExport(index: 74, kind: func, item_index: 76, name: "f64.ne")
    OnExport(index: 75, kind: func, item_index: 77, name: "f64.lt")
    OnExport(index: 76, kind: func, item_index: 78, name: "f64.gt")
    OnExport(index: 77, kind: func, item_index: 79, name: "f64.le")
    OnExport(index: 78, kind: func, item_index: 80, name: "f64.ge")
    OnExport(index: 79, kind: func, item_index: 81, name: "i32.clz")
    OnExport(index: 80, kind: func, item_index: 82, name: "i32.ctz")
    OnExport(index: 81, kind: func, item_index: 83, name: "i32.popcnt")
    OnExport(index: 82, kind: func, item_index: 84, name: "i32.add")
    OnExport(index: 83, kind: func, item_index: 85, name: "i32.sub")
    OnExport(index: 84, kind: func, item_index: 86, name: "i32.mul")
    OnExport(index: 85, kind: func, item_index: 87, name: "i32.div_s")
    OnExport(index: 86, kind: func, item_index: 88, name: "i32.div_u")
    OnExport(index: 87, kind: func, item_index: 89, name: "i32.rem_s")
    OnExport(index: 88, kind: func, item_index: 90, name: "i32.rem_u")
    OnExport(index: 89, kind: func, item_index: 91, name: "i32.and")
    OnExport(index: 90, kind: func, item_index: 92, name: "i32.or")
    OnExport(index: 91, kind: func, item_index: 93, name: "i32.xor")
    OnExport(index: 92, kind: func, item_index: 94, name: "i32.shl")
    OnExport(index: 93, kind: func, item_index: 95, name: "i32.shr_s")
    OnExport(index: 94, kind: func, item_index: 96, name: "i32.shr_u")
    OnExport(index: 95, kind: func, item_index: 97, name: "i32.rotl")
    OnExport(index: 96, kind: func, item_index: 98, name: "i32.rotr")
    OnExport(index: 97, kind: func, item_index: 99, name: "i64.clz")
    OnExport(index: 98, kind: func, item_index: 100, name: "i64.ctz")
    OnExport(index: 99, kind: func, item_index: 101, name: "i64.popcnt")
    OnExport(index: 100, kind: func, item_index: 102, name: "i64.add")
    OnExport(index: 101, kind: func, item_index: 103, name: "i64.sub")
    OnExport(index: 102, kind: func, item_index: 104, name: "i64.mul")
    OnExport(index: 103, kind: func, item_index: 105, name: "i64.div_s")
    OnExport(index: 104, kind: func, item_index: 106, name: "i64.div_u")
    OnExport(index: 105, kind: func, item_index: 107, name: "i64.rem_s")
    OnExport(index: 106, kind: func, item_index: 108, name: "i64.rem_u")
    OnExport(index: 107, kind: func, item_index: 109, name: "i64.and")
    OnExport(index: 108, kind: func, item_index: 110, name: "i64.or")
    OnExport(index: 109, kind: func, item_index: 111, name: "i64.xor")
    OnExport(index: 110, kind: func, item_index: 112, name: "i64.shl")
    OnExport(index: 111, kind: func, item_index: 113, name: "i64.shr_s")
    OnExport(index: 112, kind: func, item_index: 114, name: "i64.shr_u")
    OnExport(index: 113, kind: func, item_index: 115, name: "i64.rotl")
    OnExport(index: 114, kind: func, item_index: 116, name: "i64.rotr")
    OnExport(index: 115, kind: func, item_index: 117, name: "f32.abs")
    OnExport(index: 116, kind: func, item_index: 118, name: "f32.neg")
    OnExport(index: 117, kind: func, item_index: 119, name: "f32.ceil")
    OnExport(index: 118, kind: func, item_index: 120, name: "f32.floor")
    OnExport(index: 119, kind: func, item_index: 121, name: "f32.trunc")
    OnExport(index: 120, kind: func, item_index: 122, name: "f32.nearest")
    OnExport(index: 121, kind: func, item_index: 123, name: "f32.sqrt")
    OnExport(index: 122, kind: func, item_index: 124, name: "f32.add")
    OnExport(index: 123, kind: func, item_index: 125, name: "f32.sub")
    OnExport(index: 124, kind: func, item_index: 126, name: "f32.mul")
    OnExport(index: 125, kind: func, item_index: 127, name: "f32.div")
    OnExport(index: 126, kind: func, item_index: 128, name: "f32.min")
    OnExport(index: 127, kind: func, item_index: 129, name: "f32.max")
    OnExport(index: 128, kind: func, item_index: 130, name: "f32.copysign")
    OnExport(index: 129, kind: func, item_index: 131, name: "f64.abs")
    OnExport(index: 130, kind: func, item_index: 132, name: "f64.neg")
    OnExport(index: 131, kind: func, item_index: 133, name: "f64.ceil")
    OnExport(index: 132, kind: func, item_index: 134, name: "f64.floor")
    OnExport(index: 133, kind: func, item_index: 135, name: "f64.trunc")
    OnExport(index: 134, kind: func, item_index: 136, name: "f64.nearest")
    OnExport(index: 135, kind: func, item_index: 137, name: "f64.sqrt")
    OnExport(index: 136, kind: func, item_index: 138, name: "f64.add")
    OnExport(index: 137, kind: func, item_index: 139, name: "f64.sub")
    OnExport(index: 138, kind: func, item_index: 140, name: "f64.mul")
    OnExport(index: 139, kind: func, item_index: 141, name: "f64.div")
    OnExport(index: 140, kind: func, item_index: 142, name: "f64.min")
    OnExport(index: 141, kind: func, item_index: 143, name: "f64.max")
    OnExport(index: 142, kind: func, item_index: 144, name: "f64.copysign")
    OnExport(index: 143, kind: func, item_index: 145, name: "i32.wrap/i64")
    OnExport(index: 144, kind: func, item_index: 146, name: "i32.trunc_s/f32")
    OnExport(index: 145, kind: func, item_index: 147, name: "i32.trunc_u/f32")
    OnExport(index: 146, kind: func, item_index: 148, name: "i32.trunc_s/f64")
    OnExport(index: 147, kind: func, item_index: 149, name: "i32.trunc_u/f64")
    OnExport(index: 148, kind: func, item_index: 150, name: "i64.extend_s/i32")
    OnExport(index: 149, kind: func, item_index: 151, name: "i64.extend_u/i32")
    OnExport(index: 150, kind: func, item_index: 152, name: "i64.trunc_s/f32")
    OnExport(index: 151, kind: func, item_index: 153, name: "i64.trunc_u/f32")
    OnExport(index: 152, kind: func, item_index: 154, name: "i64.trunc_s/f64")
    OnExport(index: 153, kind: func, item_index: 155, name: "i64.trunc_u/f64")
    OnExport(index: 154, kind: func, item_index: 156, name: "f32.convert_s/i32")
    OnExport(index: 155, kind: func, item_index: 157, name: "f32.convert_u/i32")
    OnExport(index: 156, kind: func, item_index: 158, name: "f32.convert_s/i64")
    OnExport(index: 157, kind: func, item_index: 159, name: "f32.convert_u/i64")
    OnExport(index: 158, kind: func, item_index: 160, name: "f32.demote/f64")
    OnExport(index: 159, kind: func, item_index: 161, name: "f64.convert_s/i32")
    OnExport(index: 160, kind: func, item_index: 162, name: "f64.convert_u/i32")
    OnExport(index: 161, kind: func, item_index: 163, name: "f64.convert_s/i64")
    OnExport(index: 162, kind: func, item_index: 164, name: "f64.convert_u/i64")
    OnExport(index: 163, kind: func, item_index: 165, name: "f64.promote/f32")
    OnExport(index: 164, kind: func, item_index: 166, name: "i32.reinterpret/f32")
    OnExport(index: 165, kind: func, item_index: 167, name: "f32.reinterpret/i32")
    OnExport(index: 166, kind: func, item_index: 168, name: "i64.reinterpret/f64")
    OnExport(index: 167, kind: func, item_index: 169, name: "f64.reinterpret/i64")
    OnExport(index: 168, kind: func, item_index: 170, name: "i32.extend8_s")
    OnExport(index: 169, kind: func, item_index: 171, name: "i32.extend16_s")
    OnExport(index: 170, kind: func, item_index: 172, name: "i64.extend8_s")
    OnExport(index: 171, kind: func, item_index: 173, name: "i64.extend16_s")
    OnExport(index: 172, kind: func, item_index: 174, name: "i64.extend32_s")
    OnExport(index: 173, kind: func, item_index: 175, name: "alloca")
    OnExport(index: 174, kind: func, item_index: 176, name: "br_unless")
    OnExport(index: 175, kind: func, item_index: 177, name: "call_host")
    OnExport(index: 176, kind: func, item_index: 178, name: "data")
    OnExport(index: 177, kind: func, item_index: 179, name: "drop_keep")
    OnExport(index: 178, kind: func, item_index: 180, name: "i32.trunc_s:sat/f32")
    OnExport(index: 179, kind: func, item_index: 181, name: "i32.trunc_u:sat/f32")
    OnExport(index: 180, kind: func, item_index: 182, name: "i32.trunc_s:sat/f64")
    OnExport(index: 181, kind: func, item_index: 183, name: "i32.trunc_u:sat/f64")
    OnExport(index: 182, kind: func, item_index: 184, name: "i64.trunc_s:sat/f32")
    OnExport(index: 183, kind: func, item_index: 185, name: "i64.trunc_u:sat/f32")
    OnExport(index: 184, kind: func, item_index: 186, name: "i64.trunc_s:sat/f64")
    OnExport(index: 185, kind: func, item_index: 187, name: "i64.trunc_u:sat/f64")
    OnExport(index: 186, kind: func, item_index: 188, name: "memory.init")
    OnExport(index: 187, kind: func, item_index: 189, name: "data.drop")
    OnExport(index: 188, kind: func, item_index: 190, name: "memory.copy")
    OnExport(index: 189, kind: func, item_index: 191, name: "memory.fill")
    OnExport(index: 190, kind: func, item_index: 192, name: "table.init")
    OnExport(index: 191, kind: func, item_index: 193, name: "elem.drop")
    OnExport(index: 192, kind: func, item_index: 194, name: "table.copy")
    OnExport(index: 193, kind: func, item_index: 195, name: "v128.load")
    OnExport(index: 194, kind: func, item_index: 196, name: "v128.store")
    OnExport(index: 195, kind: func, item_index: 197, name: "v128.const")
    OnExport(index: 196, kind: func, item_index: 198, name: "i8x16.splat")
    OnExport(index: 197, kind: func, item_index: 199, name: "i8x16.extract_lane_s")
    OnExport(index: 198, kind: func, item_index: 200, name: "i8x16.extract_lane_u")
    OnExport(index: 199, kind: func, item_index: 201, name: "i8x16.replace_lane")
    OnExport(index: 200, kind: func, item_index: 202, name: "i16x8.splat")
    OnExport(index: 201, kind: func, item_index: 203, name: "i16x8.extract_lane_s")
    OnExport(index: 202, kind: func, item_index: 204, name: "i16x8.extract_lane_u")
    OnExport(index: 203, kind: func, item_index: 205, name: "i16x8.replace_lane")
    OnExport(index: 204, kind: func, item_index: 206, name: "i32x4.splat")
    OnExport(index: 205, kind: func, item_index: 207, name: "i32x4.extract_lane")
    OnExport(index: 206, kind: func, item_index: 208, name: "i32x4.replace_lane")
    OnExport(index: 207, kind: func, item_index: 209, name: "i64x2.splat")
    OnExport(index: 208, kind: func, item_index: 210, name: "i64x2.extract_lane")
    OnExport(index: 209, kind: func, item_index: 211, name: "i64x2.replace_lane")
    OnExport(index: 210, kind: func, item_index: 212, name: "f32x4.splat")
    OnExport(index: 211, kind: func, item_index: 213, name: "f32x4.extract_lane")
    OnExport(index: 212, kind: func, item_index: 214, name: "f32x4.replace_lane")
    OnExport(index: 213, kind: func, item_index: 215, name: "f64x2.splat")
    OnExport(index: 214, kind: func, item_index: 216, name: "f64x2.extract_lane")
    OnExport(index: 215, kind: func, item_index: 217, name: "f64x2.replace_lane")
    OnExport(index: 216, kind: func, item_index: 218, name: "i8x16.eq")
    OnExport(index: 217, kind: func, item_index: 219, name: "i8x16.ne")
    OnExport(index: 218, kind: func, item_index: 220, name: "i8x16.lt_s")
    OnExport(index: 219, kind: func, item_index: 221, name: "i8x16.lt_u")
    OnExport(index: 220, kind: func, item_index: 222, name: "i8x16.gt_s")
    OnExport(index: 221, kind: func, item_index: 223, name: "i8x16.gt_u")
    OnExport(index: 222, kind: func, item_index: 224, name: "i8x16.le_s")
    OnExport(index: 223, kind: func, item_index: 225, name: "i8x16.le_u")
    OnExport(index: 224, kind: func, item_index: 226, name: "i8x16.ge_s")
    OnExport(index: 225, kind: func, item_index: 227, name: "i8x16.ge_u")
    OnExport(index: 226, kind: func, item_index: 228, name: "i16x8.eq")
    OnExport(index: 227, kind: func, item_index: 229, name: "i16x8.ne")
    OnExport(index: 228, kind: func, item_index: 230, name: "i16x8.lt_s")
    OnExport(index: 229, kind: func, item_index: 231, name: "i16x8.lt_u")
    OnExport(index: 230, kind: func, item_index: 232, name: "i16x8.gt_s")
    OnExport(index: 231, kind: func, item_index: 233, name: "i16x8.gt_u")
    OnExport(index: 232, kind: func, item_index: 234, name: "i16x8.le_s")
    OnExport(index: 233, kind: func, item_index: 235, name: "i16x8.le_u")
    OnExport(index: 234, kind: func, item_index: 236, name: "i16x8.ge_s")
    OnExport(index: 235, kind: func, item_index: 237, name: "i16x8.ge_u")
    OnExport(index: 236, kind: func, item_index: 238, name: "i32x4.eq")
    OnExport(index: 237, kind: func, item_index: 239, name: "i32x4.ne")
    OnExport(index: 238, kind: func, item_index: 240, name: "i32x4.lt_s")
    OnExport(index: 239, kind: func, item_index: 241, name: "i32x4.lt_u")
    OnExport(index: 240, kind: func, item_index: 242, name: "i32x4.gt_s")
    OnExport(index: 241, kind: func, item_index: 243, name: "i32x4.gt_u")
    OnExport(index: 242, kind: func, item_index: 244, name: "i32x4.le_s")
    OnExport(index: 243, kind: func, item_index: 245, name: "i32x4.le_u")
    OnExport(index: 244, kind: func, item_index: 246, name: "i32x4.ge_s")
    OnExport(index: 245, kind: func, item_index: 247, name: "i32x4.ge_u")
    OnExport(index: 246, kind: func, item_index: 248, name: "f32x4.eq")
    OnExport(index: 247, kind: func, item_index: 249, name: "f32x4.ne")
    OnExport(index: 248, kind: func, item_index: 250, name: "f32x4.lt")
    OnExport(index: 249, kind: func, item_index: 251, name: "f32x4.gt")
    OnExport(index: 250, kind: func, item_index: 252, name: "f32x4.le")
    OnExport(index: 251, kind: func, item_index: 253, name: "f32x4.ge")
    OnExport(index: 252, kind: func, item_index: 254, name: "f64x2.eq")
    OnExport(index: 253, kind: func, item_index: 255, name: "f64x2.ne")
    OnExport(index: 254, kind: func, item_index: 256, name: "f64x2.lt")
    OnExport(index: 255, kind: func, item_index: 257, name: "f64x2.gt")
    OnExport(index: 256, kind: func, item_index: 258, name: "f64x2.le")
    OnExport(index: 257, kind: func, item_index: 259, name: "f64x2.ge")
    OnExport(index: 258, kind: func, item_index: 260, name: "v128.not")
    OnExport(index: 259, kind: func, item_index: 261, name: "v128.and")
    OnExport(index: 260, kind: func, item_index: 262, name: "v128.or")
    OnExport(index: 261, kind: func, item_index: 263, name: "v128.xor")
    OnExport(index: 262, kind: func, item_index: 264, name: "v128.bitselect")
    OnExport(index: 263, kind: func, item_index: 265, name: "i8x16.neg")
    OnExport(index: 264, kind: func, item_index: 266, name: "i8x16.any_true")
    OnExport(index: 265, kind: func, item_index: 267, name: "i8x16.all_true")
    OnExport(index: 266, kind: func, item_index: 268, name: "i8x16.shl")
    OnExport(index: 267, kind: func, item_index: 269, name: "i8x16.shr_s")
    OnExport(index: 268, kind: func, item_index: 270, name: "i8x16.shr_u")
    OnExport(index: 269, kind: func, item_index: 271, name: "i8x16.add")
    OnExport(index: 270, kind: func, item_index: 272, name: "i8x16.add_saturate_s")
    OnExport(index: 271, kind: func, item_index: 273, name: "i8x16.add_saturate_u")
    OnExport(index: 272, kind: func, item_index: 274, name: "i8x16.sub")
    OnExport(index: 273, kind: func, item_index: 275, name: "i8x16.sub_saturate_s")
    OnExport(index: 274, kind: func, item_index: 276, name: "i8x16.sub_saturate_u")
    OnExport(index: 275, kind: func, item_index: 277, name: "i8x16.mul")
    OnExport(index: 276, kind: func, item_index: 278, name: "i16x8.neg")
    OnExport(index: 277, kind: func, item_index: 279, name: "i16x8.any_true")
    OnExport(index: 278, kind: func, item_index: 280, name: "i16x8.all_true")
    OnExport(index: 279, kind: func, item_index: 281, name: "i16x8.shl")
    OnExport(index: 280, kind: func, item_index: 282, name: "i16x8.shr_s")
    OnExport(index: 281, kind: func, item_index: 283, name: "i16x8.shr_u")
    OnExport(index: 282, kind: func, item_index: 284, name: "i16x8.add")
    OnExport(index: 283, kind: func, item_index: 285, name: "i16x8.add_saturate_s")
    OnExport(index: 284, kind: func, item_index: 286, name: "i16x8.add_saturate_u")
    OnExport(index: 285, kind: func, item_index: 287, name: "i16x8.sub")
    OnExport(index: 286, kind: func, item_index: 288, name: "i16x8.sub_saturate_s")
    OnExport(index: 287, kind: func, item_index: 289, name: "i16x8.sub_saturate_u")
    OnExport(index: 288, kind: func, item_index: 290, name: "i16x8.mul")
    OnExport(index: 289, kind: func, item_index: 291, name: "i32x4.neg")
    OnExport(index: 290, kind: func, item_index: 292, name: "i32x4.any_true")
    OnExport(index: 291, kind: func, item_index: 293, name: "i32x4.all_true")
    OnExport(index: 292, kind: func, item_index: 294, name: "i32x4.shl")
    OnExport(index: 293, kind: func, item_index: 295, name: "i32x4.shr_s")
    OnExport(index: 294, kind: func, item_index: 296, name: "i32x4.shr_u")
    OnExport(index: 295, kind: func, item_index: 297, name: "i32x4.add")
    OnExport(index: 296, kind: func, item_index: 298, name: "i32x4.sub")
    OnExport(index: 297, kind: func, item_index: 299, name: "i32x4.mul")
    OnExport(index: 298, kind: func, item_index: 300, name: "i64x2.neg")
    OnExport(index: 299, kind: func, item_index: 301, name: "i64x2.any_true")
    OnExport(index: 300, kind: func, item_index: 302, name: "i64x2.all_true")
    OnExport(index: 301, kind: func, item_index: 303, name: "i64x2.shl")
    OnExport(index: 302, kind: func, item_index: 304, name: "i64x2.shr_s")
    OnExport(index: 303, kind: func, item_index: 305, name: "i64x2.shr_u")
    OnExport(index: 304, kind: func, item_index: 306, name: "i64x2.add")
    OnExport(index: 305, kind: func, item_index: 307, name: "i64x2.sub")
    OnExport(index: 306, kind: func, item_index: 308, name: "f32x4.abs")
    OnExport(index: 307, kind: func, item_index: 309, name: "f32x4.neg")
    OnExport(index: 308, kind: func, item_index: 310, name: "f32x4.sqrt")
    OnExport(index: 309, kind: func, item_index: 311, name: "f32x4.add")
    OnExport(index: 310, kind: func, item_index: 312, name: "f32x4.sub")
    OnExport(index: 311, kind: func, item_index: 313, name: "f32x4.mul")
    OnExport(index: 312, kind: func, item_index: 314, name: "f32x4.div")
    OnExport(index: 313, kind: func, item_index: 315, name: "f32x4.min")
    OnExport(index: 314, kind: func, item_index: 316, name: "f32x4.max")
    OnExport(index: 315, kind: func, item_index: 317, name: "f64x2.abs")
    OnExport(index: 316, kind: func, item_index: 318, name: "f64x2.neg")
    OnExport(index: 317, kind: func, item_index: 319, name: "f64x2.sqrt")
    OnExport(index: 318, kind: func, item_index: 320, name: "f64x2.add")
    OnExport(index: 319, kind: func, item_index: 321, name: "f64x2.sub")
    OnExport(index: 320, kind: func, item_index: 322, name: "f64x2.mul")
    OnExport(index: 321, kind: func, item_index: 323, name: "f64x2.div")
    OnExport(index: 322, kind: func, item_index: 324, name: "f64x2.min")
    OnExport(index: 323, kind: func, item_index: 325, name: "f64x2.max")
    OnExport(index: 324, kind: func, item_index: 326, name: "i32x4.trunc_sat_f32x4_s")
    OnExport(index: 325, kind: func, item_index: 327, name: "i32x4.trunc_sat_f32x4_u")
    OnExport(index: 326, kind: func, item_index: 328, name: "i64x2.trunc_sat_f64x2_s")
    OnExport(index: 327, kind: func, item_index: 329, name: "i64x2.trunc_sat_f64x2_u")
    OnExport(index: 328, kind: func, item_index: 330, name: "f32x4.convert_i32x4_s")
    OnExport(index: 329, kind: func, item_index: 331, name: "f32x4.convert_i32x4_u")
    OnExport(index: 330, kind: func, item_index: 332, name: "f64x2.convert_i64x2_s")
    OnExport(index: 331, kind: func, item_index: 333, name: "f64x2.convert_i64x2_u")
    OnExport(index: 332, kind: func, item_index: 334, name: "v8x16.swizzle")
    OnExport(index: 333, kind: func, item_index: 335, name: "v8x16.shuffle")
    OnExport(index: 334, kind: func, item_index: 336, name: "i8x16.load_splat")
    OnExport(index: 335, kind: func, item_index: 337, name: "i16x8.load_splat")
    OnExport(index: 336, kind: func, item_index: 338, name: "i32x4.load_splat")
    OnExport(index: 337, kind: func, item_index: 339, name: "i64x2.load_splat")
    OnExport(index: 338, kind: func, item_index: 340, name: "atomic.notify")
    OnExport(index: 339, kind: func, item_index: 341, name: "i32.atomic.wait")
    OnExport(index: 340, kind: func, item_index: 342, name: "i64.atomic.wait")
    OnExport(index: 341, kind: func, item_index: 343, name: "i32.atomic.load")
    OnExport(index: 342, kind: func, item_index: 344, name: "i64.atomic.load")
    OnExport(index: 343, kind: func, item_index: 345, name: "i32.atomic.load8_u")
    OnExport(index: 344, kind: func, item_index: 346, name: "i32.atomic.load16_u")
    OnExport(index: 345, kind: func, item_index: 347, name: "i64.atomic.load8_u")
    OnExport(index: 346, kind: func, item_index: 348, name: "i64.atomic.load16_u")
    OnExport(index: 347, kind: func, item_index: 349, name: "i64.atomic.load32_u")
    OnExport(index: 348, kind: func, item_index: 350, name: "i32.atomic.store")
    OnExport(index: 349, kind: func, item_index: 351, name: "i64.atomic.store")
    OnExport(index: 350, kind: func, item_index: 352, name: "i32.atomic.store8")
    OnExport(index: 351, kind: func, item_index: 353, name: "i32.atomic.store16")
    OnExport(index: 352, kind: func, item_index: 354, name: "i64.atomic.store8")
    OnExport(index: 353, kind: func, item_index: 355, name: "i64.atomic.store16")
    OnExport(index: 354, kind: func, item_index: 356, name: "i64.atomic.store32")
    OnExport(index: 355, kind: func, item_index: 357, name: "i32.atomic.rmw.add")
    OnExport(index: 356, kind: func, item_index: 358, name: "i64.atomic.rmw.add")
    OnExport(index: 357, kind: func, item_index: 359, name: "i32.atomic.rmw8.add_u")
    OnExport(index: 358, kind: func, item_index: 360, name: "i32.atomic.rmw16.add_u")
    OnExport(index: 359, kind: func, item_index: 361, name: "i64.atomic.rmw8.add_u")
    OnExport(index: 360, kind: func, item_index: 362, name: "i64.atomic.rmw16.add_u")
    OnExport(index: 361, kind: func, item_index: 363, name: "i64.atomic.rmw32.add_u")
    OnExport(index: 362, kind: func, item_index: 364, name: "i32.atomic.rmw.sub")
    OnExport(index: 363, kind: func, item_index: 365, name: "i64.atomic.rmw.sub")
    OnExport(index: 364, kind: func, item_index: 366, name: "i32.atomic.rmw8.sub_u")
    OnExport(index: 365, kind: func, item_index: 367, name: "i32.atomic.rmw16.sub_u")
    OnExport(index: 366, kind: func, item_index: 368, name: "i64.atomic.rmw8.sub_u")
    OnExport(index: 367, kind: func, item_index: 369, name: "i64.atomic.rmw16.sub_u")
    OnExport(index: 368, kind: func, item_index: 370, name: "i64.atomic.rmw32.sub_u")
    OnExport(index: 369, kind: func, item_index: 371, name: "i32.atomic.rmw.and")
    OnExport(index: 370, kind: func, item_index: 372, name: "i64.atomic.rmw.and")
    OnExport(index: 371, kind: func, item_index: 373, name: "i32.atomic.rmw8.and_u")
    OnExport(index: 372, kind: func, item_index: 374, name: "i32.atomic.rmw16.and_u")
    OnExport(index: 373, kind: func, item_index: 375, name: "i64.atomic.rmw8.and_u")
    OnExport(index: 374, kind: func, item_index: 376, name: "i64.atomic.rmw16.and_u")
    OnExport(index: 375, kind: func, item_index: 377, name: "i64.atomic.rmw32.and_u")
    OnExport(index: 376, kind: func, item_index: 378, name: "i32.atomic.rmw.or")
    OnExport(index: 377, kind: func, item_index: 379, name: "i64.atomic.rmw.or")
    OnExport(index: 378, kind: func, item_index: 380, name: "i32.atomic.rmw8.or_u")
    OnExport(index: 379, kind: func, item_index: 381, name: "i32.atomic.rmw16.or_u")
    OnExport(index: 380, kind: func, item_index: 382, name: "i64.atomic.rmw8.or_u")
    OnExport(index: 381, kind: func, item_index: 383, name: "i64.atomic.rmw16.or_u")
    OnExport(index: 382, kind: func, item_index: 384, name: "i64.atomic.rmw32.or_u")
    OnExport(index: 383, kind: func, item_index: 385, name: "i32.atomic.rmw.xor")
    OnExport(index: 384, kind: func, item_index: 386, name: "i64.atomic.rmw.xor")
    OnExport(index: 385, kind: func, item_index: 387, name: "i32.atomic.rmw8.xor_u")
    OnExport(index: 386, kind: func, item_index: 388, name: "i32.atomic.rmw16.xor_u")
    OnExport(index: 387, kind: func, item_index: 389, name: "i64.atomic.rmw8.xor_u")
    OnExport(index: 388, kind: func, item_index: 390, name: "i64.atomic.rmw16.xor_u")
    OnExport(index: 389, kind: func, item_index: 391, name: "i64.atomic.rmw32.xor_u")
    OnExport(index: 390, kind: func, item_index: 392, name: "i32.atomic.rmw.xchg")
    OnExport(index: 391, kind: func, item_index: 393, name: "i64.atomic.rmw.xchg")
    OnExport(index: 392, kind: func, item_index: 394, name: "i32.atomic.rmw8.xchg_u")
    OnExport(index: 393, kind: func, item_index: 395, name: "i32.atomic.rmw16.xchg_u")
    OnExport(index: 394, kind: func, item_index: 396, name: "i64.atomic.rmw8.xchg_u")
    OnExport(index: 395, kind: func, item_index: 397, name: "i64.atomic.rmw16.xchg_u")
    OnExport(index: 396, kind: func, item_index: 398, name: "i64.atomic.rmw32.xchg_u")
    OnExport(index: 397, kind: func, item_index: 399, name: "i32.atomic.rmw.cmpxchg")
    OnExport(index: 398, kind: func, item_index: 400, name: "i64.atomic.rmw.cmpxchg")
    OnExport(index: 399, kind: func, item_index: 401, name: "i32.atomic.rmw8.cmpxchg_u")
    OnExport(index: 400, kind: func, item_index: 402, name: "i32.atomic.rmw16.cmpxchg_u")
    OnExport(index: 401, kind: func, item_index: 403, name: "i64.atomic.rmw8.cmpxchg_u")
    OnExport(index: 402, kind: func, item_index: 404, name: "i64.atomic.rmw16.cmpxchg_u")
    OnExport(index: 403, kind: func, item_index: 405, name: "i64.atomic.rmw32.cmpxchg_u")
  EndExportSection
  BeginElemSection(11)
    OnElemSegmentCount(2)
    BeginElemSegment(index: 0, table_index: 0, flags: 0, elem_type: funcref)
    BeginElemSegmentInitExpr(0)
    OnInitExprI32ConstExpr(index: 0, value: 0)
    EndElemSegmentInitExpr(0)
    OnElemSegmentElemExprCount(index: 0, count: 2)
    OnElemSegmentElemExpr_RefFunc(index: 0, func_index: 1)
    OnElemSegmentElemExpr_RefFunc(index: 0, func_index: 1)
    EndElemSegment(0)
    BeginElemSegment(index: 1, table_index: 0, flags: 5, elem_type: funcref)
    OnElemSegmentElemExprCount(index: 1, count: 0)
    EndElemSegment(1)
  EndElemSection
  BeginDataCountSection(1)
    OnDataCount(1)
  EndDataCountSection
  BeginCodeSection(7724)
    OnFunctionBodyCount(405)
    BeginFunctionBody(1, size:2)
    OnLocalDeclCount(0)
    EndFunctionBody(1)
    BeginFunctionBody(2, size:3)
    OnLocalDeclCount(0)
    OnUnreachableExpr
    EndFunctionBody(2)
    BeginFunctionBody(3, size:4)
    OnLocalDeclCount(0)
    OnBrExpr(depth: 0)
    EndFunctionBody(3)
    BeginFunctionBody(4, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnBrTableExpr(num_targets: 0, depths: [], default: 0)
    EndFunctionBody(4)
    BeginFunctionBody(5, size:3)
    OnLocalDeclCount(0)
    OnReturnExpr
    EndFunctionBody(5)
    BeginFunctionBody(6, size:4)
    OnLocalDeclCount(0)
    OnCallExpr(func_index: 1)
    EndFunctionBody(6)
    BeginFunctionBody(7, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnCallIndirectExpr(sig_index: 0, table_index: 0)
    EndFunctionBody(7)
    BeginFunctionBody(8, size:4)
    OnLocalDeclCount(0)
    OnReturnCallExpr(func_index: 1)
    EndFunctionBody(8)
    BeginFunctionBody(9, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnReturnCallIndirectExpr(sig_index: 0, table_index: 0)
    EndFunctionBody(9)
    BeginFunctionBody(10, size:5)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnDropExpr
    EndFunctionBody(10)
    BeginFunctionBody(11, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnSelectExpr(return_type: any)
    OnDropExpr
    EndFunctionBody(11)
    BeginFunctionBody(12, size:12)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnSelectExpr(return_type: i32)
    OnDropExpr
    EndFunctionBody(12)
    BeginFunctionBody(13, size:7)
    OnLocalDeclCount(1)
    OnLocalDecl(index: 0, count: 1, type: i32)
    OnLocalGetExpr(index: 0)
    OnDropExpr
    EndFunctionBody(13)
    BeginFunctionBody(14, size:8)
    OnLocalDeclCount(1)
    OnLocalDecl(index: 0, count: 1, type: i32)
    OnI32ConstExpr(1 (0x1))
    OnLocalSetExpr(index: 0)
    EndFunctionBody(14)
    BeginFunctionBody(15, size:9)
    OnLocalDeclCount(1)
    OnLocalDecl(index: 0, count: 1, type: i32)
    OnI32ConstExpr(1 (0x1))
    OnLocalTeeExpr(index: 0)
    OnDropExpr
    EndFunctionBody(15)
    BeginFunctionBody(16, size:5)
    OnLocalDeclCount(0)
    OnGlobalGetExpr(index: 0)
    OnDropExpr
    EndFunctionBody(16)
    BeginFunctionBody(17, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnGlobalSetExpr(index: 0)
    EndFunctionBody(17)
    BeginFunctionBody(18, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load" (40), align log2: 2, offset: 2)
    OnDropExpr
    EndFunctionBody(18)
    BeginFunctionBody(19, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load" (41), align log2: 3, offset: 2)
    OnDropExpr
    EndFunctionBody(19)
    BeginFunctionBody(20, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "f32.load" (42), align log2: 2, offset: 2)
    OnDropExpr
    EndFunctionBody(20)
    BeginFunctionBody(21, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "f64.load" (43), align log2: 3, offset: 2)
    OnDropExpr
    EndFunctionBody(21)
    BeginFunctionBody(22, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load8_s" (44), align log2: 0, offset: 2)
    OnDropExpr
    EndFunctionBody(22)
    BeginFunctionBody(23, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load8_u" (45), align log2: 0, offset: 2)
    OnDropExpr
    EndFunctionBody(23)
    BeginFunctionBody(24, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load16_s" (46), align log2: 1, offset: 2)
    OnDropExpr
    EndFunctionBody(24)
    BeginFunctionBody(25, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load16_u" (47), align log2: 1, offset: 2)
    OnDropExpr
    EndFunctionBody(25)
    BeginFunctionBody(26, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load8_s" (48), align log2: 0, offset: 2)
    OnDropExpr
    EndFunctionBody(26)
    BeginFunctionBody(27, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load8_u" (49), align log2: 0, offset: 2)
    OnDropExpr
    EndFunctionBody(27)
    BeginFunctionBody(28, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load16_s" (50), align log2: 1, offset: 2)
    OnDropExpr
    EndFunctionBody(28)
    BeginFunctionBody(29, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load16_u" (51), align log2: 1, offset: 2)
    OnDropExpr
    EndFunctionBody(29)
    BeginFunctionBody(30, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load32_s" (52), align log2: 2, offset: 2)
    OnDropExpr
    EndFunctionBody(30)
    BeginFunctionBody(31, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load32_u" (53), align log2: 2, offset: 2)
    OnDropExpr
    EndFunctionBody(31)
    BeginFunctionBody(32, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i32.store" (54), align log2: 2, offset: 2)
    EndFunctionBody(32)
    BeginFunctionBody(33, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i64.store" (55), align log2: 3, offset: 2)
    EndFunctionBody(33)
    BeginFunctionBody(34, size:12)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnF32ConstExpr(2 (0x0440000000))
    OnStoreExpr(opcode: "f32.store" (56), align log2: 2, offset: 2)
    EndFunctionBody(34)
    BeginFunctionBody(35, size:16)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnStoreExpr(opcode: "f64.store" (57), align log2: 3, offset: 2)
    EndFunctionBody(35)
    BeginFunctionBody(36, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i32.store8" (58), align log2: 0, offset: 2)
    EndFunctionBody(36)
    BeginFunctionBody(37, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i32.store16" (59), align log2: 1, offset: 2)
    EndFunctionBody(37)
    BeginFunctionBody(38, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i64.store8" (60), align log2: 0, offset: 2)
    EndFunctionBody(38)
    BeginFunctionBody(39, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i64.store16" (61), align log2: 1, offset: 2)
    EndFunctionBody(39)
    BeginFunctionBody(40, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i64.store32" (62), align log2: 2, offset: 2)
    EndFunctionBody(40)
    BeginFunctionBody(41, size:5)
    OnLocalDeclCount(0)
    OnMemorySizeExpr
    OnDropExpr
    EndFunctionBody(41)
    BeginFunctionBody(42, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnMemoryGrowExpr
    OnDropExpr
    EndFunctionBody(42)
    BeginFunctionBody(43, size:5)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnDropExpr
    EndFunctionBody(43)
    BeginFunctionBody(44, size:5)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnDropExpr
    EndFunctionBody(44)
    BeginFunctionBody(45, size:8)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnDropExpr
    EndFunctionBody(45)
    BeginFunctionBody(46, size:12)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnDropExpr
    EndFunctionBody(46)
    BeginFunctionBody(47, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("i32.eqz" (69))
    OnDropExpr
    EndFunctionBody(47)
    BeginFunctionBody(48, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.eq" (70))
    OnDropExpr
    EndFunctionBody(48)
    BeginFunctionBody(49, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.ne" (71))
    OnDropExpr
    EndFunctionBody(49)
    BeginFunctionBody(50, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.lt_s" (72))
    OnDropExpr
    EndFunctionBody(50)
    BeginFunctionBody(51, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.lt_u" (73))
    OnDropExpr
    EndFunctionBody(51)
    BeginFunctionBody(52, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.gt_s" (74))
    OnDropExpr
    EndFunctionBody(52)
    BeginFunctionBody(53, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.gt_u" (75))
    OnDropExpr
    EndFunctionBody(53)
    BeginFunctionBody(54, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.le_s" (76))
    OnDropExpr
    EndFunctionBody(54)
    BeginFunctionBody(55, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.le_u" (77))
    OnDropExpr
    EndFunctionBody(55)
    BeginFunctionBody(56, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.ge_s" (78))
    OnDropExpr
    EndFunctionBody(56)
    BeginFunctionBody(57, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.ge_u" (79))
    OnDropExpr
    EndFunctionBody(57)
    BeginFunctionBody(58, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("i64.eqz" (80))
    OnDropExpr
    EndFunctionBody(58)
    BeginFunctionBody(59, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.eq" (81))
    OnDropExpr
    EndFunctionBody(59)
    BeginFunctionBody(60, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.ne" (82))
    OnDropExpr
    EndFunctionBody(60)
    BeginFunctionBody(61, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.lt_s" (83))
    OnDropExpr
    EndFunctionBody(61)
    BeginFunctionBody(62, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.lt_u" (84))
    OnDropExpr
    EndFunctionBody(62)
    BeginFunctionBody(63, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.gt_s" (85))
    OnDropExpr
    EndFunctionBody(63)
    BeginFunctionBody(64, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.gt_u" (86))
    OnDropExpr
    EndFunctionBody(64)
    BeginFunctionBody(65, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.le_s" (87))
    OnDropExpr
    EndFunctionBody(65)
    BeginFunctionBody(66, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.le_u" (88))
    OnDropExpr
    EndFunctionBody(66)
    BeginFunctionBody(67, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.ge_s" (89))
    OnDropExpr
    EndFunctionBody(67)
    BeginFunctionBody(68, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.ge_u" (90))
    OnDropExpr
    EndFunctionBody(68)
    BeginFunctionBody(69, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.eq" (91))
    OnDropExpr
    EndFunctionBody(69)
    BeginFunctionBody(70, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.ne" (92))
    OnDropExpr
    EndFunctionBody(70)
    BeginFunctionBody(71, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.lt" (93))
    OnDropExpr
    EndFunctionBody(71)
    BeginFunctionBody(72, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.gt" (94))
    OnDropExpr
    EndFunctionBody(72)
    BeginFunctionBody(73, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.le" (95))
    OnDropExpr
    EndFunctionBody(73)
    BeginFunctionBody(74, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.ge" (96))
    OnDropExpr
    EndFunctionBody(74)
    BeginFunctionBody(75, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.eq" (97))
    OnDropExpr
    EndFunctionBody(75)
    BeginFunctionBody(76, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.ne" (98))
    OnDropExpr
    EndFunctionBody(76)
    BeginFunctionBody(77, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.lt" (99))
    OnDropExpr
    EndFunctionBody(77)
    BeginFunctionBody(78, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.gt" (100))
    OnDropExpr
    EndFunctionBody(78)
    BeginFunctionBody(79, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.le" (101))
    OnDropExpr
    EndFunctionBody(79)
    BeginFunctionBody(80, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.ge" (102))
    OnDropExpr
    EndFunctionBody(80)
    BeginFunctionBody(81, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.clz" (103))
    OnDropExpr
    EndFunctionBody(81)
    BeginFunctionBody(82, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.ctz" (104))
    OnDropExpr
    EndFunctionBody(82)
    BeginFunctionBody(83, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.popcnt" (105))
    OnDropExpr
    EndFunctionBody(83)
    BeginFunctionBody(84, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.add" (106))
    OnDropExpr
    EndFunctionBody(84)
    BeginFunctionBody(85, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.sub" (107))
    OnDropExpr
    EndFunctionBody(85)
    BeginFunctionBody(86, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.mul" (108))
    OnDropExpr
    EndFunctionBody(86)
    BeginFunctionBody(87, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.div_s" (109))
    OnDropExpr
    EndFunctionBody(87)
    BeginFunctionBody(88, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.div_u" (110))
    OnDropExpr
    EndFunctionBody(88)
    BeginFunctionBody(89, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.rem_s" (111))
    OnDropExpr
    EndFunctionBody(89)
    BeginFunctionBody(90, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.rem_u" (112))
    OnDropExpr
    EndFunctionBody(90)
    BeginFunctionBody(91, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.and" (113))
    OnDropExpr
    EndFunctionBody(91)
    BeginFunctionBody(92, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.or" (114))
    OnDropExpr
    EndFunctionBody(92)
    BeginFunctionBody(93, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.xor" (115))
    OnDropExpr
    EndFunctionBody(93)
    BeginFunctionBody(94, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.shl" (116))
    OnDropExpr
    EndFunctionBody(94)
    BeginFunctionBody(95, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.shr_s" (117))
    OnDropExpr
    EndFunctionBody(95)
    BeginFunctionBody(96, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.shr_u" (118))
    OnDropExpr
    EndFunctionBody(96)
    BeginFunctionBody(97, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.rotl" (119))
    OnDropExpr
    EndFunctionBody(97)
    BeginFunctionBody(98, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.rotr" (120))
    OnDropExpr
    EndFunctionBody(98)
    BeginFunctionBody(99, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.clz" (121))
    OnDropExpr
    EndFunctionBody(99)
    BeginFunctionBody(100, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.ctz" (122))
    OnDropExpr
    EndFunctionBody(100)
    BeginFunctionBody(101, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.popcnt" (123))
    OnDropExpr
    EndFunctionBody(101)
    BeginFunctionBody(102, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.add" (124))
    OnDropExpr
    EndFunctionBody(102)
    BeginFunctionBody(103, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.sub" (125))
    OnDropExpr
    EndFunctionBody(103)
    BeginFunctionBody(104, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.mul" (126))
    OnDropExpr
    EndFunctionBody(104)
    BeginFunctionBody(105, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.div_s" (127))
    OnDropExpr
    EndFunctionBody(105)
    BeginFunctionBody(106, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.div_u" (128))
    OnDropExpr
    EndFunctionBody(106)
    BeginFunctionBody(107, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.rem_s" (129))
    OnDropExpr
    EndFunctionBody(107)
    BeginFunctionBody(108, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.rem_u" (130))
    OnDropExpr
    EndFunctionBody(108)
    BeginFunctionBody(109, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.and" (131))
    OnDropExpr
    EndFunctionBody(109)
    BeginFunctionBody(110, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.or" (132))
    OnDropExpr
    EndFunctionBody(110)
    BeginFunctionBody(111, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.xor" (133))
    OnDropExpr
    EndFunctionBody(111)
    BeginFunctionBody(112, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.shl" (134))
    OnDropExpr
    EndFunctionBody(112)
    BeginFunctionBody(113, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.shr_s" (135))
    OnDropExpr
    EndFunctionBody(113)
    BeginFunctionBody(114, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.shr_u" (136))
    OnDropExpr
    EndFunctionBody(114)
    BeginFunctionBody(115, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.rotl" (137))
    OnDropExpr
    EndFunctionBody(115)
    BeginFunctionBody(116, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.rotr" (138))
    OnDropExpr
    EndFunctionBody(116)
    BeginFunctionBody(117, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.abs" (139))
    OnDropExpr
    EndFunctionBody(117)
    BeginFunctionBody(118, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.neg" (140))
    OnDropExpr
    EndFunctionBody(118)
    BeginFunctionBody(119, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.ceil" (141))
    OnDropExpr
    EndFunctionBody(119)
    BeginFunctionBody(120, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.floor" (142))
    OnDropExpr
    EndFunctionBody(120)
    BeginFunctionBody(121, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.trunc" (143))
    OnDropExpr
    EndFunctionBody(121)
    BeginFunctionBody(122, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.nearest" (144))
    OnDropExpr
    EndFunctionBody(122)
    BeginFunctionBody(123, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.sqrt" (145))
    OnDropExpr
    EndFunctionBody(123)
    BeginFunctionBody(124, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.add" (146))
    OnDropExpr
    EndFunctionBody(124)
    BeginFunctionBody(125, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.sub" (147))
    OnDropExpr
    EndFunctionBody(125)
    BeginFunctionBody(126, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.mul" (148))
    OnDropExpr
    EndFunctionBody(126)
    BeginFunctionBody(127, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.div" (149))
    OnDropExpr
    EndFunctionBody(127)
    BeginFunctionBody(128, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.min" (150))
    OnDropExpr
    EndFunctionBody(128)
    BeginFunctionBody(129, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.max" (151))
    OnDropExpr
    EndFunctionBody(129)
    BeginFunctionBody(130, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.copysign" (152))
    OnDropExpr
    EndFunctionBody(130)
    BeginFunctionBody(131, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.abs" (153))
    OnDropExpr
    EndFunctionBody(131)
    BeginFunctionBody(132, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.neg" (154))
    OnDropExpr
    EndFunctionBody(132)
    BeginFunctionBody(133, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.ceil" (155))
    OnDropExpr
    EndFunctionBody(133)
    BeginFunctionBody(134, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.floor" (156))
    OnDropExpr
    EndFunctionBody(134)
    BeginFunctionBody(135, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.trunc" (157))
    OnDropExpr
    EndFunctionBody(135)
    BeginFunctionBody(136, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.nearest" (158))
    OnDropExpr
    EndFunctionBody(136)
    BeginFunctionBody(137, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.sqrt" (159))
    OnDropExpr
    EndFunctionBody(137)
    BeginFunctionBody(138, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.add" (160))
    OnDropExpr
    EndFunctionBody(138)
    BeginFunctionBody(139, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.sub" (161))
    OnDropExpr
    EndFunctionBody(139)
    BeginFunctionBody(140, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.mul" (162))
    OnDropExpr
    EndFunctionBody(140)
    BeginFunctionBody(141, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.div" (163))
    OnDropExpr
    EndFunctionBody(141)
    BeginFunctionBody(142, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.min" (164))
    OnDropExpr
    EndFunctionBody(142)
    BeginFunctionBody(143, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.max" (165))
    OnDropExpr
    EndFunctionBody(143)
    BeginFunctionBody(144, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.copysign" (166))
    OnDropExpr
    EndFunctionBody(144)
    BeginFunctionBody(145, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("i32.wrap_i64" (167))
    OnDropExpr
    EndFunctionBody(145)
    BeginFunctionBody(146, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.trunc_f32_s" (168))
    OnDropExpr
    EndFunctionBody(146)
    BeginFunctionBody(147, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.trunc_f32_u" (169))
    OnDropExpr
    EndFunctionBody(147)
    BeginFunctionBody(148, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i32.trunc_f64_s" (170))
    OnDropExpr
    EndFunctionBody(148)
    BeginFunctionBody(149, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i32.trunc_f64_u" (171))
    OnDropExpr
    EndFunctionBody(149)
    BeginFunctionBody(150, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("i64.extend_i32_s" (172))
    OnDropExpr
    EndFunctionBody(150)
    BeginFunctionBody(151, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("i64.extend_i32_u" (173))
    OnDropExpr
    EndFunctionBody(151)
    BeginFunctionBody(152, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i64.trunc_f32_s" (174))
    OnDropExpr
    EndFunctionBody(152)
    BeginFunctionBody(153, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i64.trunc_f32_u" (175))
    OnDropExpr
    EndFunctionBody(153)
    BeginFunctionBody(154, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.trunc_f64_s" (176))
    OnDropExpr
    EndFunctionBody(154)
    BeginFunctionBody(155, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.trunc_f64_u" (177))
    OnDropExpr
    EndFunctionBody(155)
    BeginFunctionBody(156, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f32.convert_i32_s" (178))
    OnDropExpr
    EndFunctionBody(156)
    BeginFunctionBody(157, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f32.convert_i32_u" (179))
    OnDropExpr
    EndFunctionBody(157)
    BeginFunctionBody(158, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f32.convert_i64_s" (180))
    OnDropExpr
    EndFunctionBody(158)
    BeginFunctionBody(159, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f32.convert_i64_u" (181))
    OnDropExpr
    EndFunctionBody(159)
    BeginFunctionBody(160, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("f32.demote_f64" (182))
    OnDropExpr
    EndFunctionBody(160)
    BeginFunctionBody(161, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f64.convert_i32_s" (183))
    OnDropExpr
    EndFunctionBody(161)
    BeginFunctionBody(162, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f64.convert_i32_u" (184))
    OnDropExpr
    EndFunctionBody(162)
    BeginFunctionBody(163, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f64.convert_i64_s" (185))
    OnDropExpr
    EndFunctionBody(163)
    BeginFunctionBody(164, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f64.convert_i64_u" (186))
    OnDropExpr
    EndFunctionBody(164)
    BeginFunctionBody(165, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("f64.promote_f32" (187))
    OnDropExpr
    EndFunctionBody(165)
    BeginFunctionBody(166, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f32.reinterpret_i32" (190))
    OnDropExpr
    EndFunctionBody(166)
    BeginFunctionBody(167, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.reinterpret_f32" (188))
    OnDropExpr
    EndFunctionBody(167)
    BeginFunctionBody(168, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f64.reinterpret_i64" (191))
    OnDropExpr
    EndFunctionBody(168)
    BeginFunctionBody(169, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.reinterpret_f64" (189))
    OnDropExpr
    EndFunctionBody(169)
    BeginFunctionBody(170, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.extend8_s" (192))
    OnDropExpr
    EndFunctionBody(170)
    BeginFunctionBody(171, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.extend16_s" (193))
    OnDropExpr
    EndFunctionBody(171)
    BeginFunctionBody(172, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.extend8_s" (194))
    OnDropExpr
    EndFunctionBody(172)
    BeginFunctionBody(173, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.extend16_s" (195))
    OnDropExpr
    EndFunctionBody(173)
    BeginFunctionBody(174, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.extend32_s" (196))
    OnDropExpr
    EndFunctionBody(174)
    BeginFunctionBody(175, size:4)
    OnLocalDeclCount(1)
    OnLocalDecl(index: 0, count: 1, type: i32)
    EndFunctionBody(175)
    BeginFunctionBody(176, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnBrIfExpr(depth: 0)
    EndFunctionBody(176)
    BeginFunctionBody(177, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnCallExpr(func_index: 0)
    EndFunctionBody(177)
    BeginFunctionBody(178, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnBrTableExpr(num_targets: 0, depths: [], default: 0)
    EndFunctionBody(178)
    BeginFunctionBody(179, size:12)
    OnLocalDeclCount(0)
    OnBlockExpr(sig: i32)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBrExpr(depth: 0)
    OnEndExpr
    OnDropExpr
    EndFunctionBody(179)
    BeginFunctionBody(180, size:10)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.trunc_sat_f32_s" (0))
    OnDropExpr
    EndFunctionBody(180)
    BeginFunctionBody(181, size:10)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.trunc_sat_f32_u" (1))
    OnDropExpr
    EndFunctionBody(181)
    BeginFunctionBody(182, size:14)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i32.trunc_sat_f64_s" (2))
    OnDropExpr
    EndFunctionBody(182)
    BeginFunctionBody(183, size:14)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i32.trunc_sat_f64_u" (3))
    OnDropExpr
    EndFunctionBody(183)
    BeginFunctionBody(184, size:10)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i64.trunc_sat_f32_s" (4))
    OnDropExpr
    EndFunctionBody(184)
    BeginFunctionBody(185, size:10)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i64.trunc_sat_f32_u" (5))
    OnDropExpr
    EndFunctionBody(185)
    BeginFunctionBody(186, size:14)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.trunc_sat_f64_s" (6))
    OnDropExpr
    EndFunctionBody(186)
    BeginFunctionBody(187, size:14)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.trunc_sat_f64_u" (7))
    OnDropExpr
    EndFunctionBody(187)
    BeginFunctionBody(188, size:12)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnMemoryInitExpr(0)
    EndFunctionBody(188)
    BeginFunctionBody(189, size:5)
    OnLocalDeclCount(0)
    OnDataDropExpr(0)
    EndFunctionBody(189)
    BeginFunctionBody(190, size:12)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnMemoryCopyExpr
    EndFunctionBody(190)
    BeginFunctionBody(191, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnMemoryFillExpr
    EndFunctionBody(191)
    BeginFunctionBody(192, size:12)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnTableInitExpr(segment_index: 0, table_index: 0)
    EndFunctionBody(192)
    BeginFunctionBody(193, size:5)
    OnLocalDeclCount(0)
    OnElemDropExpr(0)
    EndFunctionBody(193)
    BeginFunctionBody(194, size:12)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnTableCopyExpr(dst_index: 0, src_index: 0)
    EndFunctionBody(194)
    BeginFunctionBody(195, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "v128.load" (0), align log2: 4, offset: 3)
    OnDropExpr
    EndFunctionBody(195)
    BeginFunctionBody(196, size:26)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnStoreExpr(opcode: "v128.store" (1), align log2: 4, offset: 3)
    EndFunctionBody(196)
    BeginFunctionBody(197, size:21)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnDropExpr
    EndFunctionBody(197)
    BeginFunctionBody(198, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i8x16.splat" (4))
    OnDropExpr
    EndFunctionBody(198)
    BeginFunctionBody(199, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 15)
    OnDropExpr
    EndFunctionBody(199)
    BeginFunctionBody(200, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 15)
    OnDropExpr
    EndFunctionBody(200)
    BeginFunctionBody(201, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnSimdLaneOpExpr (lane: 15)
    OnDropExpr
    EndFunctionBody(201)
    BeginFunctionBody(202, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i16x8.splat" (8))
    OnDropExpr
    EndFunctionBody(202)
    BeginFunctionBody(203, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 7)
    OnDropExpr
    EndFunctionBody(203)
    BeginFunctionBody(204, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 7)
    OnDropExpr
    EndFunctionBody(204)
    BeginFunctionBody(205, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnSimdLaneOpExpr (lane: 7)
    OnDropExpr
    EndFunctionBody(205)
    BeginFunctionBody(206, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32x4.splat" (12))
    OnDropExpr
    EndFunctionBody(206)
    BeginFunctionBody(207, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 3)
    OnDropExpr
    EndFunctionBody(207)
    BeginFunctionBody(208, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnSimdLaneOpExpr (lane: 3)
    OnDropExpr
    EndFunctionBody(208)
    BeginFunctionBody(209, size:7)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64x2.splat" (15))
    OnDropExpr
    EndFunctionBody(209)
    BeginFunctionBody(210, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 1)
    OnDropExpr
    EndFunctionBody(210)
    BeginFunctionBody(211, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI64ConstExpr(0 (0x0))
    OnSimdLaneOpExpr (lane: 1)
    OnDropExpr
    EndFunctionBody(211)
    BeginFunctionBody(212, size:10)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32x4.splat" (18))
    OnDropExpr
    EndFunctionBody(212)
    BeginFunctionBody(213, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 3)
    OnDropExpr
    EndFunctionBody(213)
    BeginFunctionBody(214, size:29)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnF32ConstExpr(0 (0x040))
    OnSimdLaneOpExpr (lane: 3)
    OnDropExpr
    EndFunctionBody(214)
    BeginFunctionBody(215, size:14)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64x2.splat" (21))
    OnDropExpr
    EndFunctionBody(215)
    BeginFunctionBody(216, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 1)
    OnDropExpr
    EndFunctionBody(216)
    BeginFunctionBody(217, size:33)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnF64ConstExpr(0 (0x080))
    OnSimdLaneOpExpr (lane: 1)
    OnDropExpr
    EndFunctionBody(217)
    BeginFunctionBody(218, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.eq" (24))
    OnDropExpr
    EndFunctionBody(218)
    BeginFunctionBody(219, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.ne" (25))
    OnDropExpr
    EndFunctionBody(219)
    BeginFunctionBody(220, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.lt_s" (26))
    OnDropExpr
    EndFunctionBody(220)
    BeginFunctionBody(221, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.lt_u" (27))
    OnDropExpr
    EndFunctionBody(221)
    BeginFunctionBody(222, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.gt_s" (28))
    OnDropExpr
    EndFunctionBody(222)
    BeginFunctionBody(223, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.gt_u" (29))
    OnDropExpr
    EndFunctionBody(223)
    BeginFunctionBody(224, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.le_s" (30))
    OnDropExpr
    EndFunctionBody(224)
    BeginFunctionBody(225, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.le_u" (31))
    OnDropExpr
    EndFunctionBody(225)
    BeginFunctionBody(226, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.ge_s" (32))
    OnDropExpr
    EndFunctionBody(226)
    BeginFunctionBody(227, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.ge_u" (33))
    OnDropExpr
    EndFunctionBody(227)
    BeginFunctionBody(228, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.eq" (34))
    OnDropExpr
    EndFunctionBody(228)
    BeginFunctionBody(229, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.ne" (35))
    OnDropExpr
    EndFunctionBody(229)
    BeginFunctionBody(230, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.lt_s" (36))
    OnDropExpr
    EndFunctionBody(230)
    BeginFunctionBody(231, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.lt_u" (37))
    OnDropExpr
    EndFunctionBody(231)
    BeginFunctionBody(232, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.gt_s" (38))
    OnDropExpr
    EndFunctionBody(232)
    BeginFunctionBody(233, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.gt_u" (39))
    OnDropExpr
    EndFunctionBody(233)
    BeginFunctionBody(234, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.le_s" (40))
    OnDropExpr
    EndFunctionBody(234)
    BeginFunctionBody(235, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.le_u" (41))
    OnDropExpr
    EndFunctionBody(235)
    BeginFunctionBody(236, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.ge_s" (42))
    OnDropExpr
    EndFunctionBody(236)
    BeginFunctionBody(237, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.ge_u" (43))
    OnDropExpr
    EndFunctionBody(237)
    BeginFunctionBody(238, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.eq" (44))
    OnDropExpr
    EndFunctionBody(238)
    BeginFunctionBody(239, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.ne" (45))
    OnDropExpr
    EndFunctionBody(239)
    BeginFunctionBody(240, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.lt_s" (46))
    OnDropExpr
    EndFunctionBody(240)
    BeginFunctionBody(241, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.lt_u" (47))
    OnDropExpr
    EndFunctionBody(241)
    BeginFunctionBody(242, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.gt_s" (48))
    OnDropExpr
    EndFunctionBody(242)
    BeginFunctionBody(243, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.gt_u" (49))
    OnDropExpr
    EndFunctionBody(243)
    BeginFunctionBody(244, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.le_s" (50))
    OnDropExpr
    EndFunctionBody(244)
    BeginFunctionBody(245, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.le_u" (51))
    OnDropExpr
    EndFunctionBody(245)
    BeginFunctionBody(246, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.ge_s" (52))
    OnDropExpr
    EndFunctionBody(246)
    BeginFunctionBody(247, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.ge_u" (53))
    OnDropExpr
    EndFunctionBody(247)
    BeginFunctionBody(248, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f32x4.eq" (64))
    OnDropExpr
    EndFunctionBody(248)
    BeginFunctionBody(249, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f32x4.ne" (65))
    OnDropExpr
    EndFunctionBody(249)
    BeginFunctionBody(250, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f32x4.lt" (66))
    OnDropExpr
    EndFunctionBody(250)
    BeginFunctionBody(251, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f32x4.gt" (67))
    OnDropExpr
    EndFunctionBody(251)
    BeginFunctionBody(252, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f32x4.le" (68))
    OnDropExpr
    EndFunctionBody(252)
    BeginFunctionBody(253, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f32x4.ge" (69))
    OnDropExpr
    EndFunctionBody(253)
    BeginFunctionBody(254, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f64x2.eq" (70))
    OnDropExpr
    EndFunctionBody(254)
    BeginFunctionBody(255, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f64x2.ne" (71))
    OnDropExpr
    EndFunctionBody(255)
    BeginFunctionBody(256, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f64x2.lt" (72))
    OnDropExpr
    EndFunctionBody(256)
    BeginFunctionBody(257, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f64x2.gt" (73))
    OnDropExpr
    EndFunctionBody(257)
    BeginFunctionBody(258, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f64x2.le" (74))
    OnDropExpr
    EndFunctionBody(258)
    BeginFunctionBody(259, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f64x2.ge" (75))
    OnDropExpr
    EndFunctionBody(259)
    BeginFunctionBody(260, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("v128.not" (76))
    OnDropExpr
    EndFunctionBody(260)
    BeginFunctionBody(261, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("v128.and" (77))
    OnDropExpr
    EndFunctionBody(261)
    BeginFunctionBody(262, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("v128.or" (78))
    OnDropExpr
    EndFunctionBody(262)
    BeginFunctionBody(263, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("v128.xor" (79))
    OnDropExpr
    EndFunctionBody(263)
    BeginFunctionBody(264, size:59)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnV128ConstExpr(0x00000003 0x00000003 0x00000003 0x00000003)
    OnTernaryExpr("v128.bitselect" (80))
    OnDropExpr
    EndFunctionBody(264)
    BeginFunctionBody(265, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i8x16.neg" (81))
    OnDropExpr
    EndFunctionBody(265)
    BeginFunctionBody(266, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i8x16.any_true" (82))
    OnDropExpr
    EndFunctionBody(266)
    BeginFunctionBody(267, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i8x16.all_true" (83))
    OnDropExpr
    EndFunctionBody(267)
    BeginFunctionBody(268, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i8x16.shl" (84))
    OnDropExpr
    EndFunctionBody(268)
    BeginFunctionBody(269, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i8x16.shr_s" (85))
    OnDropExpr
    EndFunctionBody(269)
    BeginFunctionBody(270, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i8x16.shr_u" (86))
    OnDropExpr
    EndFunctionBody(270)
    BeginFunctionBody(271, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.add" (87))
    OnDropExpr
    EndFunctionBody(271)
    BeginFunctionBody(272, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.add_saturate_s" (88))
    OnDropExpr
    EndFunctionBody(272)
    BeginFunctionBody(273, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.add_saturate_u" (89))
    OnDropExpr
    EndFunctionBody(273)
    BeginFunctionBody(274, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.sub" (90))
    OnDropExpr
    EndFunctionBody(274)
    BeginFunctionBody(275, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.sub_saturate_s" (91))
    OnDropExpr
    EndFunctionBody(275)
    BeginFunctionBody(276, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.sub_saturate_u" (92))
    OnDropExpr
    EndFunctionBody(276)
    BeginFunctionBody(277, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.mul" (93))
    OnDropExpr
    EndFunctionBody(277)
    BeginFunctionBody(278, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.neg" (98))
    OnDropExpr
    EndFunctionBody(278)
    BeginFunctionBody(279, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.any_true" (99))
    OnDropExpr
    EndFunctionBody(279)
    BeginFunctionBody(280, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.all_true" (100))
    OnDropExpr
    EndFunctionBody(280)
    BeginFunctionBody(281, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i16x8.shl" (101))
    OnDropExpr
    EndFunctionBody(281)
    BeginFunctionBody(282, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i16x8.shr_s" (102))
    OnDropExpr
    EndFunctionBody(282)
    BeginFunctionBody(283, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i16x8.shr_u" (103))
    OnDropExpr
    EndFunctionBody(283)
    BeginFunctionBody(284, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.add" (104))
    OnDropExpr
    EndFunctionBody(284)
    BeginFunctionBody(285, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.add_saturate_s" (105))
    OnDropExpr
    EndFunctionBody(285)
    BeginFunctionBody(286, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.add_saturate_u" (106))
    OnDropExpr
    EndFunctionBody(286)
    BeginFunctionBody(287, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.sub" (107))
    OnDropExpr
    EndFunctionBody(287)
    BeginFunctionBody(288, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.sub_saturate_s" (108))
    OnDropExpr
    EndFunctionBody(288)
    BeginFunctionBody(289, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.sub_saturate_u" (109))
    OnDropExpr
    EndFunctionBody(289)
    BeginFunctionBody(290, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.mul" (110))
    OnDropExpr
    EndFunctionBody(290)
    BeginFunctionBody(291, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i32x4.neg" (115))
    OnDropExpr
    EndFunctionBody(291)
    BeginFunctionBody(292, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i32x4.any_true" (116))
    OnDropExpr
    EndFunctionBody(292)
    BeginFunctionBody(293, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i32x4.all_true" (117))
    OnDropExpr
    EndFunctionBody(293)
    BeginFunctionBody(294, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i32x4.shl" (118))
    OnDropExpr
    EndFunctionBody(294)
    BeginFunctionBody(295, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i32x4.shr_s" (119))
    OnDropExpr
    EndFunctionBody(295)
    BeginFunctionBody(296, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i32x4.shr_u" (120))
    OnDropExpr
    EndFunctionBody(296)
    BeginFunctionBody(297, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i32x4.add" (121))
    OnDropExpr
    EndFunctionBody(297)
    BeginFunctionBody(298, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i32x4.sub" (124))
    OnDropExpr
    EndFunctionBody(298)
    BeginFunctionBody(299, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i32x4.mul" (127))
    OnDropExpr
    EndFunctionBody(299)
    BeginFunctionBody(300, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i64x2.neg" (132))
    OnDropExpr
    EndFunctionBody(300)
    BeginFunctionBody(301, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i64x2.any_true" (133))
    OnDropExpr
    EndFunctionBody(301)
    BeginFunctionBody(302, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i64x2.all_true" (134))
    OnDropExpr
    EndFunctionBody(302)
    BeginFunctionBody(303, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i64x2.shl" (135))
    OnDropExpr
    EndFunctionBody(303)
    BeginFunctionBody(304, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i64x2.shr_s" (136))
    OnDropExpr
    EndFunctionBody(304)
    BeginFunctionBody(305, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i64x2.shr_u" (137))
    OnDropExpr
    EndFunctionBody(305)
    BeginFunctionBody(306, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i64x2.add" (138))
    OnDropExpr
    EndFunctionBody(306)
    BeginFunctionBody(307, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i64x2.sub" (141))
    OnDropExpr
    EndFunctionBody(307)
    BeginFunctionBody(308, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("f32x4.abs" (149))
    OnDropExpr
    EndFunctionBody(308)
    BeginFunctionBody(309, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("f32x4.neg" (150))
    OnDropExpr
    EndFunctionBody(309)
    BeginFunctionBody(310, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("f32x4.sqrt" (151))
    OnDropExpr
    EndFunctionBody(310)
    BeginFunctionBody(311, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f32x4.add" (154))
    OnDropExpr
    EndFunctionBody(311)
    BeginFunctionBody(312, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f32x4.sub" (155))
    OnDropExpr
    EndFunctionBody(312)
    BeginFunctionBody(313, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f32x4.mul" (156))
    OnDropExpr
    EndFunctionBody(313)
    BeginFunctionBody(314, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f32x4.div" (157))
    OnDropExpr
    EndFunctionBody(314)
    BeginFunctionBody(315, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f32x4.min" (158))
    OnDropExpr
    EndFunctionBody(315)
    BeginFunctionBody(316, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f32x4.max" (159))
    OnDropExpr
    EndFunctionBody(316)
    BeginFunctionBody(317, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("f64x2.abs" (160))
    OnDropExpr
    EndFunctionBody(317)
    BeginFunctionBody(318, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("f64x2.neg" (161))
    OnDropExpr
    EndFunctionBody(318)
    BeginFunctionBody(319, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("f64x2.sqrt" (162))
    OnDropExpr
    EndFunctionBody(319)
    BeginFunctionBody(320, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f64x2.add" (165))
    OnDropExpr
    EndFunctionBody(320)
    BeginFunctionBody(321, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f64x2.sub" (166))
    OnDropExpr
    EndFunctionBody(321)
    BeginFunctionBody(322, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f64x2.mul" (167))
    OnDropExpr
    EndFunctionBody(322)
    BeginFunctionBody(323, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f64x2.div" (168))
    OnDropExpr
    EndFunctionBody(323)
    BeginFunctionBody(324, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f64x2.min" (169))
    OnDropExpr
    EndFunctionBody(324)
    BeginFunctionBody(325, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f64x2.max" (170))
    OnDropExpr
    EndFunctionBody(325)
    BeginFunctionBody(326, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("i32x4.trunc_sat_f32x4_s" (171))
    OnDropExpr
    EndFunctionBody(326)
    BeginFunctionBody(327, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("i32x4.trunc_sat_f32x4_u" (172))
    OnDropExpr
    EndFunctionBody(327)
    BeginFunctionBody(328, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("i64x2.trunc_sat_f64x2_s" (173))
    OnDropExpr
    EndFunctionBody(328)
    BeginFunctionBody(329, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("i64x2.trunc_sat_f64x2_u" (174))
    OnDropExpr
    EndFunctionBody(329)
    BeginFunctionBody(330, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("f32x4.convert_i32x4_s" (175))
    OnDropExpr
    EndFunctionBody(330)
    BeginFunctionBody(331, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("f32x4.convert_i32x4_u" (176))
    OnDropExpr
    EndFunctionBody(331)
    BeginFunctionBody(332, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("f64x2.convert_i64x2_s" (177))
    OnDropExpr
    EndFunctionBody(332)
    BeginFunctionBody(333, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("f64x2.convert_i64x2_u" (178))
    OnDropExpr
    EndFunctionBody(333)
    BeginFunctionBody(334, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("v8x16.swizzle" (192))
    OnDropExpr
    EndFunctionBody(334)
    BeginFunctionBody(335, size:58)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnSimdShuffleOpExpr (lane: 0x01010101 01010101 01010101 01010101)
    OnDropExpr
    EndFunctionBody(335)
    BeginFunctionBody(336, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadSplatExpr(opcode: "i8x16.load_splat" (194), align log2: 0, offset: 0)
    OnDropExpr
    EndFunctionBody(336)
    BeginFunctionBody(337, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadSplatExpr(opcode: "i16x8.load_splat" (195), align log2: 1, offset: 0)
    OnDropExpr
    EndFunctionBody(337)
    BeginFunctionBody(338, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadSplatExpr(opcode: "i32x4.load_splat" (196), align log2: 2, offset: 0)
    OnDropExpr
    EndFunctionBody(338)
    BeginFunctionBody(339, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadSplatExpr(opcode: "i64x2.load_splat" (197), align log2: 3, offset: 0)
    OnDropExpr
    EndFunctionBody(339)
    BeginFunctionBody(340, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicNotifyExpr(opcode: "atomic.notify" (0), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(340)
    BeginFunctionBody(341, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicWaitExpr(opcode: "i32.atomic.wait" (1), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(341)
    BeginFunctionBody(342, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicWaitExpr(opcode: "i64.atomic.wait" (2), align log2: 3, offset: 3)
    OnDropExpr
    EndFunctionBody(342)
    BeginFunctionBody(343, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i32.atomic.load" (16), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(343)
    BeginFunctionBody(344, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i64.atomic.load" (17), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(344)
    BeginFunctionBody(345, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i32.atomic.load8_u" (18), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(345)
    BeginFunctionBody(346, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i32.atomic.load16_u" (19), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(346)
    BeginFunctionBody(347, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i64.atomic.load8_u" (20), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(347)
    BeginFunctionBody(348, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i64.atomic.load16_u" (21), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(348)
    BeginFunctionBody(349, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i64.atomic.load32_u" (22), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(349)
    BeginFunctionBody(350, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i32.atomic.store" (23), align log2: 2, offset: 3)
    EndFunctionBody(350)
    BeginFunctionBody(351, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i64.atomic.store" (24), align log2: 3, offset: 7)
    EndFunctionBody(351)
    BeginFunctionBody(352, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i32.atomic.store8" (25), align log2: 0, offset: 3)
    EndFunctionBody(352)
    BeginFunctionBody(353, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i32.atomic.store16" (26), align log2: 1, offset: 3)
    EndFunctionBody(353)
    BeginFunctionBody(354, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i64.atomic.store8" (27), align log2: 0, offset: 3)
    EndFunctionBody(354)
    BeginFunctionBody(355, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i64.atomic.store16" (28), align log2: 1, offset: 3)
    EndFunctionBody(355)
    BeginFunctionBody(356, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i64.atomic.store32" (29), align log2: 2, offset: 3)
    EndFunctionBody(356)
    BeginFunctionBody(357, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.add" (30), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(357)
    BeginFunctionBody(358, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.add" (31), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(358)
    BeginFunctionBody(359, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8.add_u" (32), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(359)
    BeginFunctionBody(360, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16.add_u" (33), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(360)
    BeginFunctionBody(361, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8.add_u" (34), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(361)
    BeginFunctionBody(362, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16.add_u" (35), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(362)
    BeginFunctionBody(363, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32.add_u" (36), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(363)
    BeginFunctionBody(364, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.sub" (37), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(364)
    BeginFunctionBody(365, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.sub" (38), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(365)
    BeginFunctionBody(366, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8.sub_u" (39), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(366)
    BeginFunctionBody(367, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16.sub_u" (40), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(367)
    BeginFunctionBody(368, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8.sub_u" (41), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(368)
    BeginFunctionBody(369, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16.sub_u" (42), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(369)
    BeginFunctionBody(370, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32.sub_u" (43), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(370)
    BeginFunctionBody(371, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.and" (44), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(371)
    BeginFunctionBody(372, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.and" (45), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(372)
    BeginFunctionBody(373, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8.and_u" (46), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(373)
    BeginFunctionBody(374, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16.and_u" (47), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(374)
    BeginFunctionBody(375, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8.and_u" (48), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(375)
    BeginFunctionBody(376, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16.and_u" (49), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(376)
    BeginFunctionBody(377, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32.and_u" (50), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(377)
    BeginFunctionBody(378, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.or" (51), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(378)
    BeginFunctionBody(379, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.or" (52), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(379)
    BeginFunctionBody(380, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8.or_u" (53), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(380)
    BeginFunctionBody(381, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16.or_u" (54), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(381)
    BeginFunctionBody(382, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8.or_u" (55), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(382)
    BeginFunctionBody(383, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16.or_u" (56), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(383)
    BeginFunctionBody(384, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32.or_u" (57), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(384)
    BeginFunctionBody(385, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.xor" (58), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(385)
    BeginFunctionBody(386, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.xor" (59), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(386)
    BeginFunctionBody(387, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8.xor_u" (60), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(387)
    BeginFunctionBody(388, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16.xor_u" (61), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(388)
    BeginFunctionBody(389, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8.xor_u" (62), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(389)
    BeginFunctionBody(390, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16.xor_u" (63), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(390)
    BeginFunctionBody(391, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32.xor_u" (64), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(391)
    BeginFunctionBody(392, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.xchg" (65), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(392)
    BeginFunctionBody(393, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.xchg" (66), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(393)
    BeginFunctionBody(394, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8.xchg_u" (67), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(394)
    BeginFunctionBody(395, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16.xchg_u" (68), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(395)
    BeginFunctionBody(396, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8.xchg_u" (69), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(396)
    BeginFunctionBody(397, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16.xchg_u" (70), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(397)
    BeginFunctionBody(398, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32.xchg_u" (71), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(398)
    BeginFunctionBody(399, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i32.atomic.rmw.cmpxchg" (72), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(399)
    BeginFunctionBody(400, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i64.atomic.rmw.cmpxchg" (73), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(400)
    BeginFunctionBody(401, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i32.atomic.rmw8.cmpxchg_u" (74), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(401)
    BeginFunctionBody(402, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i32.atomic.rmw16.cmpxchg_u" (75), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(402)
    BeginFunctionBody(403, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i64.atomic.rmw8.cmpxchg_u" (76), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(403)
    BeginFunctionBody(404, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i64.atomic.rmw16.cmpxchg_u" (77), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(404)
    BeginFunctionBody(405, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i64.atomic.rmw32.cmpxchg_u" (78), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(405)
  EndCodeSection
  BeginDataSection(3)
    OnDataSegmentCount(1)
    BeginDataSegment(index: 0, memory_index: 0, flags: 1)
    OnDataSegmentData(index:0, size:0)
    EndDataSegment(0)
  EndDataSection
EndModule
   0| return
   4| unreachable
   8| return
  12| br @20
  20| return
  24| i32.const 1
  32| br_table %[-1], $#0, table:$52
  44| data $12
  52|   entry 0: offset: 64 drop: 0 keep: 0
  64| return
  68| return
  72| return
  76| call @0
  84| return
  88| i32.const 1
  96| call_indirect $0:0, %[-1]
 108| return
 112| return_call @0
 120| return
 124| i32.const 1
 132| return_call_indirect $0:0, %[-1]
 144| return
 148| i32.const 1
 156| drop
 160| return
 164| i32.const 1
 172| i32.const 2
 180| i32.const 3
 188| select %[-3], %[-2], %[-1]
 192| drop
 196| return
 200| i32.const 1
 208| i32.const 2
 216| i32.const 3
 224| select %[-3], %[-2], %[-1]
 228| drop
 232| return
 236| alloca $1
 244| local.get $1
 252| drop
 256| drop
 260| return
 264| alloca $1
 272| i32.const 1
 280| local.set $1, %[-1]
 288| drop
 292| return
 296| alloca $1
 304| i32.const 1
 312| local.tee $2, %[-1]
 320| drop
 324| drop
 328| return
 332| global.get $0
 340| drop
 344| return
 348| i32.const 1
 356| global.set $0, %[-1]
 364| return
 368| i32.const 1
 376| i32.load $0:%[-1]+$2
 388| drop
 392| return
 396| i32.const 1
 404| i64.load $0:%[-1]+$2
 416| drop
 420| return
 424| i32.const 1
 432| f32.load $0:%[-1]+$2
 444| drop
 448| return
 452| i32.const 1
 460| f64.load $0:%[-1]+$2
 472| drop
 476| return
 480| i32.const 1
 488| i32.load8_s $0:%[-1]+$2
 500| drop
 504| return
 508| i32.const 1
 516| i32.load8_u $0:%[-1]+$2
 528| drop
 532| return
 536| i32.const 1
 544| i32.load16_s $0:%[-1]+$2
 556| drop
 560| return
 564| i32.const 1
 572| i32.load16_u $0:%[-1]+$2
 584| drop
 588| return
 592| i32.const 1
 600| i64.load8_s $0:%[-1]+$2
 612| drop
 616| return
 620| i32.const 1
 628| i64.load8_u $0:%[-1]+$2
 640| drop
 644| return
 648| i32.const 1
 656| i64.load16_s $0:%[-1]+$2
 668| drop
 672| return
 676| i32.const 1
 684| i64.load16_u $0:%[-1]+$2
 696| drop
 700| return
 704| i32.const 1
 712| i64.load32_s $0:%[-1]+$2
 724| drop
 728| return
 732| i32.const 1
 740| i64.load32_u $0:%[-1]+$2
 752| drop
 756| return
 760| i32.const 1
 768| i32.const 2
 776| i32.store $0:%[-2]+$2, %[-1]
 788| return
 792| i32.const 1
 800| i64.const 2
 812| i64.store $0:%[-2]+$2, %[-1]
 824| return
 828| i32.const 1
 836| f32.const 2
 844| f32.store $0:%[-2]+$2, %[-1]
 856| return
 860| i32.const 1
 868| f64.const 2
 880| f64.store $0:%[-2]+$2, %[-1]
 892| return
 896| i32.const 1
 904| i32.const 2
 912| i32.store8 $0:%[-2]+$2, %[-1]
 924| return
 928| i32.const 1
 936| i32.const 2
 944| i32.store16 $0:%[-2]+$2, %[-1]
 956| return
 960| i32.const 1
 968| i64.const 2
 980| i64.store8 $0:%[-2]+$2, %[-1]
 992| return
 996| i32.const 1
1004| i64.const 2
1016| i64.store16 $0:%[-2]+$2, %[-1]
1028| return
1032| i32.const 1
1040| i64.const 2
1052| i64.store32 $0:%[-2]+$2, %[-1]
1064| return
1068| memory.size $0
1076| drop
1080| return
1084| i32.const 1
1092| memory.grow $0:%[-1]
1100| drop
1104| return
1108| i32.const 1
1116| drop
1120| return
1124| i64.const 1
1136| drop
1140| return
1144| f32.const 1
1152| drop
1156| return
1160| f64.const 1
1172| drop
1176| return
1180| i32.const 1
1188| i32.eqz %[-1]
1192| drop
1196| return
1200| i32.const 1
1208| i32.const 2
1216| i32.eq %[-2], %[-1]
1220| drop
1224| return
1228| i32.const 1
1236| i32.const 2
1244| i32.ne %[-2], %[-1]
1248| drop
1252| return
1256| i32.const 1
1264| i32.const 2
1272| i32.lt_s %[-2], %[-1]
1276| drop
1280| return
1284| i32.const 1
1292| i32.const 2
1300| i32.lt_u %[-2], %[-1]
1304| drop
1308| return
1312| i32.const 1
1320| i32.const 2
1328| i32.gt_s %[-2], %[-1]
1332| drop
1336| return
1340| i32.const 1
1348| i32.const 2
1356| i32.gt_u %[-2], %[-1]
1360| drop
1364| return
1368| i32.const 1
1376| i32.const 2
1384| i32.le_s %[-2], %[-1]
1388| drop
1392| return
1396| i32.const 1
1404| i32.const 2
1412| i32.le_u %[-2], %[-1]
1416| drop
1420| return
1424| i32.const 1
1432| i32.const 2
1440| i32.ge_s %[-2], %[-1]
1444| drop
1448| return
1452| i32.const 1
1460| i32.const 2
1468| i32.ge_u %[-2], %[-1]
1472| drop
1476| return
1480| i64.const 1
1492| i64.eqz %[-1]
1496| drop
1500| return
1504| i64.const 1
1516| i64.const 2
1528| i64.eq %[-2], %[-1]
1532| drop
1536| return
1540| i64.const 1
1552| i64.const 2
1564| i64.ne %[-2], %[-1]
1568| drop
1572| return
1576| i64.const 1
1588| i64.const 2
1600| i64.lt_s %[-2], %[-1]
1604| drop
1608| return
1612| i64.const 1
1624| i64.const 2
1636| i64.lt_u %[-2], %[-1]
1640| drop
1644| return
1648| i64.const 1
1660| i64.const 2
1672| i64.gt_s %[-2], %[-1]
1676| drop
1680| return
1684| i64.const 1
1696| i64.const 2
1708| i64.gt_u %[-2], %[-1]
1712| drop
1716| return
1720| i64.const 1
1732| i64.const 2
1744| i64.le_s %[-2], %[-1]
1748| drop
1752| return
1756| i64.const 1
1768| i64.const 2
1780| i64.le_u %[-2], %[-1]
1784| drop
1788| return
1792| i64.const 1
1804| i64.const 2
1816| i64.ge_s %[-2], %[-1]
1820| drop
1824| return
1828| i64.const 1
1840| i64.const 2
1852| i64.ge_u %[-2], %[-1]
1856| drop
1860| return
1864| f32.const 1
1872| f32.const 2
1880| f32.eq %[-2], %[-1]
1884| drop
1888| return
1892| f32.const 1
1900| f32.const 2
1908| f32.ne %[-2], %[-1]
1912| drop
1916| return
1920| f32.const 1
1928| f32.const 2
1936| f32.lt %[-2], %[-1]
1940| drop
1944| return
1948| f32.const 1
1956| f32.const 2
1964| f32.gt %[-2], %[-1]
1968| drop
1972| return
1976| f32.const 1
1984| f32.const 2
1992| f32.le %[-2], %[-1]
1996| drop
2000| return
2004| f32.const 1
2012| f32.const 2
2020| f32.ge %[-2], %[-1]
2024| drop
2028| return
2032| f64.const 1
2044| f64.const 2
2056| f64.eq %[-2], %[-1]
2060| drop
2064| return
2068| f64.const 1
2080| f64.const 2
2092| f64.ne %[-2], %[-1]
2096| drop
2100| return
2104| f64.const 1
2116| f64.const 2
2128| f64.lt %[-2], %[-1]
2132| drop
2136| return
2140| f64.const 1
2152| f64.const 2
2164| f64.gt %[-2], %[-1]
2168| drop
2172| return
2176| f64.const 1
2188| f64.const 2
2200| f64.le %[-2], %[-1]
2204| drop
2208| return
2212| f64.const 1
2224| f64.const 2
2236| f64.ge %[-2], %[-1]
2240| drop
2244| return
2248| i32.const 1
2256| i32.clz %[-1]
2260| drop
2264| return
2268| i32.const 1
2276| i32.ctz %[-1]
2280| drop
2284| return
2288| i32.const 1
2296| i32.popcnt %[-1]
2300| drop
2304| return
2308| i32.const 1
2316| i32.const 2
2324| i32.add %[-2], %[-1]
2328| drop
2332| return
2336| i32.const 1
2344| i32.const 2
2352| i32.sub %[-2], %[-1]
2356| drop
2360| return
2364| i32.const 1
2372| i32.const 2
2380| i32.mul %[-2], %[-1]
2384| drop
2388| return
2392| i32.const 1
2400| i32.const 2
2408| i32.div_s %[-2], %[-1]
2412| drop
2416| return
2420| i32.const 1
2428| i32.const 2
2436| i32.div_u %[-2], %[-1]
2440| drop
2444| return
2448| i32.const 1
2456| i32.const 2
2464| i32.rem_s %[-2], %[-1]
2468| drop
2472| return
2476| i32.const 1
2484| i32.const 2
2492| i32.rem_u %[-2], %[-1]
2496| drop
2500| return
2504| i32.const 1
2512| i32.const 2
2520| i32.and %[-2], %[-1]
2524| drop
2528| return
2532| i32.const 1
2540| i32.const 2
2548| i32.or %[-2], %[-1]
2552| drop
2556| return
2560| i32.const 1
2568| i32.const 2
2576| i32.xor %[-2], %[-1]
2580| drop
2584| return
2588| i32.const 1
2596| i32.const 2
2604| i32.shl %[-2], %[-1]
2608| drop
2612| return
2616| i32.const 1
2624| i32.const 2
2632| i32.shr_s %[-2], %[-1]
2636| drop
2640| return
2644| i32.const 1
2652| i32.const 2
2660| i32.shr_u %[-2], %[-1]
2664| drop
2668| return
2672| i32.const 1
2680| i32.const 2
2688| i32.rotl %[-2], %[-1]
2692| drop
2696| return
2700| i32.const 1
2708| i32.const 2
2716| i32.rotr %[-2], %[-1]
2720| drop
2724| return
2728| i64.const 1
2740| i64.clz %[-1]
2744| drop
2748| return
2752| i64.const 1
2764| i64.ctz %[-1]
2768| drop
2772| return
2776| i64.const 1
2788| i64.popcnt %[-1]
2792| drop
2796| return
2800| i64.const 1
2812| i64.const 2
2824| i64.add %[-2], %[-1]
2828| drop
2832| return
2836| i64.const 1
2848| i64.const 2
2860| i64.sub %[-2], %[-1]
2864| drop
2868| return
2872| i64.const 1
2884| i64.const 2
2896| i64.mul %[-2], %[-1]
2900| drop
2904| return
2908| i64.const 1
2920| i64.const 2
2932| i64.div_s %[-2], %[-1]
2936| drop
2940| return
2944| i64.const 1
2956| i64.const 2
2968| i64.div_u %[-2], %[-1]
2972| drop
2976| return
2980| i64.const 1
2992| i64.const 2
3004| i64.rem_s %[-2], %[-1]
3008| drop
3012| return
3016| i64.const 1
3028| i64.const 2
3040| i64.rem_u %[-2], %[-1]
3044| drop
3048| return
3052| i64.const 1
3064| i64.const 2
3076| i64.and %[-2], %[-1]
3080| drop
3084| return
3088| i64.const 1
3100| i64.const 2
3112| i64.or %[-2], %[-1]
3116| drop
3120| return
3124| i64.const 1
3136| i64.const 2
3148| i64.xor %[-2], %[-1]
3152| drop
3156| return
3160| i64.const 1
3172| i64.const 2
3184| i64.shl %[-2], %[-1]
3188| drop
3192| return
3196| i64.const 1
3208| i64.const 2
3220| i64.shr_s %[-2], %[-1]
3224| drop
3228| return
3232| i64.const 1
3244| i64.const 2
3256| i64.shr_u %[-2], %[-1]
3260| drop
3264| return
3268| i64.const 1
3280| i64.const 2
3292| i64.rotl %[-2], %[-1]
3296| drop
3300| return
3304| i64.const 1
3316| i64.const 2
3328| i64.rotr %[-2], %[-1]
3332| drop
3336| return
3340| f32.const 1
3348| f32.abs %[-1]
3352| drop
3356| return
3360| f32.const 1
3368| f32.neg %[-1]
3372| drop
3376| return
3380| f32.const 1
3388| f32.ceil %[-1]
3392| drop
3396| return
3400| f32.const 1
3408| f32.floor %[-1]
3412| drop
3416| return
3420| f32.const 1
3428| f32.trunc %[-1]
3432| drop
3436| return
3440| f32.const 1
3448| f32.nearest %[-1]
3452| drop
3456| return
3460| f32.const 1
3468| f32.sqrt %[-1]
3472| drop
3476| return
3480| f32.const 1
3488| f32.const 2
3496| f32.add %[-2], %[-1]
3500| drop
3504| return
3508| f32.const 1
3516| f32.const 2
3524| f32.sub %[-2], %[-1]
3528| drop
3532| return
3536| f32.const 1
3544| f32.const 2
3552| f32.mul %[-2], %[-1]
3556| drop
3560| return
3564| f32.const 1
3572| f32.const 2
3580| f32.div %[-2], %[-1]
3584| drop
3588| return
3592| f32.const 1
3600| f32.const 2
3608| f32.min %[-2], %[-1]
3612| drop
3616| return
3620| f32.const 1
3628| f32.const 2
3636| f32.max %[-2], %[-1]
3640| drop
3644| return
3648| f32.const 1
3656| f32.const 2
3664| f32.copysign %[-2], %[-1]
3668| drop
3672| return
3676| f64.const 1
3688| f64.abs %[-1]
3692| drop
3696| return
3700| f64.const 1
3712| f64.neg %[-1]
3716| drop
3720| return
3724| f64.const 1
3736| f64.ceil %[-1]
3740| drop
3744| return
3748| f64.const 1
3760| f64.floor %[-1]
3764| drop
3768| return
3772| f64.const 1
3784| f64.trunc %[-1]
3788| drop
3792| return
3796| f64.const 1
3808| f64.nearest %[-1]
3812| drop
3816| return
3820| f64.const 1
3832| f64.sqrt %[-1]
3836| drop
3840| return
3844| f64.const 1
3856| f64.const 2
3868| f64.add %[-2], %[-1]
3872| drop
3876| return
3880| f64.const 1
3892| f64.const 2
3904| f64.sub %[-2], %[-1]
3908| drop
3912| return
3916| f64.const 1
3928| f64.const 2
3940| f64.mul %[-2], %[-1]
3944| drop
3948| return
3952| f64.const 1
3964| f64.const 2
3976| f64.div %[-2], %[-1]
3980| drop
3984| return
3988| f64.const 1
4000| f64.const 2
4012| f64.min %[-2], %[-1]
4016| drop
4020| return
4024| f64.const 1
4036| f64.const 2
4048| f64.max %[-2], %[-1]
4052| drop
4056| return
4060| f64.const 1
4072| f64.const 2
4084| f64.copysign %[-2], %[-1]
4088| drop
4092| return
4096| i64.const 1
4108| i32.wrap_i64 %[-1]
4112| drop
4116| return
4120| f32.const 1
4128| i32.trunc_f32_s %[-1]
4132| drop
4136| return
4140| f32.const 1
4148| i32.trunc_f32_u %[-1]
4152| drop
4156| return
4160| f64.const 1
4172| i32.trunc_f64_s %[-1]
4176| drop
4180| return
4184| f64.const 1
4196| i32.trunc_f64_u %[-1]
4200| drop
4204| return
4208| i32.const 1
4216| i64.extend_i32_s %[-1]
4220| drop
4224| return
4228| i32.const 1
4236| i64.extend_i32_u %[-1]
4240| drop
4244| return
4248| f32.const 1
4256| i64.trunc_f32_s %[-1]
4260| drop
4264| return
4268| f32.const 1
4276| i64.trunc_f32_u %[-1]
4280| drop
4284| return
4288| f64.const 1
4300| i64.trunc_f64_s %[-1]
4304| drop
4308| return
4312| f64.const 1
4324| i64.trunc_f64_u %[-1]
4328| drop
4332| return
4336| i32.const 1
4344| f32.convert_i32_s %[-1]
4348| drop
4352| return
4356| i32.const 1
4364| f32.convert_i32_u %[-1]
4368| drop
4372| return
4376| i64.const 1
4388| f32.convert_i64_s %[-1]
4392| drop
4396| return
4400| i64.const 1
4412| f32.convert_i64_u %[-1]
4416| drop
4420| return
4424| f64.const 1
4436| f32.demote_f64 %[-1]
4440| drop
4444| return
4448| i32.const 1
4456| f64.convert_i32_s %[-1]
4460| drop
4464| return
4468| i32.const 1
4476| f64.convert_i32_u %[-1]
4480| drop
4484| return
4488| i64.const 1
4500| f64.convert_i64_s %[-1]
4504| drop
4508| return
4512| i64.const 1
4524| f64.convert_i64_u %[-1]
4528| drop
4532| return
4536| f32.const 1
4544| f64.promote_f32 %[-1]
4548| drop
4552| return
4556| i32.const 1
4564| f32.reinterpret_i32 %[-1]
4568| drop
4572| return
4576| f32.const 1
4584| i32.reinterpret_f32 %[-1]
4588| drop
4592| return
4596| i64.const 1
4608| f64.reinterpret_i64 %[-1]
4612| drop
4616| return
4620| f64.const 1
4632| i64.reinterpret_f64 %[-1]
4636| drop
4640| return
4644| i32.const 1
4652| i32.extend8_s %[-1]
4656| drop
4660| return
4664| i32.const 1
4672| i32.extend16_s %[-1]
4676| drop
4680| return
4684| i64.const 1
4696| i64.extend8_s %[-1]
4700| drop
4704| return
4708| i64.const 1
4720| i64.extend16_s %[-1]
4724| drop
4728| return
4732| i64.const 1
4744| i64.extend32_s %[-1]
4748| drop
4752| return
4756| alloca $1
4764| drop
4768| return
4772| i32.const 1
4780| br_unless @4796, %[-1]
4788| br @4796
4796| return
4800| i32.const 1
4808| call_host $0
4816| return
4820| i32.const 1
4828| br_table %[-1], $#0, table:$4848
4840| data $12
4848|   entry 0: offset: 4860 drop: 0 keep: 0
4860| return
4864| i32.const 1
4872| i32.const 2
4880| drop_keep $1 $1
4892| br @4900
4900| drop
4904| return
4908| f32.const 1
4916| i32.trunc_sat_f32_s %[-1]
4920| drop
4924| return
4928| f32.const 1
4936| i32.trunc_sat_f32_u %[-1]
4940| drop
4944| return
4948| f64.const 1
4960| i32.trunc_sat_f64_s %[-1]
4964| drop
4968| return
4972| f64.const 1
4984| i32.trunc_sat_f64_u %[-1]
4988| drop
4992| return
4996| f32.const 1
5004| i64.trunc_sat_f32_s %[-1]
5008| drop
5012| return
5016| f32.const 1
5024| i64.trunc_sat_f32_u %[-1]
5028| drop
5032| return
5036| f64.const 1
5048| i64.trunc_sat_f64_s %[-1]
5052| drop
5056| return
5060| f64.const 1
5072| i64.trunc_sat_f64_u %[-1]
5076| drop
5080| return
5084| i32.const 1
5092| i32.const 2
5100| i32.const 3
5108| memory.init $0, $0, %[-3], %[-2], %[-1]
5120| return
5124| data.drop $0
5132| return
5136| i32.const 1
5144| i32.const 2
5152| i32.const 3
5160| memory.copy $0, %[-3], %[-2], %[-1]
5168| return
5172| i32.const 1
5180| i32.const 2
5188| i32.const 3
5196| memory.fill $0, %[-3], %[-2], %[-1]
5204| return
5208| i32.const 1
5216| i32.const 2
5224| i32.const 3
5232| table.init $0, $0, %[-3], %[-2], %[-1]
5244| return
5248| elem.drop $0
5256| return
5260| i32.const 1
5268| i32.const 2
5276| i32.const 3
5284| table.copy $0, $0, %[-3], %[-2], %[-1]
5296| return
5300| i32.const 1
5308| v128.load $0:%[-1]+$3
5320| drop
5324| return
5328| i32.const 1
5336| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5356| v128.store $0:%[-2]+$3, %[-1]
5368| return
5372| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5392| drop
5396| return
5400| i32.const 1
5408| i8x16.splat %[-1]
5412| drop
5416| return
5420| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5440| i8x16.extract_lane_s %[-1] : (Lane imm: 15)
5445| drop
5449| return
5453| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5473| i8x16.extract_lane_u %[-1] : (Lane imm: 15)
5478| drop
5482| return
5486| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5506| i32.const 0
5514| i8x16.replace_lane %[-1], %[-2] : (Lane imm: 15)
5519| drop
5523| return
5527| i32.const 1
5535| i16x8.splat %[-1]
5539| drop
5543| return
5547| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5567| i16x8.extract_lane_s %[-1] : (Lane imm: 7)
5572| drop
5576| return
5580| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5600| i16x8.extract_lane_u %[-1] : (Lane imm: 7)
5605| drop
5609| return
5613| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5633| i32.const 0
5641| i16x8.replace_lane %[-1], %[-2] : (Lane imm: 7)
5646| drop
5650| return
5654| i32.const 1
5662| i32x4.splat %[-1]
5666| drop
5670| return
5674| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5694| i32x4.extract_lane %[-1] : (Lane imm: 3)
5699| drop
5703| return
5707| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5727| i32.const 0
5735| i32x4.replace_lane %[-1], %[-2] : (Lane imm: 3)
5740| drop
5744| return
5748| i64.const 1
5760| i64x2.splat %[-1]
5764| drop
5768| return
5772| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5792| i64x2.extract_lane %[-1] : (Lane imm: 1)
5797| drop
5801| return
5805| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5825| i64.const 0
5837| i64x2.replace_lane %[-1], %[-2] : (Lane imm: 1)
5842| drop
5846| return
5850| f32.const 1
5858| f32x4.splat %[-1]
5862| drop
5866| return
5870| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5890| f32x4.extract_lane %[-1] : (Lane imm: 3)
5895| drop
5899| return
5903| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5923| f32.const 0
5931| f32x4.replace_lane %[-1], %[-2] : (Lane imm: 3)
5936| drop
5940| return
5944| f64.const 1
5956| f64x2.splat %[-1]
5960| drop
5964| return
5968| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5988| f64x2.extract_lane %[-1] : (Lane imm: 1)
5993| drop
5997| return
6001| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6021| f64.const 0
6033| f64x2.replace_lane %[-1], %[-2] : (Lane imm: 1)
6038| drop
6042| return
6046| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6066| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6086| i8x16.eq %[-2], %[-1]
6090| drop
6094| return
6098| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6118| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6138| i8x16.ne %[-2], %[-1]
6142| drop
6146| return
6150| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6170| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6190| i8x16.lt_s %[-2], %[-1]
6194| drop
6198| return
6202| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6222| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6242| i8x16.lt_u %[-2], %[-1]
6246| drop
6250| return
6254| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6274| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6294| i8x16.gt_s %[-2], %[-1]
6298| drop
6302| return
6306| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6326| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6346| i8x16.gt_u %[-2], %[-1]
6350| drop
6354| return
6358| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6378| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6398| i8x16.le_s %[-2], %[-1]
6402| drop
6406| return
6410| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6430| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6450| i8x16.le_u %[-2], %[-1]
6454| drop
6458| return
6462| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6482| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6502| i8x16.ge_s %[-2], %[-1]
6506| drop
6510| return
6514| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6534| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6554| i8x16.ge_u %[-2], %[-1]
6558| drop
6562| return
6566| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6586| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6606| i16x8.eq %[-2], %[-1]
6610| drop
6614| return
6618| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6638| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6658| i16x8.ne %[-2], %[-1]
6662| drop
6666| return
6670| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6690| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6710| i16x8.lt_s %[-2], %[-1]
6714| drop
6718| return
6722| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6742| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6762| i16x8.lt_u %[-2], %[-1]
6766| drop
6770| return
6774| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6794| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6814| i16x8.gt_s %[-2], %[-1]
6818| drop
6822| return
6826| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6846| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6866| i16x8.gt_u %[-2], %[-1]
6870| drop
6874| return
6878| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6898| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6918| i16x8.le_s %[-2], %[-1]
6922| drop
6926| return
6930| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6950| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6970| i16x8.le_u %[-2], %[-1]
6974| drop
6978| return
6982| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7002| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7022| i16x8.ge_s %[-2], %[-1]
7026| drop
7030| return
7034| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7054| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7074| i16x8.ge_u %[-2], %[-1]
7078| drop
7082| return
7086| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7106| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7126| i32x4.eq %[-2], %[-1]
7130| drop
7134| return
7138| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7158| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7178| i32x4.ne %[-2], %[-1]
7182| drop
7186| return
7190| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7210| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7230| i32x4.lt_s %[-2], %[-1]
7234| drop
7238| return
7242| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7262| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7282| i32x4.lt_u %[-2], %[-1]
7286| drop
7290| return
7294| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7314| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7334| i32x4.gt_s %[-2], %[-1]
7338| drop
7342| return
7346| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7366| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7386| i32x4.gt_u %[-2], %[-1]
7390| drop
7394| return
7398| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7418| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7438| i32x4.le_s %[-2], %[-1]
7442| drop
7446| return
7450| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7470| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7490| i32x4.le_u %[-2], %[-1]
7494| drop
7498| return
7502| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7522| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7542| i32x4.ge_s %[-2], %[-1]
7546| drop
7550| return
7554| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7574| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7594| i32x4.ge_u %[-2], %[-1]
7598| drop
7602| return
7606| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7626| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7646| f32x4.eq %[-2], %[-1]
7650| drop
7654| return
7658| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7678| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7698| f32x4.ne %[-2], %[-1]
7702| drop
7706| return
7710| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7730| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7750| f32x4.lt %[-2], %[-1]
7754| drop
7758| return
7762| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7782| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7802| f32x4.gt %[-2], %[-1]
7806| drop
7810| return
7814| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7834| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7854| f32x4.le %[-2], %[-1]
7858| drop
7862| return
7866| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7886| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7906| f32x4.ge %[-2], %[-1]
7910| drop
7914| return
7918| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7938| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7958| f64x2.eq %[-2], %[-1]
7962| drop
7966| return
7970| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7990| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8010| f64x2.ne %[-2], %[-1]
8014| drop
8018| return
8022| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8042| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8062| f64x2.lt %[-2], %[-1]
8066| drop
8070| return
8074| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8094| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8114| f64x2.gt %[-2], %[-1]
8118| drop
8122| return
8126| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8146| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8166| f64x2.le %[-2], %[-1]
8170| drop
8174| return
8178| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8198| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8218| f64x2.ge %[-2], %[-1]
8222| drop
8226| return
8230| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8250| v128.not %[-1]
8254| drop
8258| return
8262| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8282| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8302| v128.and %[-2], %[-1]
8306| drop
8310| return
8314| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8334| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8354| v128.or %[-2], %[-1]
8358| drop
8362| return
8366| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8386| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8406| v128.xor %[-2], %[-1]
8410| drop
8414| return
8418| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8438| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8458| v128.const i32x4 0x00000003 0x00000003 0x00000003 0x00000003
8478| v128.bitselect %[-3], %[-2], %[-1]
8482| drop
8486| return
8490| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8510| i8x16.neg %[-1]
8514| drop
8518| return
8522| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8542| i8x16.any_true %[-1]
8546| drop
8550| return
8554| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8574| i8x16.all_true %[-1]
8578| drop
8582| return
8586| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8606| i32.const 0
8614| i8x16.shl %[-2], %[-1]
8618| drop
8622| return
8626| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8646| i32.const 0
8654| i8x16.shr_s %[-2], %[-1]
8658| drop
8662| return
8666| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8686| i32.const 0
8694| i8x16.shr_u %[-2], %[-1]
8698| drop
8702| return
8706| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8726| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8746| i8x16.add %[-2], %[-1]
8750| drop
8754| return
8758| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8778| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8798| i8x16.add_saturate_s %[-2], %[-1]
8802| drop
8806| return
8810| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8830| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8850| i8x16.add_saturate_u %[-2], %[-1]
8854| drop
8858| return
8862| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8882| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8902| i8x16.sub %[-2], %[-1]
8906| drop
8910| return
8914| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8934| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8954| i8x16.sub_saturate_s %[-2], %[-1]
8958| drop
8962| return
8966| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8986| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9006| i8x16.sub_saturate_u %[-2], %[-1]
9010| drop
9014| return
9018| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9038| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9058| i8x16.mul %[-2], %[-1]
9062| drop
9066| return
9070| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9090| i16x8.neg %[-1]
9094| drop
9098| return
9102| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9122| i16x8.any_true %[-1]
9126| drop
9130| return
9134| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9154| i16x8.all_true %[-1]
9158| drop
9162| return
9166| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9186| i32.const 0
9194| i16x8.shl %[-2], %[-1]
9198| drop
9202| return
9206| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9226| i32.const 0
9234| i16x8.shr_s %[-2], %[-1]
9238| drop
9242| return
9246| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9266| i32.const 0
9274| i16x8.shr_u %[-2], %[-1]
9278| drop
9282| return
9286| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9306| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9326| i16x8.add %[-2], %[-1]
9330| drop
9334| return
9338| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9358| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9378| i16x8.add_saturate_s %[-2], %[-1]
9382| drop
9386| return
9390| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9410| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9430| i16x8.add_saturate_u %[-2], %[-1]
9434| drop
9438| return
9442| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9462| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9482| i16x8.sub %[-2], %[-1]
9486| drop
9490| return
9494| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9514| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9534| i16x8.sub_saturate_s %[-2], %[-1]
9538| drop
9542| return
9546| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9566| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9586| i16x8.sub_saturate_u %[-2], %[-1]
9590| drop
9594| return
9598| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9618| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9638| i16x8.mul %[-2], %[-1]
9642| drop
9646| return
9650| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9670| i32x4.neg %[-1]
9674| drop
9678| return
9682| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9702| i32x4.any_true %[-1]
9706| drop
9710| return
9714| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9734| i32x4.all_true %[-1]
9738| drop
9742| return
9746| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9766| i32.const 0
9774| i32x4.shl %[-2], %[-1]
9778| drop
9782| return
9786| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9806| i32.const 0
9814| i32x4.shr_s %[-2], %[-1]
9818| drop
9822| return
9826| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9846| i32.const 0
9854| i32x4.shr_u %[-2], %[-1]
9858| drop
9862| return
9866| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9886| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9906| i32x4.add %[-2], %[-1]
9910| drop
9914| return
9918| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9938| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9958| i32x4.sub %[-2], %[-1]
9962| drop
9966| return
9970| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9990| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10010| i32x4.mul %[-2], %[-1]
10014| drop
10018| return
10022| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10042| i64x2.neg %[-1]
10046| drop
10050| return
10054| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10074| i64x2.any_true %[-1]
10078| drop
10082| return
10086| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10106| i64x2.all_true %[-1]
10110| drop
10114| return
10118| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10138| i32.const 0
10146| i64x2.shl %[-2], %[-1]
10150| drop
10154| return
10158| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10178| i32.const 0
10186| i64x2.shr_s %[-2], %[-1]
10190| drop
10194| return
10198| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10218| i32.const 0
10226| i64x2.shr_u %[-2], %[-1]
10230| drop
10234| return
10238| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10258| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10278| i64x2.add %[-2], %[-1]
10282| drop
10286| return
10290| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10310| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10330| i64x2.sub %[-2], %[-1]
10334| drop
10338| return
10342| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10362| f32x4.abs %[-1]
10366| drop
10370| return
10374| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10394| f32x4.neg %[-1]
10398| drop
10402| return
10406| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10426| f32x4.sqrt %[-1]
10430| drop
10434| return
10438| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10458| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10478| f32x4.add %[-2], %[-1]
10482| drop
10486| return
10490| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10510| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10530| f32x4.sub %[-2], %[-1]
10534| drop
10538| return
10542| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10562| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10582| f32x4.mul %[-2], %[-1]
10586| drop
10590| return
10594| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10614| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10634| f32x4.div %[-2], %[-1]
10638| drop
10642| return
10646| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10666| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10686| f32x4.min %[-2], %[-1]
10690| drop
10694| return
10698| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10718| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10738| f32x4.max %[-2], %[-1]
10742| drop
10746| return
10750| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10770| f64x2.abs %[-1]
10774| drop
10778| return
10782| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10802| f64x2.neg %[-1]
10806| drop
10810| return
10814| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10834| f64x2.sqrt %[-1]
10838| drop
10842| return
10846| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10866| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10886| f64x2.add %[-2], %[-1]
10890| drop
10894| return
10898| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10918| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10938| f64x2.sub %[-2], %[-1]
10942| drop
10946| return
10950| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10970| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10990| f64x2.mul %[-2], %[-1]
10994| drop
10998| return
11002| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11022| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11042| f64x2.div %[-2], %[-1]
11046| drop
11050| return
11054| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11074| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11094| f64x2.min %[-2], %[-1]
11098| drop
11102| return
11106| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11126| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11146| f64x2.max %[-2], %[-1]
11150| drop
11154| return
11158| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11178| i32x4.trunc_sat_f32x4_s %[-1]
11182| drop
11186| return
11190| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11210| i32x4.trunc_sat_f32x4_u %[-1]
11214| drop
11218| return
11222| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11242| i64x2.trunc_sat_f64x2_s %[-1]
11246| drop
11250| return
11254| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11274| i64x2.trunc_sat_f64x2_u %[-1]
11278| drop
11282| return
11286| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11306| f32x4.convert_i32x4_s %[-1]
11310| drop
11314| return
11318| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11338| f32x4.convert_i32x4_u %[-1]
11342| drop
11346| return
11350| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11370| f64x2.convert_i64x2_s %[-1]
11374| drop
11378| return
11382| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11402| f64x2.convert_i64x2_u %[-1]
11406| drop
11410| return
11414| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11434| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11454| v8x16.swizzle %[-2], %[-1]
11458| drop
11462| return
11466| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11486| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11506| v8x16.shuffle %[-2], %[-1] : (Lane imm: $0x01010101 0x01010101 0x01010101 0x01010101 )
11526| drop
11530| return
11534| i32.const 1
11542| i8x16.load_splat $0:%[-1]+$0
11554| drop
11558| return
11562| i32.const 1
11570| i16x8.load_splat $0:%[-1]+$0
11582| drop
11586| return
11590| i32.const 1
11598| i32x4.load_splat $0:%[-1]+$0
11610| drop
11614| return
11618| i32.const 1
11626| i64x2.load_splat $0:%[-1]+$0
11638| drop
11642| return
11646| i32.const 1
11654| i32.const 2
11662| atomic.notify $0:%[-2]+$3, %[-1]
11674| drop
11678| return
11682| i32.const 1
11690| i32.const 2
11698| i64.const 3
11710| i32.atomic.wait $0:%[-3]+$3, %[-2], %[-1]
11722| drop
11726| return
11730| i32.const 1
11738| i64.const 2
11750| i64.const 3
11762| i64.atomic.wait $0:%[-3]+$3, %[-2], %[-1]
11774| drop
11778| return
11782| i32.const 1
11790| i32.atomic.load $0:%[-1]+$3
11802| drop
11806| return
11810| i32.const 1
11818| i64.atomic.load $0:%[-1]+$7
11830| drop
11834| return
11838| i32.const 1
11846| i32.atomic.load8_u $0:%[-1]+$3
11858| drop
11862| return
11866| i32.const 1
11874| i32.atomic.load16_u $0:%[-1]+$3
11886| drop
11890| return
11894| i32.const 1
11902| i64.atomic.load8_u $0:%[-1]+$3
11914| drop
11918| return
11922| i32.const 1
11930| i64.atomic.load16_u $0:%[-1]+$3
11942| drop
11946| return
11950| i32.const 1
11958| i64.atomic.load32_u $0:%[-1]+$3
11970| drop
11974| return
11978| i32.const 1
11986| i32.const 2
11994| i32.atomic.store $0:%[-2]+$3, %[-1]
12006| return
12010| i32.const 1
12018| i64.const 2
12030| i64.atomic.store $0:%[-2]+$7, %[-1]
12042| return
12046| i32.const 1
12054| i32.const 2
12062| i32.atomic.store8 $0:%[-2]+$3, %[-1]
12074| return
12078| i32.const 1
12086| i32.const 2
12094| i32.atomic.store16 $0:%[-2]+$3, %[-1]
12106| return
12110| i32.const 1
12118| i64.const 2
12130| i64.atomic.store8 $0:%[-2]+$3, %[-1]
12142| return
12146| i32.const 1
12154| i64.const 2
12166| i64.atomic.store16 $0:%[-2]+$3, %[-1]
12178| return
12182| i32.const 1
12190| i64.const 2
12202| i64.atomic.store32 $0:%[-2]+$3, %[-1]
12214| return
12218| i32.const 1
12226| i32.const 2
12234| i32.atomic.rmw.add $0:%[-2]+$3, %[-1]
12246| drop
12250| return
12254| i32.const 1
12262| i64.const 2
12274| i64.atomic.rmw.add $0:%[-2]+$7, %[-1]
12286| drop
12290| return
12294| i32.const 1
12302| i32.const 2
12310| i32.atomic.rmw8.add_u $0:%[-2]+$3, %[-1]
12322| drop
12326| return
12330| i32.const 1
12338| i32.const 2
12346| i32.atomic.rmw16.add_u $0:%[-2]+$3, %[-1]
12358| drop
12362| return
12366| i32.const 1
12374| i64.const 2
12386| i64.atomic.rmw8.add_u $0:%[-2]+$3, %[-1]
12398| drop
12402| return
12406| i32.const 1
12414| i64.const 2
12426| i64.atomic.rmw16.add_u $0:%[-2]+$3, %[-1]
12438| drop
12442| return
12446| i32.const 1
12454| i64.const 2
12466| i64.atomic.rmw32.add_u $0:%[-2]+$3, %[-1]
12478| drop
12482| return
12486| i32.const 1
12494| i32.const 2
12502| i32.atomic.rmw.sub $0:%[-2]+$3, %[-1]
12514| drop
12518| return
12522| i32.const 1
12530| i64.const 2
12542| i64.atomic.rmw.sub $0:%[-2]+$7, %[-1]
12554| drop
12558| return
12562| i32.const 1
12570| i32.const 2
12578| i32.atomic.rmw8.sub_u $0:%[-2]+$3, %[-1]
12590| drop
12594| return
12598| i32.const 1
12606| i32.const 2
12614| i32.atomic.rmw16.sub_u $0:%[-2]+$3, %[-1]
12626| drop
12630| return
12634| i32.const 1
12642| i64.const 2
12654| i64.atomic.rmw8.sub_u $0:%[-2]+$3, %[-1]
12666| drop
12670| return
12674| i32.const 1
12682| i64.const 2
12694| i64.atomic.rmw16.sub_u $0:%[-2]+$3, %[-1]
12706| drop
12710| return
12714| i32.const 1
12722| i64.const 2
12734| i64.atomic.rmw32.sub_u $0:%[-2]+$3, %[-1]
12746| drop
12750| return
12754| i32.const 1
12762| i32.const 2
12770| i32.atomic.rmw.and $0:%[-2]+$3, %[-1]
12782| drop
12786| return
12790| i32.const 1
12798| i64.const 2
12810| i64.atomic.rmw.and $0:%[-2]+$7, %[-1]
12822| drop
12826| return
12830| i32.const 1
12838| i32.const 2
12846| i32.atomic.rmw8.and_u $0:%[-2]+$3, %[-1]
12858| drop
12862| return
12866| i32.const 1
12874| i32.const 2
12882| i32.atomic.rmw16.and_u $0:%[-2]+$3, %[-1]
12894| drop
12898| return
12902| i32.const 1
12910| i64.const 2
12922| i64.atomic.rmw8.and_u $0:%[-2]+$3, %[-1]
12934| drop
12938| return
12942| i32.const 1
12950| i64.const 2
12962| i64.atomic.rmw16.and_u $0:%[-2]+$3, %[-1]
12974| drop
12978| return
12982| i32.const 1
12990| i64.const 2
13002| i64.atomic.rmw32.and_u $0:%[-2]+$3, %[-1]
13014| drop
13018| return
13022| i32.const 1
13030| i32.const 2
13038| i32.atomic.rmw.or $0:%[-2]+$3, %[-1]
13050| drop
13054| return
13058| i32.const 1
13066| i64.const 2
13078| i64.atomic.rmw.or $0:%[-2]+$7, %[-1]
13090| drop
13094| return
13098| i32.const 1
13106| i32.const 2
13114| i32.atomic.rmw8.or_u $0:%[-2]+$3, %[-1]
13126| drop
13130| return
13134| i32.const 1
13142| i32.const 2
13150| i32.atomic.rmw16.or_u $0:%[-2]+$3, %[-1]
13162| drop
13166| return
13170| i32.const 1
13178| i64.const 2
13190| i64.atomic.rmw8.or_u $0:%[-2]+$3, %[-1]
13202| drop
13206| return
13210| i32.const 1
13218| i64.const 2
13230| i64.atomic.rmw16.or_u $0:%[-2]+$3, %[-1]
13242| drop
13246| return
13250| i32.const 1
13258| i64.const 2
13270| i64.atomic.rmw32.or_u $0:%[-2]+$3, %[-1]
13282| drop
13286| return
13290| i32.const 1
13298| i32.const 2
13306| i32.atomic.rmw.xor $0:%[-2]+$3, %[-1]
13318| drop
13322| return
13326| i32.const 1
13334| i64.const 2
13346| i64.atomic.rmw.xor $0:%[-2]+$7, %[-1]
13358| drop
13362| return
13366| i32.const 1
13374| i32.const 2
13382| i32.atomic.rmw8.xor_u $0:%[-2]+$3, %[-1]
13394| drop
13398| return
13402| i32.const 1
13410| i32.const 2
13418| i32.atomic.rmw16.xor_u $0:%[-2]+$3, %[-1]
13430| drop
13434| return
13438| i32.const 1
13446| i64.const 2
13458| i64.atomic.rmw8.xor_u $0:%[-2]+$3, %[-1]
13470| drop
13474| return
13478| i32.const 1
13486| i64.const 2
13498| i64.atomic.rmw16.xor_u $0:%[-2]+$3, %[-1]
13510| drop
13514| return
13518| i32.const 1
13526| i64.const 2
13538| i64.atomic.rmw32.xor_u $0:%[-2]+$3, %[-1]
13550| drop
13554| return
13558| i32.const 1
13566| i32.const 2
13574| i32.atomic.rmw.xchg $0:%[-2]+$3, %[-1]
13586| drop
13590| return
13594| i32.const 1
13602| i64.const 2
13614| i64.atomic.rmw.xchg $0:%[-2]+$7, %[-1]
13626| drop
13630| return
13634| i32.const 1
13642| i32.const 2
13650| i32.atomic.rmw8.xchg_u $0:%[-2]+$3, %[-1]
13662| drop
13666| return
13670| i32.const 1
13678| i32.const 2
13686| i32.atomic.rmw16.xchg_u $0:%[-2]+$3, %[-1]
13698| drop
13702| return
13706| i32.const 1
13714| i64.const 2
13726| i64.atomic.rmw8.xchg_u $0:%[-2]+$3, %[-1]
13738| drop
13742| return
13746| i32.const 1
13754| i64.const 2
13766| i64.atomic.rmw16.xchg_u $0:%[-2]+$3, %[-1]
13778| drop
13782| return
13786| i32.const 1
13794| i64.const 2
13806| i64.atomic.rmw32.xchg_u $0:%[-2]+$3, %[-1]
13818| drop
13822| return
13826| i32.const 1
13834| i32.const 2
13842| i32.const 3
13850| i32.atomic.rmw.cmpxchg $0:%[-3]+$3, %[-2], %[-1]
13862| drop
13866| return
13870| i32.const 1
13878| i64.const 2
13890| i64.const 3
13902| i64.atomic.rmw.cmpxchg $0:%[-3]+$7, %[-2], %[-1]
13914| drop
13918| return
13922| i32.const 1
13930| i32.const 2
13938| i32.const 3
13946| i32.atomic.rmw8.cmpxchg_u $0:%[-3]+$3, %[-2], %[-1]
13958| drop
13962| return
13966| i32.const 1
13974| i32.const 2
13982| i32.const 3
13990| i32.atomic.rmw16.cmpxchg_u $0:%[-3]+$3, %[-2], %[-1]
14002| drop
14006| return
14010| i32.const 1
14018| i64.const 2
14030| i64.const 3
14042| i64.atomic.rmw8.cmpxchg_u $0:%[-3]+$3, %[-2], %[-1]
14054| drop
14058| return
14062| i32.const 1
14070| i64.const 2
14082| i64.const 3
14094| i64.atomic.rmw16.cmpxchg_u $0:%[-3]+$3, %[-2], %[-1]
14106| drop
14110| return
14114| i32.const 1
14122| i64.const 2
14134| i64.const 3
14146| i64.atomic.rmw32.cmpxchg_u $0:%[-3]+$3, %[-2], %[-1]
14158| drop
14162| return
unreachable() => error: unreachable executed
br() =>
br_table() =>
return() =>
call() =>
call_indirect() =>
return_call() =>
return_call_indirect() =>
drop() =>
select() =>
select_t() =>
get_local() =>
set_local() =>
tee_local() =>
get_global() =>
set_global() =>
i32.load() =>
i64.load() =>
f32.load() =>
f64.load() =>
i32.load8_s() =>
i32.load8_u() =>
i32.load16_s() =>
i32.load16_u() =>
i64.load8_s() =>
i64.load8_u() =>
i64.load16_s() =>
i64.load16_u() =>
i64.load32_s() =>
i64.load32_u() =>
i32.store() =>
i64.store() =>
f32.store() =>
f64.store() =>
i32.store8() =>
i32.store16() =>
i64.store8() =>
i64.store16() =>
i64.store32() =>
current_memory() =>
grow_memory() =>
i32.const() =>
i64.const() =>
f32.const() =>
f64.const() =>
i32.eqz() =>
i32.eq() =>
i32.ne() =>
i32.lt_s() =>
i32.lt_u() =>
i32.gt_s() =>
i32.gt_u() =>
i32.le_s() =>
i32.le_u() =>
i32.ge_s() =>
i32.ge_u() =>
i64.eqz() =>
i64.eq() =>
i64.ne() =>
i64.lt_s() =>
i64.lt_u() =>
i64.gt_s() =>
i64.gt_u() =>
i64.le_s() =>
i64.le_u() =>
i64.ge_s() =>
i64.ge_u() =>
f32.eq() =>
f32.ne() =>
f32.lt() =>
f32.gt() =>
f32.le() =>
f32.ge() =>
f64.eq() =>
f64.ne() =>
f64.lt() =>
f64.gt() =>
f64.le() =>
f64.ge() =>
i32.clz() =>
i32.ctz() =>
i32.popcnt() =>
i32.add() =>
i32.sub() =>
i32.mul() =>
i32.div_s() =>
i32.div_u() =>
i32.rem_s() =>
i32.rem_u() =>
i32.and() =>
i32.or() =>
i32.xor() =>
i32.shl() =>
i32.shr_s() =>
i32.shr_u() =>
i32.rotl() =>
i32.rotr() =>
i64.clz() =>
i64.ctz() =>
i64.popcnt() =>
i64.add() =>
i64.sub() =>
i64.mul() =>
i64.div_s() =>
i64.div_u() =>
i64.rem_s() =>
i64.rem_u() =>
i64.and() =>
i64.or() =>
i64.xor() =>
i64.shl() =>
i64.shr_s() =>
i64.shr_u() =>
i64.rotl() =>
i64.rotr() =>
f32.abs() =>
f32.neg() =>
f32.ceil() =>
f32.floor() =>
f32.trunc() =>
f32.nearest() =>
f32.sqrt() =>
f32.add() =>
f32.sub() =>
f32.mul() =>
f32.div() =>
f32.min() =>
f32.max() =>
f32.copysign() =>
f64.abs() =>
f64.neg() =>
f64.ceil() =>
f64.floor() =>
f64.trunc() =>
f64.nearest() =>
f64.sqrt() =>
f64.add() =>
f64.sub() =>
f64.mul() =>
f64.div() =>
f64.min() =>
f64.max() =>
f64.copysign() =>
i32.wrap/i64() =>
i32.trunc_s/f32() =>
i32.trunc_u/f32() =>
i32.trunc_s/f64() =>
i32.trunc_u/f64() =>
i64.extend_s/i32() =>
i64.extend_u/i32() =>
i64.trunc_s/f32() =>
i64.trunc_u/f32() =>
i64.trunc_s/f64() =>
i64.trunc_u/f64() =>
f32.convert_s/i32() =>
f32.convert_u/i32() =>
f32.convert_s/i64() =>
f32.convert_u/i64() =>
f32.demote/f64() =>
f64.convert_s/i32() =>
f64.convert_u/i32() =>
f64.convert_s/i64() =>
f64.convert_u/i64() =>
f64.promote/f32() =>
i32.reinterpret/f32() =>
f32.reinterpret/i32() =>
i64.reinterpret/f64() =>
f64.reinterpret/i64() =>
i32.extend8_s() =>
i32.extend16_s() =>
i64.extend8_s() =>
i64.extend16_s() =>
i64.extend32_s() =>
alloca() =>
br_unless() =>
called host host.print(i32:1) =>
call_host() =>
data() =>
drop_keep() =>
i32.trunc_s:sat/f32() =>
i32.trunc_u:sat/f32() =>
i32.trunc_s:sat/f64() =>
i32.trunc_u:sat/f64() =>
i64.trunc_s:sat/f32() =>
i64.trunc_u:sat/f32() =>
i64.trunc_s:sat/f64() =>
i64.trunc_u:sat/f64() =>
memory.init() => error: out of bounds memory access: memory.init out of bounds
data.drop() =>
memory.copy() =>
memory.fill() =>
table.init() => error: element segment dropped
elem.drop() => error: element segment dropped
table.copy() => error: out of bounds table access: table.copy out of bounds
v128.load() =>
v128.store() =>
v128.const() =>
i8x16.splat() =>
i8x16.extract_lane_s() =>
i8x16.extract_lane_u() =>
i8x16.replace_lane() =>
i16x8.splat() =>
i16x8.extract_lane_s() =>
i16x8.extract_lane_u() =>
i16x8.replace_lane() =>
i32x4.splat() =>
i32x4.extract_lane() =>
i32x4.replace_lane() =>
i64x2.splat() =>
i64x2.extract_lane() =>
i64x2.replace_lane() =>
f32x4.splat() =>
f32x4.extract_lane() =>
f32x4.replace_lane() =>
f64x2.splat() =>
f64x2.extract_lane() =>
f64x2.replace_lane() =>
i8x16.eq() =>
i8x16.ne() =>
i8x16.lt_s() =>
i8x16.lt_u() =>
i8x16.gt_s() =>
i8x16.gt_u() =>
i8x16.le_s() =>
i8x16.le_u() =>
i8x16.ge_s() =>
i8x16.ge_u() =>
i16x8.eq() =>
i16x8.ne() =>
i16x8.lt_s() =>
i16x8.lt_u() =>
i16x8.gt_s() =>
i16x8.gt_u() =>
i16x8.le_s() =>
i16x8.le_u() =>
i16x8.ge_s() =>
i16x8.ge_u() =>
i32x4.eq() =>
i32x4.ne() =>
i32x4.lt_s() =>
i32x4.lt_u() =>
i32x4.gt_s() =>
i32x4.gt_u() =>
i32x4.le_s() =>
i32x4.le_u() =>
i32x4.ge_s() =>
i32x4.ge_u() =>
f32x4.eq() =>
f32x4.ne() =>
f32x4.lt() =>
f32x4.gt() =>
f32x4.le() =>
f32x4.ge() =>
f64x2.eq() =>
f64x2.ne() =>
f64x2.lt() =>
f64x2.gt() =>
f64x2.le() =>
f64x2.ge() =>
v128.not() =>
v128.and() =>
v128.or() =>
v128.xor() =>
v128.bitselect() =>
i8x16.neg() =>
i8x16.any_true() =>
i8x16.all_true() =>
i8x16.shl() =>
i8x16.shr_s() =>
i8x16.shr_u() =>
i8x16.add() =>
i8x16.add_saturate_s() =>
i8x16.add_saturate_u() =>
i8x16.sub() =>
i8x16.sub_saturate_s() =>
i8x16.sub_saturate_u() =>
i8x16.mul() =>
i16x8.neg() =>
i16x8.any_true() =>
i16x8.all_true() =>
i16x8.shl() =>
i16x8.shr_s() =>
i16x8.shr_u() =>
i16x8.add() =>
i16x8.add_saturate_s() =>
i16x8.add_saturate_u() =>
i16x8.sub() =>
i16x8.sub_saturate_s() =>
i16x8.sub_saturate_u() =>
i16x8.mul() =>
i32x4.neg() =>
i32x4.any_true() =>
i32x4.all_true() =>
i32x4.shl() =>
i32x4.shr_s() =>
i32x4.shr_u() =>
i32x4.add() =>
i32x4.sub() =>
i32x4.mul() =>
i64x2.neg() =>
i64x2.any_true() =>
i64x2.all_true() =>
i64x2.shl() =>
i64x2.shr_s() =>
i64x2.shr_u() =>
i64x2.add() =>
i64x2.sub() =>
f32x4.abs() =>
f32x4.neg() =>
f32x4.sqrt() =>
f32x4.add() =>
f32x4.sub() =>
f32x4.mul() =>
f32x4.div() =>
f32x4.min() =>
f32x4.max() =>
f64x2.abs() =>
f64x2.neg() =>
f64x2.sqrt() =>
f64x2.add() =>
f64x2.sub() =>
f64x2.mul() =>
f64x2.div() =>
f64x2.min() =>
f64x2.max() =>
i32x4.trunc_sat_f32x4_s() =>
i32x4.trunc_sat_f32x4_u() =>
i64x2.trunc_sat_f64x2_s() =>
i64x2.trunc_sat_f64x2_u() =>
f32x4.convert_i32x4_s() =>
f32x4.convert_i32x4_u() =>
f64x2.convert_i64x2_s() =>
f64x2.convert_i64x2_u() =>
v8x16.swizzle() =>
v8x16.shuffle() =>
i8x16.load_splat() =>
i16x8.load_splat() =>
i32x4.load_splat() =>
i64x2.load_splat() =>
atomic.notify() => error: unreachable executed
i32.atomic.wait() => error: unreachable executed
i64.atomic.wait() => error: unreachable executed
i32.atomic.load() =>
i64.atomic.load() =>
i32.atomic.load8_u() =>
i32.atomic.load16_u() =>
i64.atomic.load8_u() =>
i64.atomic.load16_u() =>
i64.atomic.load32_u() =>
i32.atomic.store() =>
i64.atomic.store() =>
i32.atomic.store8() =>
i32.atomic.store16() =>
i64.atomic.store8() =>
i64.atomic.store16() =>
i64.atomic.store32() =>
i32.atomic.rmw.add() =>
i64.atomic.rmw.add() =>
i32.atomic.rmw8.add_u() =>
i32.atomic.rmw16.add_u() =>
i64.atomic.rmw8.add_u() =>
i64.atomic.rmw16.add_u() =>
i64.atomic.rmw32.add_u() =>
i32.atomic.rmw.sub() =>
i64.atomic.rmw.sub() =>
i32.atomic.rmw8.sub_u() =>
i32.atomic.rmw16.sub_u() =>
i64.atomic.rmw8.sub_u() =>
i64.atomic.rmw16.sub_u() =>
i64.atomic.rmw32.sub_u() =>
i32.atomic.rmw.and() =>
i64.atomic.rmw.and() =>
i32.atomic.rmw8.and_u() =>
i32.atomic.rmw16.and_u() =>
i64.atomic.rmw8.and_u() =>
i64.atomic.rmw16.and_u() =>
i64.atomic.rmw32.and_u() =>
i32.atomic.rmw.or() =>
i64.atomic.rmw.or() =>
i32.atomic.rmw8.or_u() =>
i32.atomic.rmw16.or_u() =>
i64.atomic.rmw8.or_u() =>
i64.atomic.rmw16.or_u() =>
i64.atomic.rmw32.or_u() =>
i32.atomic.rmw.xor() =>
i64.atomic.rmw.xor() =>
i32.atomic.rmw8.xor_u() =>
i32.atomic.rmw16.xor_u() =>
i64.atomic.rmw8.xor_u() =>
i64.atomic.rmw16.xor_u() =>
i64.atomic.rmw32.xor_u() =>
i32.atomic.rmw.xchg() =>
i64.atomic.rmw.xchg() =>
i32.atomic.rmw8.xchg_u() =>
i32.atomic.rmw16.xchg_u() =>
i64.atomic.rmw8.xchg_u() =>
i64.atomic.rmw16.xchg_u() =>
i64.atomic.rmw32.xchg_u() =>
i32.atomic.rmw.cmpxchg() =>
i64.atomic.rmw.cmpxchg() =>
i32.atomic.rmw8.cmpxchg_u() =>
i32.atomic.rmw16.cmpxchg_u() =>
i64.atomic.rmw8.cmpxchg_u() =>
i64.atomic.rmw16.cmpxchg_u() =>
i64.atomic.rmw32.cmpxchg_u() =>
;;; STDOUT ;;)
